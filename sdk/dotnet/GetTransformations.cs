// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    public static class GetTransformations
    {
        /// <summary>
        /// Returns a list of all transformations available via API within your Fivetran account.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Fivetran.GetTransformations.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTransformationsResult> InvokeAsync(GetTransformationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransformationsResult>("fivetran:index/getTransformations:getTransformations", args ?? new GetTransformationsArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a list of all transformations available via API within your Fivetran account.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Fivetran.GetTransformations.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransformationsResult> Invoke(GetTransformationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransformationsResult>("fivetran:index/getTransformations:getTransformations", args ?? new GetTransformationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a list of all transformations available via API within your Fivetran account.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Fivetran.GetTransformations.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransformationsResult> Invoke(GetTransformationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransformationsResult>("fivetran:index/getTransformations:getTransformations", args ?? new GetTransformationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransformationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("transformations")]
        private List<Inputs.GetTransformationsTransformationArgs>? _transformations;
        public List<Inputs.GetTransformationsTransformationArgs> Transformations
        {
            get => _transformations ?? (_transformations = new List<Inputs.GetTransformationsTransformationArgs>());
            set => _transformations = value;
        }

        public GetTransformationsArgs()
        {
        }
        public static new GetTransformationsArgs Empty => new GetTransformationsArgs();
    }

    public sealed class GetTransformationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("transformations")]
        private InputList<Inputs.GetTransformationsTransformationInputArgs>? _transformations;
        public InputList<Inputs.GetTransformationsTransformationInputArgs> Transformations
        {
            get => _transformations ?? (_transformations = new InputList<Inputs.GetTransformationsTransformationInputArgs>());
            set => _transformations = value;
        }

        public GetTransformationsInvokeArgs()
        {
        }
        public static new GetTransformationsInvokeArgs Empty => new GetTransformationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransformationsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetTransformationsTransformationResult> Transformations;

        [OutputConstructor]
        private GetTransformationsResult(
            string id,

            ImmutableArray<Outputs.GetTransformationsTransformationResult> transformations)
        {
            Id = id;
            Transformations = transformations;
        }
    }
}
