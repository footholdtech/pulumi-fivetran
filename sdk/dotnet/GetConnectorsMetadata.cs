// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    public static class GetConnectorsMetadata
    {
        /// <summary>
        /// This data source returns all available source types within your Fivetran account. This data source makes it easier to display Fivetran connectors within your application because it provides metadata including the proper source name (‘Facebook Ad Account’ instead of facebook_ad_account), the source icon, and links to Fivetran resources. As we update source names and icons, that metadata will automatically update within this endpoint.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sources = Fivetran.GetConnectorsMetadata.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConnectorsMetadataResult> InvokeAsync(GetConnectorsMetadataArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectorsMetadataResult>("fivetran:index/getConnectorsMetadata:getConnectorsMetadata", args ?? new GetConnectorsMetadataArgs(), options.WithDefaults());

        /// <summary>
        /// This data source returns all available source types within your Fivetran account. This data source makes it easier to display Fivetran connectors within your application because it provides metadata including the proper source name (‘Facebook Ad Account’ instead of facebook_ad_account), the source icon, and links to Fivetran resources. As we update source names and icons, that metadata will automatically update within this endpoint.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sources = Fivetran.GetConnectorsMetadata.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConnectorsMetadataResult> Invoke(GetConnectorsMetadataInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectorsMetadataResult>("fivetran:index/getConnectorsMetadata:getConnectorsMetadata", args ?? new GetConnectorsMetadataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectorsMetadataArgs : global::Pulumi.InvokeArgs
    {
        [Input("sources")]
        private List<Inputs.GetConnectorsMetadataSourceArgs>? _sources;
        public List<Inputs.GetConnectorsMetadataSourceArgs> Sources
        {
            get => _sources ?? (_sources = new List<Inputs.GetConnectorsMetadataSourceArgs>());
            set => _sources = value;
        }

        public GetConnectorsMetadataArgs()
        {
        }
        public static new GetConnectorsMetadataArgs Empty => new GetConnectorsMetadataArgs();
    }

    public sealed class GetConnectorsMetadataInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("sources")]
        private InputList<Inputs.GetConnectorsMetadataSourceInputArgs>? _sources;
        public InputList<Inputs.GetConnectorsMetadataSourceInputArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.GetConnectorsMetadataSourceInputArgs>());
            set => _sources = value;
        }

        public GetConnectorsMetadataInvokeArgs()
        {
        }
        public static new GetConnectorsMetadataInvokeArgs Empty => new GetConnectorsMetadataInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectorsMetadataResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetConnectorsMetadataSourceResult> Sources;

        [OutputConstructor]
        private GetConnectorsMetadataResult(
            string id,

            ImmutableArray<Outputs.GetConnectorsMetadataSourceResult> sources)
        {
            Id = id;
            Sources = sources;
        }
    }
}
