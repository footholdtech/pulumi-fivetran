// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    /// <summary>
    /// ## Import
    /// 
    /// 1. To import an existing `fivetran_destination` resource into your Terraform state, you need to get **Destination Group ID** on the destination page in your Fivetran dashboard.
    /// 
    /// To retrieve existing groups, use the [fivetran_groups data source](/docs/data-sources/groups).
    /// 
    /// 2. Define an empty resource in your `.tf` configuration:
    /// 
    /// hcl
    /// 
    /// resource "fivetran_destination" "my_imported_destination" {
    /// 
    /// }
    /// 
    /// 3. Run the `pulumi import` command with the following parameters:
    /// 
    /// ```sh
    /// $ pulumi import fivetran:index/destination:Destination my_imported_destination {your Destination Group ID}
    /// ```
    /// 
    /// 4. Use the `terraform state show` command to get the values from the state:
    /// 
    /// terraform state show 'fivetran_destination.my_imported_destination'
    /// 
    /// 5. Copy the values and paste them to your `.tf` configuration.
    /// 
    /// -&gt; The `config` object in the state contains all properties defined in the schema. You need to remove properties from the `config` that are not related to destinations. See the [Fivetran REST API documentation](https://fivetran.com/docs/rest-api/destinations/config) for reference to find the properties you need to keep in the `config` section.
    /// </summary>
    [FivetranResourceType("fivetran:index/destination:Destination")]
    public partial class Destination : global::Pulumi.CustomResource
    {
        [Output("config")]
        public Output<Outputs.DestinationConfig?> Config { get; private set; } = null!;

        /// <summary>
        /// Shift my UTC offset with daylight savings time (US Only)
        /// </summary>
        [Output("daylightSavingTimeEnabled")]
        public Output<bool> DaylightSavingTimeEnabled { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the Group within the Fivetran system.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the
        /// value is specified, the system will try to associate the connection with an existing agent.
        /// </summary>
        [Output("hybridDeploymentAgentId")]
        public Output<string?> HybridDeploymentAgentId { get; private set; } = null!;

        /// <summary>
        /// (Deprecated) The hybrid deployment agent ID that refers to the controller created for the group the connection belongs
        /// to. If the value is specified, the system will try to associate the connection with an existing agent.
        /// </summary>
        [Output("localProcessingAgentId")]
        public Output<string?> LocalProcessingAgentId { get; private set; } = null!;

        /// <summary>
        /// Possible values: Directly, SshTunnel, ProxyAgent.
        /// </summary>
        [Output("networkingMethod")]
        public Output<string> NetworkingMethod { get; private set; } = null!;

        /// <summary>
        /// The private link ID.
        /// </summary>
        [Output("privateLinkId")]
        public Output<string?> PrivateLinkId { get; private set; } = null!;

        /// <summary>
        /// Data processing location. This is where Fivetran will operate and run computation on data.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the setup tests should be run automatically. The default value is TRUE.
        /// </summary>
        [Output("runSetupTests")]
        public Output<bool> RunSetupTests { get; private set; } = null!;

        /// <summary>
        /// The destination type id within the Fivetran system.
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;

        /// <summary>
        /// Destination setup status.
        /// </summary>
        [Output("setupStatus")]
        public Output<string> SetupStatus { get; private set; } = null!;

        /// <summary>
        /// Determines the time zone for the Fivetran sync schedule.
        /// </summary>
        [Output("timeZoneOffset")]
        public Output<string> TimeZoneOffset { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.DestinationTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
        /// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
        /// certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
        /// </summary>
        [Output("trustCertificates")]
        public Output<bool> TrustCertificates { get; private set; } = null!;

        /// <summary>
        /// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
        /// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
        /// fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
        /// </summary>
        [Output("trustFingerprints")]
        public Output<bool> TrustFingerprints { get; private set; } = null!;


        /// <summary>
        /// Create a Destination resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Destination(string name, DestinationArgs args, CustomResourceOptions? options = null)
            : base("fivetran:index/destination:Destination", name, args ?? new DestinationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Destination(string name, Input<string> id, DestinationState? state = null, CustomResourceOptions? options = null)
            : base("fivetran:index/destination:Destination", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/footholdtech/pulumi-fivetran",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Destination resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Destination Get(string name, Input<string> id, DestinationState? state = null, CustomResourceOptions? options = null)
        {
            return new Destination(name, id, state, options);
        }
    }

    public sealed class DestinationArgs : global::Pulumi.ResourceArgs
    {
        [Input("config")]
        public Input<Inputs.DestinationConfigArgs>? Config { get; set; }

        /// <summary>
        /// Shift my UTC offset with daylight savings time (US Only)
        /// </summary>
        [Input("daylightSavingTimeEnabled")]
        public Input<bool>? DaylightSavingTimeEnabled { get; set; }

        /// <summary>
        /// The unique identifier for the Group within the Fivetran system.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the
        /// value is specified, the system will try to associate the connection with an existing agent.
        /// </summary>
        [Input("hybridDeploymentAgentId")]
        public Input<string>? HybridDeploymentAgentId { get; set; }

        /// <summary>
        /// (Deprecated) The hybrid deployment agent ID that refers to the controller created for the group the connection belongs
        /// to. If the value is specified, the system will try to associate the connection with an existing agent.
        /// </summary>
        [Input("localProcessingAgentId")]
        public Input<string>? LocalProcessingAgentId { get; set; }

        /// <summary>
        /// Possible values: Directly, SshTunnel, ProxyAgent.
        /// </summary>
        [Input("networkingMethod")]
        public Input<string>? NetworkingMethod { get; set; }

        /// <summary>
        /// The private link ID.
        /// </summary>
        [Input("privateLinkId")]
        public Input<string>? PrivateLinkId { get; set; }

        /// <summary>
        /// Data processing location. This is where Fivetran will operate and run computation on data.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// Specifies whether the setup tests should be run automatically. The default value is TRUE.
        /// </summary>
        [Input("runSetupTests")]
        public Input<bool>? RunSetupTests { get; set; }

        /// <summary>
        /// The destination type id within the Fivetran system.
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        /// <summary>
        /// Determines the time zone for the Fivetran sync schedule.
        /// </summary>
        [Input("timeZoneOffset", required: true)]
        public Input<string> TimeZoneOffset { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.DestinationTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
        /// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
        /// certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
        /// </summary>
        [Input("trustCertificates")]
        public Input<bool>? TrustCertificates { get; set; }

        /// <summary>
        /// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
        /// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
        /// fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
        /// </summary>
        [Input("trustFingerprints")]
        public Input<bool>? TrustFingerprints { get; set; }

        public DestinationArgs()
        {
        }
        public static new DestinationArgs Empty => new DestinationArgs();
    }

    public sealed class DestinationState : global::Pulumi.ResourceArgs
    {
        [Input("config")]
        public Input<Inputs.DestinationConfigGetArgs>? Config { get; set; }

        /// <summary>
        /// Shift my UTC offset with daylight savings time (US Only)
        /// </summary>
        [Input("daylightSavingTimeEnabled")]
        public Input<bool>? DaylightSavingTimeEnabled { get; set; }

        /// <summary>
        /// The unique identifier for the Group within the Fivetran system.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the
        /// value is specified, the system will try to associate the connection with an existing agent.
        /// </summary>
        [Input("hybridDeploymentAgentId")]
        public Input<string>? HybridDeploymentAgentId { get; set; }

        /// <summary>
        /// (Deprecated) The hybrid deployment agent ID that refers to the controller created for the group the connection belongs
        /// to. If the value is specified, the system will try to associate the connection with an existing agent.
        /// </summary>
        [Input("localProcessingAgentId")]
        public Input<string>? LocalProcessingAgentId { get; set; }

        /// <summary>
        /// Possible values: Directly, SshTunnel, ProxyAgent.
        /// </summary>
        [Input("networkingMethod")]
        public Input<string>? NetworkingMethod { get; set; }

        /// <summary>
        /// The private link ID.
        /// </summary>
        [Input("privateLinkId")]
        public Input<string>? PrivateLinkId { get; set; }

        /// <summary>
        /// Data processing location. This is where Fivetran will operate and run computation on data.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Specifies whether the setup tests should be run automatically. The default value is TRUE.
        /// </summary>
        [Input("runSetupTests")]
        public Input<bool>? RunSetupTests { get; set; }

        /// <summary>
        /// The destination type id within the Fivetran system.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Destination setup status.
        /// </summary>
        [Input("setupStatus")]
        public Input<string>? SetupStatus { get; set; }

        /// <summary>
        /// Determines the time zone for the Fivetran sync schedule.
        /// </summary>
        [Input("timeZoneOffset")]
        public Input<string>? TimeZoneOffset { get; set; }

        [Input("timeouts")]
        public Input<Inputs.DestinationTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
        /// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
        /// certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
        /// </summary>
        [Input("trustCertificates")]
        public Input<bool>? TrustCertificates { get; set; }

        /// <summary>
        /// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
        /// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
        /// fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
        /// </summary>
        [Input("trustFingerprints")]
        public Input<bool>? TrustFingerprints { get; set; }

        public DestinationState()
        {
        }
        public static new DestinationState Empty => new DestinationState();
    }
}
