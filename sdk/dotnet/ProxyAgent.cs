// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    /// <summary>
    /// This resource allows you to create, update, and delete proxy agent.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fivetran = Footholdtech.Fivetran;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testProxyAgent = new Fivetran.ProxyAgent("test_proxy_agent", new()
    ///     {
    ///         DisplayName = "display_name",
    ///         GroupRegion = "group_region",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [FivetranResourceType("fivetran:index/proxyAgent:ProxyAgent")]
    public partial class ProxyAgent : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The actor who created the proxy agent.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// Proxy agent name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Data processing location. This is where Fivetran will operate and run computation on data.
        /// </summary>
        [Output("groupRegion")]
        public Output<string> GroupRegion { get; private set; } = null!;

        /// <summary>
        /// The proxy server URI.
        /// </summary>
        [Output("proxyServerUri")]
        public Output<string> ProxyServerUri { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the time the proxy agent was created in your account.
        /// </summary>
        [Output("registredAt")]
        public Output<string> RegistredAt { get; private set; } = null!;

        /// <summary>
        /// The salt.
        /// </summary>
        [Output("salt")]
        public Output<string> Salt { get; private set; } = null!;

        /// <summary>
        /// The auth token.
        /// </summary>
        [Output("token")]
        public Output<string> Token { get; private set; } = null!;


        /// <summary>
        /// Create a ProxyAgent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProxyAgent(string name, ProxyAgentArgs args, CustomResourceOptions? options = null)
            : base("fivetran:index/proxyAgent:ProxyAgent", name, args ?? new ProxyAgentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProxyAgent(string name, Input<string> id, ProxyAgentState? state = null, CustomResourceOptions? options = null)
            : base("fivetran:index/proxyAgent:ProxyAgent", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/footholdtech/pulumi-fivetran",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProxyAgent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProxyAgent Get(string name, Input<string> id, ProxyAgentState? state = null, CustomResourceOptions? options = null)
        {
            return new ProxyAgent(name, id, state, options);
        }
    }

    public sealed class ProxyAgentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Proxy agent name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Data processing location. This is where Fivetran will operate and run computation on data.
        /// </summary>
        [Input("groupRegion", required: true)]
        public Input<string> GroupRegion { get; set; } = null!;

        public ProxyAgentArgs()
        {
        }
        public static new ProxyAgentArgs Empty => new ProxyAgentArgs();
    }

    public sealed class ProxyAgentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The actor who created the proxy agent.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// Proxy agent name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Data processing location. This is where Fivetran will operate and run computation on data.
        /// </summary>
        [Input("groupRegion")]
        public Input<string>? GroupRegion { get; set; }

        /// <summary>
        /// The proxy server URI.
        /// </summary>
        [Input("proxyServerUri")]
        public Input<string>? ProxyServerUri { get; set; }

        /// <summary>
        /// The timestamp of the time the proxy agent was created in your account.
        /// </summary>
        [Input("registredAt")]
        public Input<string>? RegistredAt { get; set; }

        /// <summary>
        /// The salt.
        /// </summary>
        [Input("salt")]
        public Input<string>? Salt { get; set; }

        /// <summary>
        /// The auth token.
        /// </summary>
        [Input("token")]
        public Input<string>? Token { get; set; }

        public ProxyAgentState()
        {
        }
        public static new ProxyAgentState Empty => new ProxyAgentState();
    }
}
