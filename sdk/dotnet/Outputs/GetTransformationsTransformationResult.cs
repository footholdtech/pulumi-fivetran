// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran.Outputs
{

    [OutputType]
    public sealed class GetTransformationsTransformationResult
    {
        /// <summary>
        /// The timestamp of when the transformation was created in your account.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The unique identifier for the User within the Fivetran system who created the transformation.
        /// </summary>
        public readonly string CreatedById;
        /// <summary>
        /// The unique identifier for the Transformation within the Fivetran system.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifiers of related models.
        /// </summary>
        public readonly ImmutableArray<string> OutputModelNames;
        /// <summary>
        /// The field indicating whether the transformation will be set into the paused state. By default, the value is false.
        /// </summary>
        public readonly bool Paused;
        public readonly Outputs.GetTransformationsTransformationScheduleResult? Schedule;
        /// <summary>
        /// Status of transformation Project (NOT_READY, READY, ERROR).
        /// </summary>
        public readonly string Status;
        public readonly Outputs.GetTransformationsTransformationTransformationConfigResult? TransformationConfig;
        /// <summary>
        /// Transformation type. The following values are supported: DBT_CORE, QUICKSTART.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTransformationsTransformationResult(
            string createdAt,

            string createdById,

            string id,

            ImmutableArray<string> outputModelNames,

            bool paused,

            Outputs.GetTransformationsTransformationScheduleResult? schedule,

            string status,

            Outputs.GetTransformationsTransformationTransformationConfigResult? transformationConfig,

            string type)
        {
            CreatedAt = createdAt;
            CreatedById = createdById;
            Id = id;
            OutputModelNames = outputModelNames;
            Paused = paused;
            Schedule = schedule;
            Status = status;
            TransformationConfig = transformationConfig;
            Type = type;
        }
    }
}
