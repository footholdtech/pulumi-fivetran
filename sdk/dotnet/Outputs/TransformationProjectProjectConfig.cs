// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran.Outputs
{

    [OutputType]
    public sealed class TransformationProjectProjectConfig
    {
        /// <summary>
        /// The version of transformation that should run the project
        /// </summary>
        public readonly string? DbtVersion;
        /// <summary>
        /// Default schema in destination. This production schema will contain your transformed data.
        /// </summary>
        public readonly string? DefaultSchema;
        /// <summary>
        /// List of environment variables defined as key-value pairs in the raw string format using = as a separator. The variable name should have the DBT_ prefix and can contain A-Z, 0-9, dash, underscore, or dot characters. Example: "DBT*VARIABLE=variable*value"
        /// </summary>
        public readonly ImmutableArray<string> EnvironmentVars;
        /// <summary>
        /// Folder in Git repo with your transformation project
        /// </summary>
        public readonly string? FolderPath;
        /// <summary>
        /// Git branch
        /// </summary>
        public readonly string? GitBranch;
        /// <summary>
        /// Git remote URL with your transformation project
        /// </summary>
        public readonly string? GitRemoteUrl;
        /// <summary>
        /// Public key to grant Fivetran SSH access to git repository.
        /// </summary>
        public readonly string? PublicKey;
        /// <summary>
        /// Target name to set or override the value from the deployment.yaml
        /// </summary>
        public readonly string? TargetName;
        /// <summary>
        /// The number of threads transformation will use (from 1 to 32). Make sure this value is compatible with your destination type. For example, Snowflake supports only 8 concurrent queries on an X-Small warehouse.
        /// </summary>
        public readonly int? Threads;

        [OutputConstructor]
        private TransformationProjectProjectConfig(
            string? dbtVersion,

            string? defaultSchema,

            ImmutableArray<string> environmentVars,

            string? folderPath,

            string? gitBranch,

            string? gitRemoteUrl,

            string? publicKey,

            string? targetName,

            int? threads)
        {
            DbtVersion = dbtVersion;
            DefaultSchema = defaultSchema;
            EnvironmentVars = environmentVars;
            FolderPath = folderPath;
            GitBranch = gitBranch;
            GitRemoteUrl = gitRemoteUrl;
            PublicKey = publicKey;
            TargetName = targetName;
            Threads = threads;
        }
    }
}
