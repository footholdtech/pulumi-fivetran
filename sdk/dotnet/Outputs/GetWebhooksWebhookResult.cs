// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran.Outputs
{

    [OutputType]
    public sealed class GetWebhooksWebhookResult
    {
        /// <summary>
        /// Boolean, if set to true, webhooks are immediately sent in response to events
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// The webhook creation timestamp
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The ID of the user who created the webhook.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// The array of event types
        /// </summary>
        public readonly ImmutableArray<string> Events;
        /// <summary>
        /// The group ID
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// The webhook ID
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specifies whether the setup tests should be run
        /// </summary>
        public readonly bool RunTests;
        /// <summary>
        /// The secret string used for payload signing and masked in the response.
        /// </summary>
        public readonly string Secret;
        /// <summary>
        /// The webhook type (group, account)
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Your webhooks URL endpoint for your application
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private GetWebhooksWebhookResult(
            bool active,

            string createdAt,

            string createdBy,

            ImmutableArray<string> events,

            string groupId,

            string id,

            bool runTests,

            string secret,

            string type,

            string url)
        {
            Active = active;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            Events = events;
            GroupId = groupId;
            Id = id;
            RunTests = runTests;
            Secret = secret;
            Type = type;
            Url = url;
        }
    }
}
