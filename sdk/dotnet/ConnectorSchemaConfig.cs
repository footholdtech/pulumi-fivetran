// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    /// <summary>
    /// ## ---
    /// 
    /// page_title: "Resource: fivetran.ConnectorSchemaConfig"
    /// ---
    /// 
    /// # Resource: fivetran.ConnectorSchemaConfig
    /// 
    /// This resource allows you to manage the Standard Configuration settings of a connector:
    ///  - Define the schema change handling settings
    ///  - Enable and disable schemas, tables, and columns
    /// 
    /// The resource is in **ALPHA** state. The resource schema and behavior are subject to change without prior notice.
    /// 
    /// Known issues:
    ///  - Definition of `sync_mode` for table causes infinite drifting changes in plan
    /// 
    /// ## Usage guide
    /// 
    /// Note that all configuration settings are aligned to the `schema_change_handling` settings,  except the settings explicitly specified in `schema`.
    /// In `schema`, you only override the default settings defined by the chosen `schema_change_handling` option. The default value for the `enabled` attribute is `true` so it can be omitted when you want to enable schemas, tables, or columns.
    /// The allowed `schema_change_handling` options are as follows:
    /// - `ALLOW_ALL`- all schemas, tables and columns are ENABLED by default. You only need  to explicitly specify DISABLED items or hashed tables
    /// - `BLOCK_ALL` - all schemas, tables and columns are DISABLED by default, the configuration only specifies ENABLED items
    /// - `ALLOW_COLUMNS` - all schemas and tables are DISABLED by default, but all columns are ENABLED by default, the configuration specifies ENABLED schemas and tables, and DISABLED columns
    /// 
    /// Note that system-enabled tables and columns (such as primary and foreign key columns, and [system tables and columns](https://fivetran.com/docs/getting-started/system-columns-and-tables)) are synced regardless of the `schema_change_handling` settings and configuration. You can only disable non-locked columns in the system-enabled tables. If the configuration specifies any system tables or locked system table columns as disabled ( `enabled = "false"`), the provider just ignores these statements.
    /// 
    /// ## Usage examples
    /// 
    /// ## Import
    /// 
    /// 1. To import an existing `fivetran_connector_schema_config` resource into your Terraform state, you need to get **Fivetran Connector ID** on the **Setup** tab of the connector page in your Fivetran dashboard. 2. Retrieve all connectors in a particular group using the [fivetran_group_connectors data source](/docs/data-sources/group_connectors). To retrieve existing groups, use the [fivetran_groups data source](/docs/data-sources/groups). 3. Define an empty resource in your `.tf` configurationhcl resource "fivetran_connector_schema_config" "my_imported_connector_schema_config" { }
    /// 
    /// ```sh
    ///  $ pulumi import fivetran:index/connectorSchemaConfig:ConnectorSchemaConfig
    /// 
    /// Run the `terraform import` command
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import fivetran:index/connectorSchemaConfig:ConnectorSchemaConfig my_imported_connector_schema_config {your Fivetran Connector ID}
    /// ```
    /// 
    /// 5.  
    /// 
    /// Use the `terraform state show` command to get the values from the stateterraform state show 'fivetran_connector_schema_config.my_imported_connector_schema_config' 6. Copy the values and paste them to your `.tf` configuration.
    /// </summary>
    [FivetranResourceType("fivetran:index/connectorSchemaConfig:ConnectorSchemaConfig")]
    public partial class ConnectorSchemaConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The unique identifier for the connector within the Fivetran system.
        /// </summary>
        [Output("connectorId")]
        public Output<string> ConnectorId { get; private set; } = null!;

        [Output("schemaChangeHandling")]
        public Output<string> SchemaChangeHandling { get; private set; } = null!;

        [Output("schemas")]
        public Output<ImmutableArray<Outputs.ConnectorSchemaConfigSchema>> Schemas { get; private set; } = null!;


        /// <summary>
        /// Create a ConnectorSchemaConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConnectorSchemaConfig(string name, ConnectorSchemaConfigArgs args, CustomResourceOptions? options = null)
            : base("fivetran:index/connectorSchemaConfig:ConnectorSchemaConfig", name, args ?? new ConnectorSchemaConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConnectorSchemaConfig(string name, Input<string> id, ConnectorSchemaConfigState? state = null, CustomResourceOptions? options = null)
            : base("fivetran:index/connectorSchemaConfig:ConnectorSchemaConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/footholdtech/pulumi-fivetran",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConnectorSchemaConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConnectorSchemaConfig Get(string name, Input<string> id, ConnectorSchemaConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new ConnectorSchemaConfig(name, id, state, options);
        }
    }

    public sealed class ConnectorSchemaConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier for the connector within the Fivetran system.
        /// </summary>
        [Input("connectorId", required: true)]
        public Input<string> ConnectorId { get; set; } = null!;

        [Input("schemaChangeHandling", required: true)]
        public Input<string> SchemaChangeHandling { get; set; } = null!;

        [Input("schemas")]
        private InputList<Inputs.ConnectorSchemaConfigSchemaArgs>? _schemas;
        public InputList<Inputs.ConnectorSchemaConfigSchemaArgs> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<Inputs.ConnectorSchemaConfigSchemaArgs>());
            set => _schemas = value;
        }

        public ConnectorSchemaConfigArgs()
        {
        }
        public static new ConnectorSchemaConfigArgs Empty => new ConnectorSchemaConfigArgs();
    }

    public sealed class ConnectorSchemaConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier for the connector within the Fivetran system.
        /// </summary>
        [Input("connectorId")]
        public Input<string>? ConnectorId { get; set; }

        [Input("schemaChangeHandling")]
        public Input<string>? SchemaChangeHandling { get; set; }

        [Input("schemas")]
        private InputList<Inputs.ConnectorSchemaConfigSchemaGetArgs>? _schemas;
        public InputList<Inputs.ConnectorSchemaConfigSchemaGetArgs> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<Inputs.ConnectorSchemaConfigSchemaGetArgs>());
            set => _schemas = value;
        }

        public ConnectorSchemaConfigState()
        {
        }
        public static new ConnectorSchemaConfigState Empty => new ConnectorSchemaConfigState();
    }
}
