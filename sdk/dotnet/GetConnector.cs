// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    public static class GetConnector
    {
        /// <summary>
        /// This data source returns a connector object.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var connector = Fivetran.GetConnector.Invoke(new()
        ///     {
        ///         Id = "anonymous_mystery",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConnectorResult> InvokeAsync(GetConnectorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectorResult>("fivetran:index/getConnector:getConnector", args ?? new GetConnectorArgs(), options.WithDefaults());

        /// <summary>
        /// This data source returns a connector object.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var connector = Fivetran.GetConnector.Invoke(new()
        ///     {
        ///         Id = "anonymous_mystery",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConnectorResult> Invoke(GetConnectorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectorResult>("fivetran:index/getConnector:getConnector", args ?? new GetConnectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectorArgs : global::Pulumi.InvokeArgs
    {
        [Input("configs")]
        private List<Inputs.GetConnectorConfigArgs>? _configs;
        public List<Inputs.GetConnectorConfigArgs> Configs
        {
            get => _configs ?? (_configs = new List<Inputs.GetConnectorConfigArgs>());
            set => _configs = value;
        }

        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetConnectorArgs()
        {
        }
        public static new GetConnectorArgs Empty => new GetConnectorArgs();
    }

    public sealed class GetConnectorInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("configs")]
        private InputList<Inputs.GetConnectorConfigInputArgs>? _configs;
        public InputList<Inputs.GetConnectorConfigInputArgs> Configs
        {
            get => _configs ?? (_configs = new InputList<Inputs.GetConnectorConfigInputArgs>());
            set => _configs = value;
        }

        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetConnectorInvokeArgs()
        {
        }
        public static new GetConnectorInvokeArgs Empty => new GetConnectorInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectorResult
    {
        public readonly ImmutableArray<Outputs.GetConnectorConfigResult> Configs;
        public readonly string ConnectedBy;
        public readonly string CreatedAt;
        public readonly string DailySyncTime;
        public readonly ImmutableArray<Outputs.GetConnectorDestinationSchemaResult> DestinationSchemas;
        public readonly string FailedAt;
        public readonly string GroupId;
        public readonly string Id;
        public readonly string Name;
        public readonly string PauseAfterTrial;
        public readonly string Paused;
        public readonly string ScheduleType;
        public readonly string Service;
        public readonly string ServiceVersion;
        public readonly ImmutableArray<Outputs.GetConnectorStatusResult> Statuses;
        public readonly string SucceededAt;
        public readonly string SyncFrequency;

        [OutputConstructor]
        private GetConnectorResult(
            ImmutableArray<Outputs.GetConnectorConfigResult> configs,

            string connectedBy,

            string createdAt,

            string dailySyncTime,

            ImmutableArray<Outputs.GetConnectorDestinationSchemaResult> destinationSchemas,

            string failedAt,

            string groupId,

            string id,

            string name,

            string pauseAfterTrial,

            string paused,

            string scheduleType,

            string service,

            string serviceVersion,

            ImmutableArray<Outputs.GetConnectorStatusResult> statuses,

            string succeededAt,

            string syncFrequency)
        {
            Configs = configs;
            ConnectedBy = connectedBy;
            CreatedAt = createdAt;
            DailySyncTime = dailySyncTime;
            DestinationSchemas = destinationSchemas;
            FailedAt = failedAt;
            GroupId = groupId;
            Id = id;
            Name = name;
            PauseAfterTrial = pauseAfterTrial;
            Paused = paused;
            ScheduleType = scheduleType;
            Service = service;
            ServiceVersion = serviceVersion;
            Statuses = statuses;
            SucceededAt = succeededAt;
            SyncFrequency = syncFrequency;
        }
    }
}
