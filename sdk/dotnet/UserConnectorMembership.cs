// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    /// <summary>
    /// This resource allows you to create, update, and delete connector membership for user
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fivetran = Footholdtech.Fivetran;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testUserConnectorMembership = new Fivetran.UserConnectorMembership("testUserConnectorMembership", new()
    ///     {
    ///         UserId = "test_user",
    ///         Connectors = new[]
    ///         {
    ///             new Fivetran.Inputs.UserConnectorMembershipConnectorArgs
    ///             {
    ///                 ConnectorId = "test_connector",
    ///                 Role = "Connector Administrator",
    ///                 CreatedAt = "2020-05-25T15:26:47.306509Z",
    ///             },
    ///             new Fivetran.Inputs.UserConnectorMembershipConnectorArgs
    ///             {
    ///                 ConnectorId = "test_connector",
    ///                 Role = "Connector Administrator",
    ///                 CreatedAt = "2020-05-25T15:26:47.306509Z",
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = fivetran_provider,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// 1. To import an existing `fivetran_user_connector_membership` resource into your Terraform state, you need to get `user_id` and `connector_id`
    /// 
    /// You can retrieve all users using the [fivetran_users data source](/docs/data-sources/users).
    /// 
    /// 2. Define an empty resource in your `.tf` configuration:
    /// 
    /// hcl
    /// 
    /// resource "fivetran_user_connector_membership" "my_imported_fivetran_user_connector_membership" {
    /// 
    /// }
    /// 
    /// 3. Run the `pulumi import` command:
    /// 
    /// ```sh
    /// $ pulumi import fivetran:index/userConnectorMembership:UserConnectorMembership my_imported_fivetran_user_connector_membership {user_id}
    /// ```
    /// 
    /// 4. Use the `terraform state show` command to get the values from the state:
    /// 
    /// terraform state show 'fivetran_user_connector_membership.my_imported_fivetran_user_connector_membership'
    /// 
    /// 5. Copy the values and paste them to your `.tf` configuration.
    /// </summary>
    [FivetranResourceType("fivetran:index/userConnectorMembership:UserConnectorMembership")]
    public partial class UserConnectorMembership : global::Pulumi.CustomResource
    {
        [Output("connectors")]
        public Output<ImmutableArray<Outputs.UserConnectorMembershipConnector>> Connectors { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the user within your account.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a UserConnectorMembership resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserConnectorMembership(string name, UserConnectorMembershipArgs args, CustomResourceOptions? options = null)
            : base("fivetran:index/userConnectorMembership:UserConnectorMembership", name, args ?? new UserConnectorMembershipArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserConnectorMembership(string name, Input<string> id, UserConnectorMembershipState? state = null, CustomResourceOptions? options = null)
            : base("fivetran:index/userConnectorMembership:UserConnectorMembership", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/footholdtech/pulumi-fivetran",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserConnectorMembership resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserConnectorMembership Get(string name, Input<string> id, UserConnectorMembershipState? state = null, CustomResourceOptions? options = null)
        {
            return new UserConnectorMembership(name, id, state, options);
        }
    }

    public sealed class UserConnectorMembershipArgs : global::Pulumi.ResourceArgs
    {
        [Input("connectors")]
        private InputList<Inputs.UserConnectorMembershipConnectorArgs>? _connectors;
        public InputList<Inputs.UserConnectorMembershipConnectorArgs> Connectors
        {
            get => _connectors ?? (_connectors = new InputList<Inputs.UserConnectorMembershipConnectorArgs>());
            set => _connectors = value;
        }

        /// <summary>
        /// The unique identifier for the user within your account.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public UserConnectorMembershipArgs()
        {
        }
        public static new UserConnectorMembershipArgs Empty => new UserConnectorMembershipArgs();
    }

    public sealed class UserConnectorMembershipState : global::Pulumi.ResourceArgs
    {
        [Input("connectors")]
        private InputList<Inputs.UserConnectorMembershipConnectorGetArgs>? _connectors;
        public InputList<Inputs.UserConnectorMembershipConnectorGetArgs> Connectors
        {
            get => _connectors ?? (_connectors = new InputList<Inputs.UserConnectorMembershipConnectorGetArgs>());
            set => _connectors = value;
        }

        /// <summary>
        /// The unique identifier for the user within your account.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public UserConnectorMembershipState()
        {
        }
        public static new UserConnectorMembershipState Empty => new UserConnectorMembershipState();
    }
}
