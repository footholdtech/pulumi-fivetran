// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    public static class GetGroupConnections
    {
        /// <summary>
        /// This data source returns a list of information about all connections within a group in your Fivetran account.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var groupConnections = Fivetran.GetGroupConnections.Invoke(new()
        ///     {
        ///         Id = "anonymous_mystery",
        ///         Schema = "connection_schema_name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGroupConnectionsResult> InvokeAsync(GetGroupConnectionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupConnectionsResult>("fivetran:index/getGroupConnections:getGroupConnections", args ?? new GetGroupConnectionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source returns a list of information about all connections within a group in your Fivetran account.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var groupConnections = Fivetran.GetGroupConnections.Invoke(new()
        ///     {
        ///         Id = "anonymous_mystery",
        ///         Schema = "connection_schema_name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGroupConnectionsResult> Invoke(GetGroupConnectionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupConnectionsResult>("fivetran:index/getGroupConnections:getGroupConnections", args ?? new GetGroupConnectionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source returns a list of information about all connections within a group in your Fivetran account.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var groupConnections = Fivetran.GetGroupConnections.Invoke(new()
        ///     {
        ///         Id = "anonymous_mystery",
        ///         Schema = "connection_schema_name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGroupConnectionsResult> Invoke(GetGroupConnectionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupConnectionsResult>("fivetran:index/getGroupConnections:getGroupConnections", args ?? new GetGroupConnectionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupConnectionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("connections")]
        private List<Inputs.GetGroupConnectionsConnectionArgs>? _connections;
        public List<Inputs.GetGroupConnectionsConnectionArgs> Connections
        {
            get => _connections ?? (_connections = new List<Inputs.GetGroupConnectionsConnectionArgs>());
            set => _connections = value;
        }

        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Optional filter. When defined, the data source will only contain information for the connection with the specified schema name.
        /// </summary>
        [Input("schema")]
        public string? Schema { get; set; }

        public GetGroupConnectionsArgs()
        {
        }
        public static new GetGroupConnectionsArgs Empty => new GetGroupConnectionsArgs();
    }

    public sealed class GetGroupConnectionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("connections")]
        private InputList<Inputs.GetGroupConnectionsConnectionInputArgs>? _connections;
        public InputList<Inputs.GetGroupConnectionsConnectionInputArgs> Connections
        {
            get => _connections ?? (_connections = new InputList<Inputs.GetGroupConnectionsConnectionInputArgs>());
            set => _connections = value;
        }

        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Optional filter. When defined, the data source will only contain information for the connection with the specified schema name.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        public GetGroupConnectionsInvokeArgs()
        {
        }
        public static new GetGroupConnectionsInvokeArgs Empty => new GetGroupConnectionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupConnectionsResult
    {
        public readonly ImmutableArray<Outputs.GetGroupConnectionsConnectionResult> Connections;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Optional filter. When defined, the data source will only contain information for the connection with the specified schema name.
        /// </summary>
        public readonly string? Schema;

        [OutputConstructor]
        private GetGroupConnectionsResult(
            ImmutableArray<Outputs.GetGroupConnectionsConnectionResult> connections,

            string id,

            string? schema)
        {
            Connections = connections;
            Id = id;
            Schema = schema;
        }
    }
}
