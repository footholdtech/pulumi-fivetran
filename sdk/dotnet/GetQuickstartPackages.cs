// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    public static class GetQuickstartPackages
    {
        /// <summary>
        /// Returns a list of available Quickstart transformation package metadata details
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var allPackagesMetadata = Fivetran.GetQuickstartPackages.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetQuickstartPackagesResult> InvokeAsync(GetQuickstartPackagesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQuickstartPackagesResult>("fivetran:index/getQuickstartPackages:getQuickstartPackages", args ?? new GetQuickstartPackagesArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a list of available Quickstart transformation package metadata details
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var allPackagesMetadata = Fivetran.GetQuickstartPackages.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetQuickstartPackagesResult> Invoke(GetQuickstartPackagesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQuickstartPackagesResult>("fivetran:index/getQuickstartPackages:getQuickstartPackages", args ?? new GetQuickstartPackagesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a list of available Quickstart transformation package metadata details
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var allPackagesMetadata = Fivetran.GetQuickstartPackages.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetQuickstartPackagesResult> Invoke(GetQuickstartPackagesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetQuickstartPackagesResult>("fivetran:index/getQuickstartPackages:getQuickstartPackages", args ?? new GetQuickstartPackagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQuickstartPackagesArgs : global::Pulumi.InvokeArgs
    {
        [Input("packages")]
        private List<Inputs.GetQuickstartPackagesPackageArgs>? _packages;
        public List<Inputs.GetQuickstartPackagesPackageArgs> Packages
        {
            get => _packages ?? (_packages = new List<Inputs.GetQuickstartPackagesPackageArgs>());
            set => _packages = value;
        }

        public GetQuickstartPackagesArgs()
        {
        }
        public static new GetQuickstartPackagesArgs Empty => new GetQuickstartPackagesArgs();
    }

    public sealed class GetQuickstartPackagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("packages")]
        private InputList<Inputs.GetQuickstartPackagesPackageInputArgs>? _packages;
        public InputList<Inputs.GetQuickstartPackagesPackageInputArgs> Packages
        {
            get => _packages ?? (_packages = new InputList<Inputs.GetQuickstartPackagesPackageInputArgs>());
            set => _packages = value;
        }

        public GetQuickstartPackagesInvokeArgs()
        {
        }
        public static new GetQuickstartPackagesInvokeArgs Empty => new GetQuickstartPackagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetQuickstartPackagesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetQuickstartPackagesPackageResult> Packages;

        [OutputConstructor]
        private GetQuickstartPackagesResult(
            string id,

            ImmutableArray<Outputs.GetQuickstartPackagesPackageResult> packages)
        {
            Id = id;
            Packages = packages;
        }
    }
}
