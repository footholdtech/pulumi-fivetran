// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    public static class GetLocalProcessingAgent
    {
        /// <summary>
        /// NOTE: In connection with the general availability of the hybrid deployment functionality and in order to synchronize internal terminology, we have deprecate this data source.
        /// 
        /// This data source returns a local processing agent object.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var localProcessingAgent = Fivetran.GetLocalProcessingAgent.Invoke(new()
        ///     {
        ///         Id = "local_processing_agent_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLocalProcessingAgentResult> InvokeAsync(GetLocalProcessingAgentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocalProcessingAgentResult>("fivetran:index/getLocalProcessingAgent:getLocalProcessingAgent", args ?? new GetLocalProcessingAgentArgs(), options.WithDefaults());

        /// <summary>
        /// NOTE: In connection with the general availability of the hybrid deployment functionality and in order to synchronize internal terminology, we have deprecate this data source.
        /// 
        /// This data source returns a local processing agent object.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var localProcessingAgent = Fivetran.GetLocalProcessingAgent.Invoke(new()
        ///     {
        ///         Id = "local_processing_agent_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLocalProcessingAgentResult> Invoke(GetLocalProcessingAgentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocalProcessingAgentResult>("fivetran:index/getLocalProcessingAgent:getLocalProcessingAgent", args ?? new GetLocalProcessingAgentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// NOTE: In connection with the general availability of the hybrid deployment functionality and in order to synchronize internal terminology, we have deprecate this data source.
        /// 
        /// This data source returns a local processing agent object.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fivetran = Pulumi.Fivetran;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var localProcessingAgent = Fivetran.GetLocalProcessingAgent.Invoke(new()
        ///     {
        ///         Id = "local_processing_agent_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLocalProcessingAgentResult> Invoke(GetLocalProcessingAgentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocalProcessingAgentResult>("fivetran:index/getLocalProcessingAgent:getLocalProcessingAgent", args ?? new GetLocalProcessingAgentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocalProcessingAgentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the local processing agent within your account.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetLocalProcessingAgentArgs()
        {
        }
        public static new GetLocalProcessingAgentArgs Empty => new GetLocalProcessingAgentArgs();
    }

    public sealed class GetLocalProcessingAgentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the local processing agent within your account.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetLocalProcessingAgentInvokeArgs()
        {
        }
        public static new GetLocalProcessingAgentInvokeArgs Empty => new GetLocalProcessingAgentInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocalProcessingAgentResult
    {
        /// <summary>
        /// The unique name for the local processing agent.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The unique identifier for the Group within the Fivetran system.
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// The unique identifier for the local processing agent within your account.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The timestamp of the time the local processing agent was created in your account.
        /// </summary>
        public readonly string RegisteredAt;
        public readonly ImmutableArray<Outputs.GetLocalProcessingAgentUsageResult> Usages;

        [OutputConstructor]
        private GetLocalProcessingAgentResult(
            string displayName,

            string groupId,

            string id,

            string registeredAt,

            ImmutableArray<Outputs.GetLocalProcessingAgentUsageResult> usages)
        {
            DisplayName = displayName;
            GroupId = groupId;
            Id = id;
            RegisteredAt = registeredAt;
            Usages = usages;
        }
    }
}
