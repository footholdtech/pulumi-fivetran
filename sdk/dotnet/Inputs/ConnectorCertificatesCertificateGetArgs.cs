// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran.Inputs
{

    public sealed class ConnectorCertificatesCertificateGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("encodedCert", required: true)]
        private Input<string>? _encodedCert;

        /// <summary>
        /// Base64 encoded certificate.
        /// </summary>
        public Input<string>? EncodedCert
        {
            get => _encodedCert;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _encodedCert = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Hash of the certificate.
        /// </summary>
        [Input("hash", required: true)]
        public Input<string> Hash { get; set; } = null!;

        /// <summary>
        /// Certificate name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The SSH public key.
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        /// <summary>
        /// Certificate sha1.
        /// </summary>
        [Input("sha1")]
        public Input<string>? Sha1 { get; set; }

        /// <summary>
        /// Certificate sha256.
        /// </summary>
        [Input("sha256")]
        public Input<string>? Sha256 { get; set; }

        /// <summary>
        /// Type of the certificate.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// User name who validated the certificate.
        /// </summary>
        [Input("validatedBy")]
        public Input<string>? ValidatedBy { get; set; }

        /// <summary>
        /// The date when certificate was approved.
        /// </summary>
        [Input("validatedDate")]
        public Input<string>? ValidatedDate { get; set; }

        public ConnectorCertificatesCertificateGetArgs()
        {
        }
        public static new ConnectorCertificatesCertificateGetArgs Empty => new ConnectorCertificatesCertificateGetArgs();
    }
}
