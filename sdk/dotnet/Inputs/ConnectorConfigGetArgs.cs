// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran.Inputs
{

    public sealed class ConnectorConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Azure Blob Storage connection method
        /// </summary>
        [Input("absConnectionMethod")]
        public Input<string>? AbsConnectionMethod { get; set; }

        [Input("absConnectionString")]
        private Input<string>? _absConnectionString;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Azure Blob Storage connection string.
        /// 	- Service `braze`: Connection String
        /// </summary>
        public Input<string>? AbsConnectionString
        {
            get => _absConnectionString;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _absConnectionString = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Azure Blob Storage container address
        /// </summary>
        [Input("absContainerAddress")]
        public Input<string>? AbsContainerAddress { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Azure Blob Storage container name.
        /// 	- Service `braze`: Container Name
        /// </summary>
        [Input("absContainerName")]
        public Input<string>? AbsContainerName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Azure Blob Storage host IP
        /// </summary>
        [Input("absHostIp")]
        public Input<string>? AbsHostIp { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Azure Blob Storage username
        /// </summary>
        [Input("absHostUser")]
        public Input<string>? AbsHostUser { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Prefix
        /// </summary>
        [Input("absPrefix")]
        public Input<string>? AbsPrefix { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Azure Blob Storage public key
        /// </summary>
        [Input("absPublicKey")]
        public Input<string>? AbsPublicKey { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workramp`: Your WorkRamp academy ID.
        /// </summary>
        [Input("academyId")]
        public Input<string>? AcademyId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `planful`: Your Planful access ID.
        /// </summary>
        [Input("accessId")]
        public Input<string>? AccessId { get; set; }

        [Input("accessKey")]
        private Input<string>? _accessKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `gainsight_customer_success`: The access key for API authentication.
        /// 	- Service `gongio`: Your Gongio Access key.
        /// 	- Service `line_ads`: Your LINE Ads access key.
        /// 	- Service `planful`: Your Planful access key.
        /// 	- Service `retailnext`: Your RetailNext access key.
        /// </summary>
        public Input<string>? AccessKey
        {
            get => _accessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("accessKeyId")]
        private Input<string>? _accessKeyId;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: Your AWS access key ID.
        /// 	- Service `aws_cost_report`: Access Key ID
        /// 	- Service `checkout`: Your Checkout.com access key ID.
        /// 	- Service `cloudtalk`: Your CloudTalk Access Key ID.
        /// 	- Service `nice`: Your NICE access key ID.
        /// 	- Service `s3`: Access Key ID
        /// 	- Service `wasabi_cloud_storage`: Access Key ID
        /// </summary>
        public Input<string>? AccessKeyId
        {
            get => _accessKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("accessKeySecret")]
        private Input<string>? _accessKeySecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Access Key Secret
        /// 	- Service `checkout`: Your Checkout.com access key secret.
        /// 	- Service `cloudtalk`: Your CloudTalk Access Key Secret.
        /// 	- Service `gongio`: Your Gongio Access Key Secret.
        /// 	- Service `nice`: Your NICE access key secret.
        /// 	- Service `s3`: Access Key Secret
        /// 	- Service `wasabi_cloud_storage`: Access Key Secret
        /// </summary>
        public Input<string>? AccessKeySecret
        {
            get => _accessKeySecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKeySecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("accessToken")]
        private Input<string>? _accessToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `7shifts`: Your 7shifts access token.
        /// 	- Service `attio`: Your Attio bearer token
        /// 	- Service `big_commerce`: API access token of your store.
        /// 	- Service `bitly`: Your Bitly access token.
        /// 	- Service `calabrio`: Your Calabrio access token.
        /// 	- Service `coalesce`: Your Coalesce access token.
        /// 	- Service `coupa`: Your Coupa access token fetched using client_id and client_secret
        /// 	- Service `deputy`: Your Deputy API access token.
        /// 	- Service `getfeedback`: Your GetFeedback Access token.
        /// 	- Service `gocardless`: Your GoCardless API token.
        /// 	- Service `higher_logic_vanilla`: Your Higher Logic Vanilla access token.
        /// 	- Service `ironclad`: Your Ironclad access token.
        /// 	- Service `khoros_marketing`: Your Khoros Marketing access token.
        /// 	- Service `kustomer`: Your Kustomer API key.
        /// 	- Service `lattice`: Your Lattice API access token.
        /// 	- Service `launchdarkly`: Your LaunchDarkly access token.
        /// 	- Service `leap_crm`: Your Leap CRM access token.
        /// 	- Service `nylas`: Your Nylas access_token.
        /// 	- Service `planhat`: Your Planhat access token.
        /// 	- Service `poplar`: Your Poplar access token.
        /// 	- Service `rollbar`: Your Rollbar Access Token.
        /// 	- Service `samsara`: Your Samsara API token.
        /// 	- Service `slab`: Your Slab API key.
        /// 	- Service `stripe`: The Stripe API Restricted Key
        /// 	- Service `stripe_test`: The Stripe API Restricted Key
        /// 	- Service `talkwalker`: Your Talkwalker access token.
        /// 	- Service `workable`: Your Workable Access Token.
        /// 	- Service `workramp`: Your WorkRamp access token.
        /// </summary>
        public Input<string>? AccessToken
        {
            get => _accessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `share_point`: Access Type
        /// </summary>
        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `netsuite_suiteanalytics`: The NetSuite Account ID.
        /// 	- Service `ordway`: Your Ordway account type.
        /// </summary>
        [Input("account")]
        public Input<string>? Account { get; set; }

        [Input("accountAccessToken")]
        private Input<string>? _accountAccessToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `rollbar`: Your Rollbar account access token.
        /// </summary>
        public Input<string>? AccountAccessToken
        {
            get => _accountAccessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountAccessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appcues`: Your Appcues Account ID.
        /// 	- Service `brightcove`: Your Brightcove account ID.
        /// 	- Service `cin7core`: Your Cin7 Core account ID.
        /// 	- Service `dear`: Your Dear Account ID.
        /// 	- Service `harvest`: Your Harvest Account ID.
        /// 	- Service `optimizely`: Your Optimizely account ID.
        /// 	- Service `rokt`: Your Rokt account ID.
        /// 	- Service `udemy_business`: Your Udemy Business account ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("accountIds")]
        private InputList<string>? _accountIds;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `taboola`: Specific Account IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
        /// </summary>
        public InputList<string> AccountIds
        {
            get => _accountIds ?? (_accountIds = new InputList<string>());
            set => _accountIds = value;
        }

        [Input("accountKey")]
        private Input<string>? _accountKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cosmos`: The read-only primary or secondary account key for the database account. Required for the `ACCOUNT_KEY` data access method.
        /// 	- Service `simplesat`: Your Simplesat account key.
        /// </summary>
        public Input<string>? AccountKey
        {
            get => _accountKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `eventsforce`: Your Eventsforce account name.
        /// 	- Service `freshdesk_contact_center`: Your Freshdesk Contact Center account name.
        /// 	- Service `happyfox`: Your HappyFox account name.
        /// 	- Service `maxio_saasoptics`: Your Maxio SaaSOptics account name.
        /// 	- Service `talkdesk`: Your Talkdesk Account Name.
        /// 	- Service `udemy_business`: Your Udemy Business account name.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `tymeshift`: Your Tymeshift account plan.
        /// </summary>
        [Input("accountPlan")]
        public Input<string>? AccountPlan { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `iterable`: If your Iterable account URL starts with `https://app.eu.iterable.com` then provide `EU` else `US`
        /// </summary>
        [Input("accountRegion")]
        public Input<string>? AccountRegion { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `fone_dynamics`: Your Fone Dynamics account SID.
        /// 	- Service `impact_partner`: Your Impact Partner account SID
        /// </summary>
        [Input("accountSid")]
        public Input<string>? AccountSid { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `itunes_connect`: Account Sync Mode
        /// </summary>
        [Input("accountSyncMode")]
        public Input<string>? AccountSyncMode { get; set; }

        [Input("accountToken")]
        private Input<string>? _accountToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `konnect_insights`: Your Konnect Insights Account Token.
        /// </summary>
        public Input<string>? AccountToken
        {
            get => _accountToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `freightview`: Your Freightview account type.
        /// </summary>
        [Input("accountType")]
        public Input<string>? AccountType { get; set; }

        [Input("accounts")]
        private InputList<string>? _accounts;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bingads`: Specific accounts to sync. Must be populated if `syncMode` is set to `SpecificAccounts`.
        /// 	- Service `facebook`: List of accounts of which connector will sync the data.
        /// 	- Service `facebook_ad_account`: Specific accounts to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
        /// 	- Service `facebook_ads`: List of accounts of which connector will sync the data.
        /// 	- Service `google_ads`: The list of Account IDs to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
        /// 	- Service `google_analytics`: The list of specific Account IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
        /// 	- Service `google_analytics_4`: The list of specific Account IDs to sync. Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
        /// 	- Service `google_analytics_mcf`: Specific Account IDs to sync.  Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
        /// 	- Service `google_search_ads_360`: Specific accounts to sync. Must be populated if `accountsSyncMode` is set to `SPECIFIC_ACCOUNTS`.
        /// 	- Service `instagram_business`: Specific accounts to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
        /// 	- Service `itunes_connect`: Accounts
        /// 	- Service `linkedin_ads`: Specific Account IDs to sync. Must be populated if `syncMode` is set to `SpecificAccounts`.
        /// 	- Service `spotify_ads`: The list of Ad Account IDs to sync. Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
        /// 	- Service `tiktok_ads`: Specific accounts to sync.  Must be populated if `sync_mode` is set to `SpecificAccounts`.
        /// 	- Service `twilio`: Specific Accounts to sync.  Must be populated if `sync_mode` is set to `SpecificAccounts`.
        /// 	- Service `twitter`: Specific accounts to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
        /// 	- Service `twitter_ads`: Specific Accounts to sync.  Must be populated if `sync_mode` is set to `SpecificAccounts`.
        /// </summary>
        public InputList<string> Accounts
        {
            get => _accounts ?? (_accounts = new InputList<string>());
            set => _accounts = value;
        }

        [Input("accountsRedditAds")]
        private InputList<Inputs.ConnectorConfigAccountsRedditAdGetArgs>? _accountsRedditAds;
        public InputList<Inputs.ConnectorConfigAccountsRedditAdGetArgs> AccountsRedditAds
        {
            get => _accountsRedditAds ?? (_accountsRedditAds = new InputList<Inputs.ConnectorConfigAccountsRedditAdGetArgs>());
            set => _accountsRedditAds = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_search_ads_360`: Whether to sync all accounts or specific.
        /// </summary>
        [Input("accountsSyncMode")]
        public Input<string>? AccountsSyncMode { get; set; }

        [Input("actionBreakdowns")]
        private InputList<string>? _actionBreakdowns;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook`: List of action_breakdowns which connector will sync. [Possible action_breakdowns values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#actionbreakdowns).
        /// </summary>
        public InputList<string> ActionBreakdowns
        {
            get => _actionBreakdowns ?? (_actionBreakdowns = new InputList<string>());
            set => _actionBreakdowns = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook`: The report time of action stats. [Possible action_report time values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#actionreporttime).
        /// </summary>
        [Input("actionReportTime")]
        public Input<string>? ActionReportTime { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `linkedin_ads`: Whether to sync all analytic reports or specific. Default value: `AllReports`
        /// </summary>
        [Input("adAnalytics")]
        public Input<string>? AdAnalytics { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_publishers`: Ad unit view for the report.
        /// </summary>
        [Input("adUnitView")]
        public Input<string>? AdUnitView { get; set; }

        [Input("adminApiKey")]
        private Input<string>? _adminApiKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `splitio`: Your Split admin api key.
        /// </summary>
        public Input<string>? AdminApiKey
        {
            get => _adminApiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _adminApiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `brivo`: Your Brivo Admin username.
        /// </summary>
        [Input("adminUsername")]
        public Input<string>? AdminUsername { get; set; }

        [Input("adobeAnalyticsConfigurations")]
        private InputList<Inputs.ConnectorConfigAdobeAnalyticsConfigurationGetArgs>? _adobeAnalyticsConfigurations;
        public InputList<Inputs.ConnectorConfigAdobeAnalyticsConfigurationGetArgs> AdobeAnalyticsConfigurations
        {
            get => _adobeAnalyticsConfigurations ?? (_adobeAnalyticsConfigurations = new InputList<Inputs.ConnectorConfigAdobeAnalyticsConfigurationGetArgs>());
            set => _adobeAnalyticsConfigurations = value;
        }

        [Input("advertisables")]
        private InputList<string>? _advertisables;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adroll`: Specific advertisables to sync. Must be populated if `sync_mode` is set to `SpecificAdvertisables`.
        /// </summary>
        public InputList<string> Advertisables
        {
            get => _advertisables ?? (_advertisables = new InputList<string>());
            set => _advertisables = value;
        }

        [Input("advertisers")]
        private InputList<string>? _advertisers;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_display_and_video_360`: The list of advertisers to include into a sync. This parameter only takes effect when `config_method` is set to `CREATE_NEW`.
        /// 	- Service `google_search_ads_360`: Specific advertisers to sync. Must be populated if `advertisersSyncMode` is set to `SPECIFIC_ADVERTISERS`.
        /// 	- Service `pinterest_ads`: Specific Advertisers to sync.  Must be populated if `sync_mode` is set to `SpecificAdvertisers`.
        /// </summary>
        public InputList<string> Advertisers
        {
            get => _advertisers ?? (_advertisers = new InputList<string>());
            set => _advertisers = value;
        }

        [Input("advertisersIds")]
        private InputList<string>? _advertisersIds;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `yahoo_gemini`: Specific Advertiser IDs to sync. Must be populated if `syncMode` is set to `SpecificAccounts`.
        /// </summary>
        public InputList<string> AdvertisersIds
        {
            get => _advertisersIds ?? (_advertisersIds = new InputList<string>());
            set => _advertisersIds = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_search_ads_360`: Whether to sync all or specific advertisers.
        /// </summary>
        [Input("advertisersSyncMode")]
        public Input<string>? AdvertisersSyncMode { get; set; }

        [Input("advertisersWithSeats")]
        private InputList<string>? _advertisersWithSeats;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `yahoo_dsp`: Specific Advertisers to sync. Must be populated if `sync_mode_advertiser` is set to `SPECIFIC_ADVERTISERS`. Pay attention to the format: `AdvertiserId:SeatId`
        /// </summary>
        public InputList<string> AdvertisersWithSeats
        {
            get => _advertisersWithSeats ?? (_advertisersWithSeats = new InputList<string>());
            set => _advertisersWithSeats = value;
        }

        [Input("agentConfigMethod")]
        public Input<string>? AgentConfigMethod { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `db2i_hva`: The agent host.
        /// 	- Service `db2i_sap_hva`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
        /// 	- Service `hana_sap_hva_b1`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
        /// 	- Service `hana_sap_hva_ecc`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
        /// 	- Service `hana_sap_hva_s4`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
        /// 	- Service `oracle_hva`: The host of the agent. This is the same as database host, since the agent must be installed in the same machine as source database.
        /// 	- Service `oracle_sap_hva`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
        /// 	- Service `oracle_sap_hva_netweaver`: The host of the agent. This is the same as the database host, since the agent must be installed on the same machine as the source database.
        /// 	- Service `sql_server_hva`: The host address of the machine running the agent. Often the same as the DB host.
        /// 	- Service `sql_server_sap_ecc_hva`: The host address of the machine running the agent. Often the same as the DB host.
        /// </summary>
        [Input("agentHost")]
        public Input<string>? AgentHost { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `phoenix_ads`: Your Phoenix Ads Agent ID.
        /// </summary>
        [Input("agentId")]
        public Input<string>? AgentId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_hva`: The home directory of the Oracle database.
        /// 	- Service `oracle_sap_hva`: The home directory of the Oracle database.
        /// </summary>
        [Input("agentOraHome")]
        public Input<string>? AgentOraHome { get; set; }

        [Input("agentPassword")]
        private Input<string>? _agentPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `db2i_hva`: The agent password.
        /// 	- Service `db2i_sap_hva`: The agent user's password. It must have a minimum length of 10 characters.
        /// 	- Service `hana_sap_hva_b1`: The agent user's password. It must have a minimum length of 10 characters.
        /// 	- Service `hana_sap_hva_ecc`: The agent user's password. It must have a minimum length of 10 characters.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The agent user's password. It must have a minimum length of 10 characters.
        /// 	- Service `hana_sap_hva_s4`: The agent user's password. It must have a minimum length of 10 characters.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The agent user's password. It must have a minimum length of 10 characters.
        /// 	- Service `oracle_hva`: The agent user's password. It should have a minimum length of 10 characters.
        /// 	- Service `oracle_sap_hva`: The agent user's password. It must have a minimum length of 10 characters.
        /// 	- Service `oracle_sap_hva_netweaver`: The agent user's password. It must have a minimum length of 10 characters.
        /// 	- Service `sql_server_hva`: The password for the agent user.
        /// 	- Service `sql_server_sap_ecc_hva`: The password for the agent user.
        /// </summary>
        public Input<string>? AgentPassword
        {
            get => _agentPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _agentPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `db2i_hva`: The agent port.
        /// 	- Service `db2i_sap_hva`: The port number of the agent.
        /// 	- Service `hana_sap_hva_b1`: The port number of the agent.
        /// 	- Service `hana_sap_hva_ecc`: The port number of the agent.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The port number of the agent.
        /// 	- Service `hana_sap_hva_s4`: The port number of the agent.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The port number of the agent.
        /// 	- Service `oracle_hva`: The port number of the agent.
        /// 	- Service `oracle_sap_hva`: The port number of the agent.
        /// 	- Service `oracle_sap_hva_netweaver`: The port number of the agent.
        /// 	- Service `sql_server_hva`: The port that the agent has open for Fivetran's connection. Default value is 4343.
        /// 	- Service `sql_server_sap_ecc_hva`: The port that the agent has open for Fivetran's connection. Default value is 4343.
        /// </summary>
        [Input("agentPort")]
        public Input<int>? AgentPort { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `db2i_hva`: The public certificate for the agent.
        /// 	- Service `db2i_sap_hva`: The agent public certificate.
        /// 	- Service `hana_sap_hva_b1`: The agent public certificate.
        /// 	- Service `hana_sap_hva_ecc`: The agent public certificate.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The agent public certificate.
        /// 	- Service `hana_sap_hva_s4`: The agent public certificate.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The agent public certificate.
        /// 	- Service `oracle_hva`: The agent public certificate.
        /// 	- Service `oracle_sap_hva`: The agent public certificate.
        /// 	- Service `oracle_sap_hva_netweaver`: The agent public certificate.
        /// 	- Service `sql_server_hva`: The public certificate generated by the agent.
        /// 	- Service `sql_server_sap_ecc_hva`: The public certificate generated by the agent.
        /// </summary>
        [Input("agentPublicCert")]
        public Input<string>? AgentPublicCert { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `db2i_hva`: The agent user name.
        /// 	- Service `db2i_sap_hva`: The agent's user.
        /// 	- Service `hana_sap_hva_b1`: The agent's user.
        /// 	- Service `hana_sap_hva_ecc`: The agent's user.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The agent's user.
        /// 	- Service `hana_sap_hva_s4`: The agent's user.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The agent's user.
        /// 	- Service `oracle_hva`: The agent's user.
        /// 	- Service `oracle_sap_hva`: The agent's user.
        /// 	- Service `oracle_sap_hva_netweaver`: The agent's user.
        /// 	- Service `sql_server_hva`: The agent's username.
        /// 	- Service `sql_server_sap_ecc_hva`: The agent's username.
        /// </summary>
        [Input("agentUser")]
        public Input<string>? AgentUser { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook`: Options to select aggregation duration. [Possible aggregation values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#aggregation).
        /// </summary>
        [Input("aggregation")]
        public Input<string>? Aggregation { get; set; }

        [Input("agreementGrantToken")]
        private Input<string>? _agreementGrantToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `economic`: Your E-conomic X-AgreementGrantToken goes here.
        /// </summary>
        public Input<string>? AgreementGrantToken
        {
            get => _agreementGrantToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _agreementGrantToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `webhooks`: HMAC algorithm used for generating the HMAC signature. Supported algorithms  INFER_FROM_HEADER, MD5, SHA_1, SHA_224, SHA_256, SHA_384, SHA_512. Default: SHA_256
        /// </summary>
        [Input("algorithm")]
        public Input<string>? Algorithm { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: Require TLS through Tunnel
        /// 	- Service `aurora_postgres`: Require TLS through Tunnel
        /// 	- Service `azure_cosmos_for_mongo`: Require TLS
        /// 	- Service `azure_postgres`: Require TLS through Tunnel
        /// 	- Service `azure_sql_db`: Require TLS through Tunnel.
        /// 	- Service `azure_sql_managed_db`: Require TLS.
        /// 	- Service `clarity`: Require TLS through Tunnel.
        /// 	- Service `cockroachdb`: Require TLS
        /// 	- Service `db2i_hva`: Require TLS through Tunnel
        /// 	- Service `db2i_sap_hva`: Require TLS through Tunnel
        /// 	- Service `documentdb`: Require TLS encryption.
        /// 	- Service `dynamics_365_fo`: Require TLS through Tunnel.
        /// 	- Service `ehr`: Require TLS through Tunnel.
        /// 	- Service `elastic_cloud`: Default value: true. Set to false if TLS is not required when using an SSH tunnel.
        /// 	- Service `es_self_hosted`: Default value: true. Set to false if TLS is not required when using an SSH tunnel.
        /// 	- Service `google_cloud_mysql`: Require TLS through Tunnel
        /// 	- Service `google_cloud_postgresql`: Require TLS through Tunnel
        /// 	- Service `google_cloud_sqlserver`: Require TLS.
        /// 	- Service `heroku_postgres`: Require TLS through Tunnel
        /// 	- Service `magento_mysql`: Require TLS through Tunnel
        /// 	- Service `magento_mysql_rds`: Require TLS through Tunnel
        /// 	- Service `maria`: Require TLS through Tunnel
        /// 	- Service `maria_azure`: Require TLS through Tunnel
        /// 	- Service `maria_rds`: Require TLS through Tunnel
        /// 	- Service `mongo`: Require TLS
        /// 	- Service `mongo_sharded`: Require TLS through Tunnel
        /// 	- Service `mysql`: Require TLS through Tunnel
        /// 	- Service `mysql_azure`: Require TLS through Tunnel
        /// 	- Service `mysql_rds`: Require TLS through Tunnel
        /// 	- Service `opendistro`: Default value: true. Set to false if TLS is not required when using an SSH tunnel.
        /// 	- Service `opensearch`: Default value: true. Set to false if TLS is not required when using an SSH tunnel.
        /// 	- Service `oracle`: Require TLS through Tunnel
        /// 	- Service `oracle_ebs`: Require TLS through Tunnel
        /// 	- Service `oracle_hva`: Require TLS through Tunnel
        /// 	- Service `oracle_rac`: Require TLS through Tunnel
        /// 	- Service `oracle_rds`: Require TLS through Tunnel
        /// 	- Service `oracle_sap_hva`: Require TLS through Tunnel
        /// 	- Service `oracle_sap_hva_netweaver`: Require TLS.
        /// 	- Service `postgres`: Require TLS through Tunnel
        /// 	- Service `postgres_rds`: Require TLS through Tunnel
        /// 	- Service `sql_server`: Require TLS.
        /// 	- Service `sql_server_hva`: Require TLS.
        /// 	- Service `sql_server_rds`: Require TLS.
        /// 	- Service `sql_server_sap_ecc_hva`: Require TLS.
        /// </summary>
        [Input("alwaysEncrypted")]
        public Input<bool>? AlwaysEncrypted { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `freshsuccess`: Set this parameter to `api`.
        /// </summary>
        [Input("api")]
        public Input<string>? Api { get; set; }

        [Input("apiAccessToken")]
        private Input<string>? _apiAccessToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `device_magic`: Your Device Magic API access token.
        /// 	- Service `flywheel_digital`: Your Flywheel Digital API access token.
        /// 	- Service `shopify`: API access token of your custom app.
        /// 	- Service `square`: The Square API access token of your application.
        /// </summary>
        public Input<string>? ApiAccessToken
        {
            get => _apiAccessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiAccessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `afterpay`: Your Afterpay API environment.
        /// </summary>
        [Input("apiEnvironment")]
        public Input<string>? ApiEnvironment { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aircall`: Your Aircall API ID.
        /// </summary>
        [Input("apiId")]
        public Input<string>? ApiId { get; set; }

        [Input("apiKey")]
        private Input<string>? _apiKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `15five`: Your 15five API key.
        /// 	- Service `360learning`: Your 360Learning API Key.
        /// 	- Service `6sense`: Your 6sense API Key.
        /// 	- Service `acculynx`: Your Acculynx API key.
        /// 	- Service `activecampaign`: Your ActiveCampaign API key.
        /// 	- Service `affinity`: Your Affinity API key.
        /// 	- Service `airtable`: API key of the Airtable account.
        /// 	- Service `algolia`: Your Algolia API key.
        /// 	- Service `alida`: Your Alida API key.
        /// 	- Service `anvyl`: Your Anvyl API key.
        /// 	- Service `appcues`: Your Appcues API key.
        /// 	- Service `ashby`: Your Ashby API key.
        /// 	- Service `assembled`: Your Assembled API key.
        /// 	- Service `atlassian_jira_align`: Your Jira Align API key.
        /// 	- Service `atlassian_ops_genie`: Your Opsgenie API key
        /// 	- Service `attentive`: Your Attentive API key.
        /// 	- Service `aumni`: Your Aumni API key.
        /// 	- Service `avantlink`: Your AvantLink API key.
        /// 	- Service `ballotready`: Your BallotReady API token.
        /// 	- Service `bamboohr`: Your API Key.
        /// 	- Service `bazaarvoice`: Your Bazaarvoice API key.
        /// 	- Service `betterworks`: Your Betterworks API key.
        /// 	- Service `bigmarker`: Your BigMarker API key.
        /// 	- Service `bizzabo`: Your Bizzabo API key.
        /// 	- Service `brave_ads`: Your Brave Ads API key
        /// 	- Service `braze`: Your Braze API Key.
        /// 	- Service `brevo`: Your Brevo API key.
        /// 	- Service `brivo`: Your Brivo API key.
        /// 	- Service `bubble`: Your Bubble API token.
        /// 	- Service `buildium`: Your Buildium private API key.
        /// 	- Service `callrail`: Your CallRail API key.
        /// 	- Service `campaignmonitor`: Your Campaign Monitor API key.
        /// 	- Service `canny`: Your Canny API key.
        /// 	- Service `chargebee_product_catalog_1`: Your Chargebee Product Catalog 1 API key.
        /// 	- Service `chargebee_product_catalog_2`: Your Chargebee API key.
        /// 	- Service `chartmogul`: Your ChartMogul API key.
        /// 	- Service `chorusai`: Your Chorus API key.
        /// 	- Service `churnkey`: Your Churnkey API Key.
        /// 	- Service `churnzero`: Your ChurnZero API key.
        /// 	- Service `cimis`: Your Cimis API key.
        /// 	- Service `circleci`: Your CircleCI API Key.
        /// 	- Service `clickup`: Your ClickUp API key.
        /// 	- Service `clockify`: Your Clockify API key.
        /// 	- Service `clockodo`: Your Clockodo API key.
        /// 	- Service `close`: Your Close API key.
        /// 	- Service `cloudbeds`: Your Cloudbeds API key.
        /// 	- Service `clubspeed`: Your Clubspeed API key.
        /// 	- Service `coassemble`: Your Coassemble API key.
        /// 	- Service `codefresh`: Your Codefresh API Key.
        /// 	- Service `column`: Your Column API key.
        /// 	- Service `concord`: Your Concord API key.
        /// 	- Service `confluent_cloud`: API Key
        /// 	- Service `contrast_security`: Your Contrast Security API Key.
        /// 	- Service `copper`: Your Copper API key.
        /// 	- Service `coupa`: Your Coupa API key.
        /// 	- Service `datadog`: Your Datadog API key.
        /// 	- Service `dbt_cloud`: Your dbt Cloud service token.
        /// 	- Service `dcl_logistics`: Your DCL Logistics API key.
        /// 	- Service `delighted`: API Key for your Delighted account
        /// 	- Service `destini`: Your Destini API Key.
        /// 	- Service `donus`: Your Donus API key.
        /// 	- Service `doorloop`: Your DoorLoop API key.
        /// 	- Service `drata`: Your Drata API Key.
        /// 	- Service `dropbox_sign`: Your Dropbox Sign API key.
        /// 	- Service `duoplane`: Your Duoplane API key.
        /// 	- Service `easypost`: Your EasyPost API Key.
        /// 	- Service `electronic_tenant_solutions`: Your Electronic Tenant Solutions API key.
        /// 	- Service `eventsforce`: Your Eventsforce API secret key.
        /// 	- Service `everflow`: Your Everflow API key.
        /// 	- Service `everhour`: Your Everhour API Token.
        /// 	- Service `expensein`: Your ExpenseIn API key.
        /// 	- Service `factorial`: Your Factorial API key.
        /// 	- Service `firehydrant`: Your FireHydrant API key.
        /// 	- Service `float`: Your Float API key.
        /// 	- Service `forj_community`: Your Forj Community API key.
        /// 	- Service `fourkites`: Your FourKites API key.
        /// 	- Service `freightview`: Your Freightview API key.
        /// 	- Service `freshdesk`: Your Freshdesk API Key.
        /// 	- Service `freshdesk_contact_center`: Your Freshdesk Contact Center API key.
        /// 	- Service `freshsales`: Your Freshsales API key.
        /// 	- Service `freshservice`: Your Freshservice API Key.
        /// 	- Service `freshsuccess`: Your Freshsuccess API key.
        /// 	- Service `freshteam`: Your Freshteam API key.
        /// 	- Service `friendbuy`: Your Friendbuy API key.
        /// 	- Service `fullstory`: Your Fullstory API key.
        /// 	- Service `gainsight_product_experience`: Your Gainsight Product Experience API key.
        /// 	- Service `gem`: Your Gem API key.
        /// 	- Service `goldcast`: Your Goldcast API key.
        /// 	- Service `gorgias`: Your Gorgias API key.
        /// 	- Service `greenhouse`: Your Greenhouse API key.
        /// 	- Service `grepsr`: Your Grepsr API Key.
        /// 	- Service `grin`: Your Grin API key.
        /// 	- Service `happyfox`: Your HappyFox API key.
        /// 	- Service `height`: Your Height API key.
        /// 	- Service `helpshift`: Your Helpshift API Key.
        /// 	- Service `incidentio`: Your incident.io API key.
        /// 	- Service `infobip`: Your Infobip API key.
        /// 	- Service `insightly`: Your Insightly API key.
        /// 	- Service `integrate`: Your Integrate API key.
        /// 	- Service `invoiced`: Your Invoiced API key.
        /// 	- Service `iterable`: Your Iterable API key.
        /// 	- Service `ivanti`: Your Ivanti API Key.
        /// 	- Service `jotform`: Your Jotform API key.
        /// 	- Service `justcall`: Your JustCall API key.
        /// 	- Service `katana`: Your Katana API key.
        /// 	- Service `kevel`: Your Kevel API key.
        /// 	- Service `keypay`: Your KeyPay API key.
        /// 	- Service `kisi`: Your Kisi API key.
        /// 	- Service `klaviyo`: Your Klaviyo API key.
        /// 	- Service `learnupon`: Your Learnupon API key.
        /// 	- Service `lemlist`: Your Lemlist API key.
        /// 	- Service `lever`: Your Lever API key.
        /// 	- Service `liftoff`: Your Liftoff API key.
        /// 	- Service `linear`: Your Linear API key.
        /// 	- Service `linksquares`: Your LinkSquares API key.
        /// 	- Service `lob`: Your Lob API key.
        /// 	- Service `loop`: Your Loop API key.
        /// 	- Service `lucca`: Your Lucca API key.
        /// 	- Service `luma`: Your Luma API key.
        /// 	- Service `maileon`: Your Maileon API key.
        /// 	- Service `mailgun`: Your Mailgun API key.
        /// 	- Service `mailjet`: Your Mailjet API key.
        /// 	- Service `malomo`: Your Malomo API key.
        /// 	- Service `mambu`: Your Mambu API key.
        /// 	- Service `mandrill`: Your Mandrill API key.
        /// 	- Service `maxio_chargify`: Enter Your API Key.
        /// 	- Service `messagebird`: Your MessageBird API key.
        /// 	- Service `mountain`: Your MNTN API key.
        /// 	- Service `myosh`: Your myosh API key.
        /// 	- Service `okendo`: Your Okendo API key.
        /// 	- Service `ometria`: Your Ometria API Key.
        /// 	- Service `oncehub`: Your OnceHub API key.
        /// 	- Service `ordergroove`: Your Ordergroove API key.
        /// 	- Service `ordway`: Your Ordway API key.
        /// 	- Service `ortto`: Your Ortto API key.
        /// 	- Service `paddle`: Your Paddle API key.
        /// 	- Service `pagerduty`: Your PagerDuty API key.
        /// 	- Service `pandadoc`: Your PandaDoc API key.
        /// 	- Service `papershift`: Your Papershift API Key
        /// 	- Service `partnerize`: Your Partnerize user API key.
        /// 	- Service `persona`: Your Persona API key.
        /// 	- Service `picqer`: Your Picqer API key.
        /// 	- Service `pigment`: Your Pigment API key.
        /// 	- Service `pinpoint`: Your Pinpoint API key.
        /// 	- Service `pipe17`: The Pipe17 API key.
        /// 	- Service `placerai`: Your Placer.ai API key.
        /// 	- Service `playvox`: Your Playvox API Key.
        /// 	- Service `posthog`: Your PostHog API key.
        /// 	- Service `prive`: Your Prive API key.
        /// 	- Service `prosperstack`: Your ProsperStack API key.
        /// 	- Service `qualaroo`: Your Qualaroo API Key.
        /// 	- Service `quorum`: Your Quorum API key.
        /// 	- Service `rebound_returns`: Your ReBound Returns API key.
        /// 	- Service `recurly`: The Recurly API key.
        /// 	- Service `replyio`: Your Reply API key.
        /// 	- Service `revenuecat`: Your RevenueCat API key.
        /// 	- Service `reviewsio`: Your REVIEWS.io API key.
        /// 	- Service `revops`: Your RevOps bearer token.
        /// 	- Service `ricochet360`: Your Ricochet360 API key.
        /// 	- Service `ringover`: Your Ringover API key.
        /// 	- Service `rippling`: Your Rippling API key.
        /// 	- Service `rocketlane`: Your Rocketlane API key.
        /// 	- Service `rootly`: Your Rootly API key.
        /// 	- Service `ruddr`: Your Ruddr API key.
        /// 	- Service `safebase`: Your SafeBase API key.
        /// 	- Service `sage_hr`: Your Sage HR API key.
        /// 	- Service `sailthru`: The Sailthru API key.
        /// 	- Service `salsify`: Your Salsify API Key.
        /// 	- Service `security_journey`: Your Security Journey API key.
        /// 	- Service `sendgrid`: The SendGrid API key.
        /// 	- Service `sendinblue`: Your Sendinblue API key.
        /// 	- Service `shortcut`: Your Shortcut API token.
        /// 	- Service `shortio`: Your Short.io API key.
        /// 	- Service `simplesat`: Your Simplesat API key.
        /// 	- Service `sistrix`: Your SISTRIX API key.
        /// 	- Service `skilljar`: Your Skilljar API key.
        /// 	- Service `smartwaiver`: Your Smartwaiver API key.
        /// 	- Service `snyk`: Your Snyk API key.
        /// 	- Service `sonarqube`: Your Sonarqube API key.
        /// 	- Service `sparkpost`: Your SparkPost API key.
        /// 	- Service `squarespace`: Your Squarespace API key.
        /// 	- Service `stackadapt`: Your StackAdapt API key.
        /// 	- Service `statuspage`: Your Statuspage API Key.
        /// 	- Service `stripe`: Restricted API key
        /// 	- Service `stripe_test`: Restricted API key
        /// 	- Service `subscript`: Your Subscript API key.
        /// 	- Service `survicate`: Your Survicate API Key.
        /// 	- Service `teads`: Your Teads API key.
        /// 	- Service `teamtailor`: Your Teamtailor API key.
        /// 	- Service `testrail`: Your TestRail API key.
        /// 	- Service `ticket_tailor`: Your Ticket Tailor API key.
        /// 	- Service `transcend`: Your Transcend API key.
        /// 	- Service `trello`: Your TRELLO api key.
        /// 	- Service `triple_whale`: Your Triple Whale API key.
        /// 	- Service `uppromote`: Your UpPromote API key.
        /// 	- Service `veeqo`: Your Veeqo API key.
        /// 	- Service `venminder`: Your Venminder API key.
        /// 	- Service `visit_by_ges`: Your Visit by GES API key.
        /// 	- Service `vitally`: Your Vitally API key.
        /// 	- Service `vonage`: Your Vonage API Key.
        /// 	- Service `vts`: Your VTS API key.
        /// 	- Service `webconnex`: Your Webconnex API key.
        /// 	- Service `wicked_reports`: Your Wicked Reports API key.
        /// 	- Service `workleap_officevibe`: Your Workleap Officevibe API key.
        /// 	- Service `xsolla`: Your Xsolla API key.
        /// 	- Service `yext`: Your Yext API key.
        /// 	- Service `yougov_sport`: Your Yougov Sport API key.
        /// 	- Service `zingtree`: Your Zingtree API key.
        /// 	- Service `zip`: Your Zip API key.
        /// </summary>
        public Input<string>? ApiKey
        {
            get => _apiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("apiKeyApiSecret")]
        private Input<string>? _apiKeyApiSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `revel`: Your Revel Systems API Key and API Secret.
        /// </summary>
        public Input<string>? ApiKeyApiSecret
        {
            get => _apiKeyApiSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKeyApiSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("apiKeys")]
        private InputList<string>? _apiKeys;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mandrill`: Comma-separated list of API keys.  Required if `use_api_keys` is set to `true`.
        /// </summary>
        public InputList<string> ApiKeys
        {
            get => _apiKeys ?? (_apiKeys = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _apiKeys = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("apiPassword")]
        private Input<string>? _apiPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `duoplane`: Your Duoplane API password.
        /// </summary>
        public Input<string>? ApiPassword
        {
            get => _apiPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `marketo`: Allowed number of API requests to Marketo instance per day, the default value is 10000.
        /// </summary>
        [Input("apiQuota")]
        public Input<int>? ApiQuota { get; set; }

        [Input("apiReadAccessToken")]
        private Input<string>? _apiReadAccessToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `the_movie_database`: Your The Movie Database API read access token.
        /// </summary>
        public Input<string>? ApiReadAccessToken
        {
            get => _apiReadAccessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiReadAccessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `qualtrics`: Allowed number of API requests to Qualtrics per minute, the default value is 2000. Maximum allowed number is 3000 because brands may make up to 3000 API requests per minute across all of its API calls.
        /// </summary>
        [Input("apiRequestsPerMinute")]
        public Input<int>? ApiRequestsPerMinute { get; set; }

        [Input("apiSecret")]
        private Input<string>? _apiSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `confluent_cloud`: API Secret
        /// 	- Service `forj_community`: Your Forj Community API secret.
        /// 	- Service `friendbuy`: Your Friendbuy API secret.
        /// 	- Service `justcall`: Your JustCall API secret.
        /// 	- Service `liftoff`: Your Liftoff API secret.
        /// 	- Service `mixpanel`: Mixpanel API Secret.
        /// 	- Service `qualaroo`: Your Qualaroo API Secret.
        /// 	- Service `sailthru`: The Sailthru API secret.
        /// 	- Service `shareasale`: Your ShareASale API secret.
        /// 	- Service `vonage`: Your Vonage API Secret.
        /// </summary>
        public Input<string>? ApiSecret
        {
            get => _apiSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("apiSecretKey")]
        private Input<string>? _apiSecretKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `alchemer`: Your Alchemer API Secret key.
        /// </summary>
        public Input<string>? ApiSecretKey
        {
            get => _apiSecretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiSecretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sigma_computing_source`: Your Sigma Computing api server.
        /// </summary>
        [Input("apiServer")]
        public Input<string>? ApiServer { get; set; }

        [Input("apiToken")]
        private Input<string>? _apiToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aha`: Your Aha! API key.
        /// 	- Service `aircall`: Your Aircall API token.
        /// 	- Service `appsflyer`: API Token for AppsFlyer's PULL API.
        /// 	- Service `awin`: Your Awin API Token.
        /// 	- Service `backbone_plm`: Your Backbone PLM API token.
        /// 	- Service `brex`: Your Brex API token
        /// 	- Service `buildkite`: Your Buildkite API token.
        /// 	- Service `buzzsprout`: Your Buzzsprout API token.
        /// 	- Service `centra`: Your Centra API token.
        /// 	- Service `chameleon`: Your Chameleon API token.
        /// 	- Service `clari`: Your Clari API token.
        /// 	- Service `cloudflare_analytics`: Your Cloudflare Analytics API token.
        /// 	- Service `confluence`: The Confluence API token.
        /// 	- Service `dixa`: Your Dixa API token.
        /// 	- Service `drip`: Your Drip API Token.
        /// 	- Service `factbird`: Your Factbird API token.
        /// 	- Service `fone_dynamics`: Your Fone Dynamics API token.
        /// 	- Service `forethought`: Your Forethought API token.
        /// 	- Service `fountain`: Your Fountain API token.
        /// 	- Service `g2`: Your G2 API token.
        /// 	- Service `gladly`: Your Gladly API Token.
        /// 	- Service `hibob`: Your Hibob API token.
        /// 	- Service `kandji`: Your Kandji API token.
        /// 	- Service `livechat`: Your Livechat Access token.
        /// 	- Service `livechat_partner`: Your Livechat Partner API Token.
        /// 	- Service `maxio_saasoptics`: Your Maxio SaaSOptics API token.
        /// 	- Service `megaphone`: Your Megaphone API token.
        /// 	- Service `missive`: Your Missive API token.
        /// 	- Service `mixmax`: Mixmax API token.
        /// 	- Service `okta`: Your Okta API token.
        /// 	- Service `ordway`: Your Ordway API token.
        /// 	- Service `packiyo`: Your Packiyo API token.
        /// 	- Service `pipedrive`: (Optional)Your Pipedrive personal API token
        /// 	- Service `pivotal_tracker`: Pivotal Tracker API token.
        /// 	- Service `postmark`: Your Postmark account API token.
        /// 	- Service `productive`: Your Productive API token.
        /// 	- Service `pylon_support_platform`: Your Pylon Support Platform API token.
        /// 	- Service `qualtrics`: API token of the Qualtrics account.
        /// 	- Service `rakutenadvertising`: Your Rakuten Advertising API token.
        /// 	- Service `recharge`: The Recharge API token.
        /// 	- Service `referralhero`: Your Referralhero API token.
        /// 	- Service `resource_management_by_smartsheet`: Your Resource Management by Smartsheet API token.
        /// 	- Service `retently`: Your Retently API token.
        /// 	- Service `reviewsai`: Your REVIEWS.ai API token.
        /// 	- Service `rundeck`: Your Rundeck API token.
        /// 	- Service `safetyculture`: Your SafetyCulture API token.
        /// 	- Service `sensor_tower`: Your Sensor Tower API token.
        /// 	- Service `sentry`: Your Sentry auth token.
        /// 	- Service `simplecast`: Your Simplecast API token.
        /// 	- Service `snyk`: Your Snyk API token.
        /// 	- Service `textus`: Your TextUs API token.
        /// 	- Service `toggl_track`: Your Toggl Track API token
        /// 	- Service `trello`: Your TRELLO api token.
        /// 	- Service `trisolute`: Your Trisolute API token.
        /// 	- Service `vwo`: Your VWO API token.
        /// 	- Service `web_scraper`: Your Web Scraper API token.
        /// 	- Service `zendesk`: Zendesk API tokens are auto-generated passwords in the Support admin interface.
        /// 	- Service `zendesk_sunshine`: Zendesk API tokens are auto-generated passwords in the Support admin interface.
        /// </summary>
        public Input<string>? ApiToken
        {
            get => _apiToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("apiType")]
        public Input<string>? ApiType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Your Braze API URL.
        /// </summary>
        [Input("apiUrl")]
        public Input<string>? ApiUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_dsp`: Your Amazon DSP API URL region.
        /// </summary>
        [Input("apiUrlRegion")]
        public Input<string>? ApiUrlRegion { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `zendesk`: Maximum Zendesk Api Usage allowed
        /// </summary>
        [Input("apiUsage")]
        public Input<string>? ApiUsage { get; set; }

        [Input("apiUserIdentifier")]
        private Input<string>? _apiUserIdentifier;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `shipnetwork`: Your ShipNetwork API user identifier.
        /// </summary>
        public Input<string>? ApiUserIdentifier
        {
            get => _apiUserIdentifier;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiUserIdentifier = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("apiUserSecret")]
        private Input<string>? _apiUserSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `shipnetwork`: Your ShipNetwork API user secret.
        /// </summary>
        public Input<string>? ApiUserSecret
        {
            get => _apiUserSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiUserSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `kustomer`: Api Utilization Percentage
        /// </summary>
        [Input("apiUtilizationPercentage")]
        public Input<string>? ApiUtilizationPercentage { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pardot`: API Version
        /// </summary>
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        [Input("appId")]
        private Input<string>? _appId;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `churnkey`: Your Churnkey APP ID.
        /// 	- Service `open_exchange_rates`: Your Open Exchange Rates App Id.
        /// 	- Service `rokt`: Your Rokt app ID.
        /// </summary>
        public Input<string>? AppId
        {
            get => _appId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _appId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("appIds")]
        private InputList<string>? _appIds;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pendo`: Specific App IDs to sync. Must be populated if `sync_mode` is set to `SpecificAppIds`.
        /// </summary>
        public InputList<string> AppIds
        {
            get => _appIds ?? (_appIds = new InputList<string>());
            set => _appIds = value;
        }

        [Input("appIdsAppsflyers")]
        private InputList<Inputs.ConnectorConfigAppIdsAppsflyerGetArgs>? _appIdsAppsflyers;
        public InputList<Inputs.ConnectorConfigAppIdsAppsflyerGetArgs> AppIdsAppsflyers
        {
            get => _appIdsAppsflyers ?? (_appIdsAppsflyers = new InputList<Inputs.ConnectorConfigAppIdsAppsflyerGetArgs>());
            set => _appIdsAppsflyers = value;
        }

        [Input("appKey")]
        private Input<string>? _appKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `loopio`: Your Loopio App Key.
        /// 	- Service `servicetitan`: Your ServiceTitan app key.
        /// 	- Service `yotpo`: Your Yotpo App Key
        /// 	- Service `yotpo_app`: Your Yotpo App key.
        /// </summary>
        public Input<string>? AppKey
        {
            get => _appKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _appKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `brightpearl`: Your Brightpearl app reference.
        /// </summary>
        [Input("appReference")]
        public Input<string>? AppReference { get; set; }

        [Input("appSecret")]
        private Input<string>? _appSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `rokt`: Your Rokt app secret.
        /// </summary>
        public Input<string>? AppSecret
        {
            get => _appSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _appSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("appSecretToken")]
        private Input<string>? _appSecretToken;
        public Input<string>? AppSecretToken
        {
            get => _appSecretToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _appSecretToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("appSpecificPassword")]
        private Input<string>? _appSpecificPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `itunes_connect`: Your app-specific password
        /// </summary>
        public Input<string>? AppSpecificPassword
        {
            get => _appSpecificPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _appSpecificPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `itunes_connect`: Whether to sync all apps or specific apps.
        /// </summary>
        [Input("appSyncMode")]
        public Input<string>? AppSyncMode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: If you know that the source completely overwrites the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `azure_blob_storage`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `box`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `dropbox`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `ftp`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `gcs`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `google_drive`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `kinesis`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `s3`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `sftp`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `share_point`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// 	- Service `wasabi_cloud_storage`: If you know that the source completely over-writes the same file with new data, you can append the changes instead of upserting based on filename and line number.
        /// </summary>
        [Input("appendFileOption")]
        public Input<string>? AppendFileOption { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `algolia`: Your Algolia application ID.
        /// 	- Service `xactly`: Your Xactly Application ID.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        [Input("applicationKey")]
        private Input<string>? _applicationKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cin7core`: Your Cin7 Core application key.
        /// 	- Service `datadog`: Your Datadog application key.
        /// 	- Service `dear`: Your Dear Application key.
        /// 	- Service `partnerize`: Your Partnerize user application key.
        /// </summary>
        public Input<string>? ApplicationKey
        {
            get => _applicationKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _applicationKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("apps")]
        private InputList<string>? _apps;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `itunes_connect`: Specific apps to sync. Must be populated if `app_sync_mode` is set to `SpecificApps`.
        /// </summary>
        public InputList<string> Apps
        {
            get => _apps ?? (_apps = new InputList<string>());
            set => _apps = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sql_server_hva`: Format for archive log file names
        /// 	- Service `sql_server_sap_ecc_hva`: Format for archive log file names
        /// </summary>
        [Input("archiveLogFormat")]
        public Input<string>? ArchiveLogFormat { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sql_server_hva`: Directory where archive logs are located
        /// 	- Service `sql_server_sap_ecc_hva`: Directory where archive logs are located
        /// </summary>
        [Input("archiveLogPath")]
        public Input<string>? ArchiveLogPath { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Optional. Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `azure_blob_storage`: Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `box`: Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `dropbox`: Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `email`: Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `ftp`: Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `gcs`: Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `google_drive`: Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `kinesis`: Optional. Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `s3`: Files inside compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `sftp`: Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `share_point`: Files inside of compressed archives with filenames matching this regular expression will be synced.
        /// 	- Service `wasabi_cloud_storage`: Files inside compressed archives with filenames matching this regular expression will be synced.
        /// </summary>
        [Input("archivePattern")]
        public Input<string>? ArchivePattern { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `marketo`: Marketo SOAP credentials provided.
        /// </summary>
        [Input("areSoapCredentialsProvided")]
        public Input<bool>? AreSoapCredentialsProvided { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_service_bus`: The IP address (or) the URL of ASB namespace
        /// </summary>
        [Input("asbIp")]
        public Input<string>? AsbIp { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_hva`: Default value: `false`. Set to `true` if you're using ASM on a non-RAC instance.
        /// 	- Service `oracle_sap_hva`: Default value: `false`. Set to `true` if you are using ASM on a non-RAC instance.
        /// </summary>
        [Input("asmOption")]
        public Input<bool>? AsmOption { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_hva`: ASM Oracle Home path.
        /// 	- Service `oracle_sap_hva`: The Oracle ASM home directory.
        /// </summary>
        [Input("asmOracleHome")]
        public Input<string>? AsmOracleHome { get; set; }

        [Input("asmPassword")]
        private Input<string>? _asmPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_hva`: ASM password. Mandatory if `use_oracle_rac` or `asm_option` is set to `true`.
        /// 	- Service `oracle_sap_hva`: The ASM user's password. Mandatory if `use_oracle_rac` or `asm_option` is set to `true`.
        /// </summary>
        public Input<string>? AsmPassword
        {
            get => _asmPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _asmPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_hva`: ASM TNS.
        /// 	- Service `oracle_sap_hva`: ASM TNS.
        /// </summary>
        [Input("asmTns")]
        public Input<string>? AsmTns { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_hva`: ASM user. Mandatory if `use_oracle_rac` or `asm_option` is set to `true`.
        /// 	- Service `oracle_sap_hva`: The ASM user. Mandatory if `use_oracle_rac` or `asm_option` is set to `true`.
        /// </summary>
        [Input("asmUser")]
        public Input<string>? AsmUser { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_ads`: Time period used to attribute conversions based on clicks.
        /// </summary>
        [Input("attributionWindow")]
        public Input<string>? AttributionWindow { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `tiktok_ads`: Rollback sync duration to capture conversions. Set this to your configured attribution window in TikTok Ads. The default value is 7 days.
        /// </summary>
        [Input("attributionWindowSize")]
        public Input<string>? AttributionWindowSize { get; set; }

        [Input("audience")]
        private Input<string>? _audience;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `auth0`: Your Auth0 API audience.
        /// </summary>
        public Input<string>? Audience
        {
            get => _audience;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _audience = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `databricks_db`: Token-based authentication type
        /// 	- Service `redshift_db`: Password-based authentication type
        /// 	- Service `snowflake_db`: Password-based or key-based authentication type
        /// </summary>
        [Input("auth")]
        public Input<string>? Auth { get; set; }

        [Input("authCode")]
        private Input<string>? _authCode;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `happyfox`: Your HappyFox auth code.
        /// </summary>
        public Input<string>? AuthCode
        {
            get => _authCode;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _authCode = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `younium`: Your Younium auth environment.
        /// </summary>
        [Input("authEnvironment")]
        public Input<string>? AuthEnvironment { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `webhooks`: Set if you use HMAC/token-based auth methods. This is used to retrieve a key in headers
        /// </summary>
        [Input("authHeaderKey")]
        public Input<string>? AuthHeaderKey { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: Database authentication method
        /// 	- Service `aurora_postgres`: Database authentication method
        /// 	- Service `azure_postgres`: Database authentication method
        /// 	- Service `azure_sql_db`: Authentication Method.
        /// 	- Service `azure_sql_managed_db`: Authentication Method.
        /// 	- Service `google_cloud_mysql`: Database authentication method
        /// 	- Service `google_cloud_postgresql`: Database authentication method
        /// 	- Service `heroku_postgres`: Database authentication method
        /// 	- Service `magento_mysql`: Database authentication method
        /// 	- Service `magento_mysql_rds`: Database authentication method
        /// 	- Service `maria`: Database authentication method
        /// 	- Service `maria_azure`: Database authentication method
        /// 	- Service `maria_rds`: Database authentication method
        /// 	- Service `mysql`: Database authentication method
        /// 	- Service `mysql_azure`: Database authentication method
        /// 	- Service `mysql_rds`: Database authentication method
        /// 	- Service `postgres`: Database authentication method
        /// 	- Service `postgres_rds`: Database authentication method
        /// 	- Service `sql_server_hva`: Authentication Method
        /// 	- Service `sql_server_sap_ecc_hva`: Authentication Method
        /// 	- Service `webhooks`: The authentication mechanism you want to use
        /// </summary>
        [Input("authMethod")]
        public Input<string>? AuthMethod { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `anaplan`: The Anaplan authentication method.
        /// 	- Service `concur`: The Authentication Mode used by SAP Concur. It can be PasswordGrant or CompanyLevel auth mode
        /// 	- Service `github`: Authorization type.
        /// </summary>
        [Input("authMode")]
        public Input<string>? AuthMode { get; set; }

        [Input("authSecret")]
        private Input<string>? _authSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `webhooks`: The secret you want to use for HMAC/token-based auth methods
        /// </summary>
        public Input<string>? AuthSecret
        {
            get => _authSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _authSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("authToken")]
        private Input<string>? _authToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `impact_partner`: Your Impact Partner auth token
        /// 	- Service `zonka_feedback`: Your Zonka Feedback auth token.
        /// </summary>
        public Input<string>? AuthToken
        {
            get => _authToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _authToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `airtable`: Type of authentication being used by connector
        /// 	- Service `aws_cost_report`: Access approach
        /// 	- Service `azure_service_bus`: The authentication mode to access the topic
        /// 	- Service `dynamics_365`: Authentication mechanism. Either one of `OAUTH2`, or `SERVICE_PRINCIPAL`. Default value `OAUTH2`
        /// 	- Service `gcs`: Authorization type. Required for storage bucket authentication.
        /// 	- Service `google_sheets`: The `OAuth` value must be specified for this type of authorization.
        /// 	- Service `jira`: Authorization type.
        /// 	- Service `mixpanel`: Authentication Method
        /// 	- Service `pardot`: Authenticate using OAuth or HTTP Basic
        /// 	- Service `qualtrics`: Type of authentication being used by connector
        /// 	- Service `s3`: Access approach
        /// 	- Service `wasabi_cloud_storage`: The Wasabi Cloud Storage Access approach. Required for connector creation. Default value: `ACCESS_KEY`.
        /// </summary>
        [Input("authType")]
        public Input<string>? AuthType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_dsp`: Your Amazon DSP auth grant URL region.
        /// </summary>
        [Input("authUrlRegion")]
        public Input<string>? AuthUrlRegion { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics`: Authentication Method
        /// 	- Service `elastic_cloud`: The authentication method used to connect to your cluster.
        /// 	- Service `es_self_hosted`: The authentication method used to connect to your cluster.
        /// 	- Service `opendistro`: The authentication method used to connect to your cluster.
        /// 	- Service `opensearch`: The authentication method used to connect to your cluster.
        /// 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud authentication method.
        /// 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud authentication method.
        /// 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud authentication method.
        /// 	- Service `salesforce`: (Optional) Authentication type (default value = `STANDARD`)
        /// 	- Service `salesforce_sandbox`: (Optional) Authentication type (default value = `STANDARD`)
        /// </summary>
        [Input("authenticationMethod")]
        public Input<string>? AuthenticationMethod { get; set; }

        [Input("authorizationMethod")]
        public Input<string>? AuthorizationMethod { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `dynamodb`: The AWS region code for the DynamoDB instance, e.g. `us-east-1`.
        /// </summary>
        [Input("awsRegionCode")]
        public Input<string>? AwsRegionCode { get; set; }

        [Input("backintConfigurationPath")]
        public Input<string>? BackintConfigurationPath { get; set; }

        [Input("backintExecutablePath")]
        public Input<string>? BackintExecutablePath { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `shopify`: Limit of the Historical Sync Time for selected tables
        /// 	- Service `zendesk`: Date Limit of the Historical Sync Time for selected tables. The format should be YYYY-MM-DD
        /// </summary>
        [Input("backwardSyncLimit")]
        public Input<string>? BackwardSyncLimit { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hubspot`: Date Limit of the Historical Sync Time for selected tables. The Format should be YYYY-MM-DD
        /// </summary>
        [Input("backwardSyncLimitDate")]
        public Input<string>? BackwardSyncLimitDate { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `open_exchange_rates`: Your Open Exchange Rates Base Currency.
        /// </summary>
        [Input("baseCurrency")]
        public Input<string>? BaseCurrency { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `freshteam`: Your company's Freshteam base domain name (usually **company**.freshteam.com).
        /// </summary>
        [Input("baseDomain")]
        public Input<string>? BaseDomain { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `airtable`: ID of base in Airtable
        /// </summary>
        [Input("baseId")]
        public Input<string>? BaseId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aha`: Your Aha! subdomain.
        /// 	- Service `akeneo`: Your Akeneo base URL.
        /// 	- Service `billing_platform`: Your BillingPlatform subdomain.
        /// 	- Service `boostr`: Your Boostr base URL.
        /// 	- Service `brex`: Your Brex Base URL
        /// 	- Service `centra`: Your Centra base URL.
        /// 	- Service `coalesce`: Your Coalesce base URL.
        /// 	- Service `cornerstone`: Your Cornerstone base URL.
        /// 	- Service `culture_amp`: Your Culture Amp base URL.
        /// 	- Service `datadog`: Your Datadog base url.
        /// 	- Service `factbird`: Your Factbird base url.
        /// 	- Service `fillout`: Your Fillout Base URL.
        /// 	- Service `financial_force`: (Optional) The custom Salesforce domain. Make sure that the `base_url` starts with `https://`.
        /// 	- Service `freshsales`: Your Freshsales product.
        /// 	- Service `gongio`: Your Gong API Base URL.
        /// 	- Service `higher_logic_vanilla`: Your Higher Logic Vanilla base URL.
        /// 	- Service `ironclad`: Your Ironclad base url.
        /// 	- Service `jotform`: Your Jotform base URL.
        /// 	- Service `mailgun`: Your Mailgun base URL.
        /// 	- Service `nice`: Your NICE base URL.
        /// 	- Service `ortto`: Your Ortto base URL. Possible values: `api`, `api.au`, `api.eu`.
        /// 	- Service `prisma_cloud`: Your Prisma Cloud admin console URL.
        /// 	- Service `salesforce`: (Optional) The custom Salesforce domain. Make sure that the `base_url` starts with `https://`.
        /// 	- Service `salesforce_sandbox`: (Optional) The custom Salesforce domain. Make sure that the `base_url` starts with `https://`.
        /// 	- Service `stickyio`: Your sticky.io base URL .
        /// 	- Service `veevavault`: Your Veeva Vault base URL.
        /// 	- Service `vitally`: Your Vitally base URL.
        /// </summary>
        [Input("baseUrl")]
        public Input<string>? BaseUrl { get; set; }

        [Input("bearerToken")]
        private Input<string>? _bearerToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `ada`: Your Ada API key.
        /// 	- Service `crowddev`: Your crowd.dev Auth Token.
        /// 	- Service `customerio`: Your Customer.io App API Key.
        /// 	- Service `freshchat`: Your Freshchat API Token.
        /// 	- Service `hopin`: Your Hopin API key.
        /// 	- Service `orbit`: Your Orbit API Token.
        /// 	- Service `productboard`: Your Productboard API key.
        /// 	- Service `smarthr`: Your SmartHR access token.
        /// 	- Service `sprout`: Your Sprout Social API Access Token.
        /// 	- Service `zenefits`: Your Zenefits bearer token.
        /// </summary>
        public Input<string>? BearerToken
        {
            get => _bearerToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _bearerToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("blobSasUrl")]
        private Input<string>? _blobSasUrl;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `webhooks`: The blob SAS URL of your Azure container. Required if `bucket_service` is set to `AZURE`.
        /// </summary>
        public Input<string>? BlobSasUrl
        {
            get => _blobSasUrl;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _blobSasUrl = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `rarible`: Your Rarible Blockchain.
        /// </summary>
        [Input("blockchain")]
        public Input<string>? Blockchain { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_moat_analytics`: Your Oracle Moat Analytics Brand ID.
        /// </summary>
        [Input("brandId")]
        public Input<string>? BrandId { get; set; }

        [Input("breakdowns")]
        private InputList<string>? _breakdowns;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook`: List of breakdowns which connector will sync. [Possible breakdowns values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#breakdowns).
        /// </summary>
        public InputList<string> Breakdowns
        {
            get => _breakdowns ?? (_breakdowns = new InputList<string>());
            set => _breakdowns = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: Customer S3 Bucket
        /// 	- Service `aws_cloudtrail`: The AWS bucket name which is configured for AWS CloudTrail.
        /// 	- Service `aws_cost_report`: The S3 bucket name with the AWS Cost and Usage Report 
        /// 	- Service `aws_inventory`: The AWS bucket name that is configured for AWS Config.
        /// 	- Service `aws_lambda`: S3 Bucket
        /// 	- Service `cloudfront`: The bucket name for CloudFront.
        /// 	- Service `gcs`: The name of the GCS bucket.
        /// 	- Service `google_play`: The Google Cloud Storage source bucket.
        /// 	- Service `heap`: The S3 bucket name.
        /// 	- Service `kinesis`: The name of the Kinesis bucket.
        /// 	- Service `s3`: The S3 bucket name. Required for connector creation.
        /// 	- Service `segment`: The name of the Segment bucket. Must be populated if `sync_type` is set to `S3`.
        /// 	- Service `wasabi_cloud_storage`: The Wasabi Cloud Storage bucket name. Required for connector creation.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adjust`: Your AWS S3 or GCS bucket.
        /// 	- Service `google_analytics_360`: The name of the bucket.
        /// 	- Service `google_analytics_4_export`: The name of the bucket.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `webhooks`: Whether to store the events in Fivetran's container service or your S3 bucket. Default value: `Fivetran`.
        /// </summary>
        [Input("bucketService")]
        public Input<string>? BucketService { get; set; }

        [Input("businessAccounts")]
        private InputList<string>? _businessAccounts;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `reddit_ads`: Specific Accounts to sync.  Must be populated if `sync_mode` is set to `SpecificAccounts`.
        /// </summary>
        public InputList<string> BusinessAccounts
        {
            get => _businessAccounts ?? (_businessAccounts = new InputList<string>());
            set => _businessAccounts = value;
        }

        [Input("businessId")]
        private Input<string>? _businessId;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `birdeye`: Your Birdeye Business ID.
        /// </summary>
        public Input<string>? BusinessId
        {
            get => _businessId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _businessId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `deposco`: Your Deposco business unit.
        /// </summary>
        [Input("businessUnit")]
        public Input<string>? BusinessUnit { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pardot`: Business Unit Id
        /// </summary>
        [Input("businessUnitId")]
        public Input<string>? BusinessUnitId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `databricks_db`: catalog to sync
        /// </summary>
        [Input("catalog")]
        public Input<string>? Catalog { get; set; }

        [Input("certificate")]
        private Input<string>? _certificate;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `anaplan`: The contents of your PEM certificate file. Must be populated if `auth_mode` is set to `Certificate`.
        /// 	- Service `qualtrics`: Your Client Certificate
        /// 	- Service `salesforce`: Provide content of the `.pem` certificate (only when authentication_method = `ADVANCED`).
        /// 	- Service `salesforce_sandbox`: Provide content of the `.pem` certificate (only when authentication_method = `ADVANCED`).
        /// </summary>
        public Input<string>? Certificate
        {
            get => _certificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _certificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("certificateId")]
        private Input<string>? _certificateId;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `netsuite_suiteanalytics`: Certificate Id
        /// </summary>
        public Input<string>? CertificateId
        {
            get => _certificateId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _certificateId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook`: Time period to attribute conversions based on clicks. [Possible click_attribution_window values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#clickattributionwindow).
        /// 	- Service `pinterest_ads`: The number of days to use as the conversion attribution window for a 'click' action.
        /// </summary>
        [Input("clickAttributionWindow")]
        public Input<string>? ClickAttributionWindow { get; set; }

        [Input("client")]
        public Input<string>? Client { get; set; }

        [Input("clientCert")]
        private Input<string>? _clientCert;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Kafka client certificate.
        /// 	- Service `heroku_kafka`: Heroku Kafka client certificate. Required for `TLS` security protocol.
        /// </summary>
        public Input<string>? ClientCert
        {
            get => _clientCert;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientCert = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientCertKey")]
        private Input<string>? _clientCertKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Kafka client certificate key.
        /// 	- Service `heroku_kafka`: Heroku Kafka client certificate key.  Required for `TLS` security protocol.
        /// </summary>
        public Input<string>? ClientCertKey
        {
            get => _clientCertKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientCertKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `ceridian_dayforce`: Your Ceridian Dayforce Client Host.
        /// </summary>
        [Input("clientHost")]
        public Input<string>? ClientHost { get; set; }

        [Input("clientId")]
        private Input<string>? _clientId;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `acumatica`: Your Acumatica client ID.
        /// 	- Service `adobe_analytics`: Client ID from the OAuth Server-to-Server or Service Account (JWT) credentials of your Adobe Project.
        /// 	- Service `adobe_workfront`: Your Adobe Workfront client ID.
        /// 	- Service `adp_workforce_now`: Your ADP Client ID.
        /// 	- Service `akamai`: Your Akamai client ID.
        /// 	- Service `akeneo`: Your Akeneo client ID.
        /// 	- Service `auth0`: Your Auth0 client ID.
        /// 	- Service `autodesk_bim_360`: Your Autodesk BIM 360 client ID.
        /// 	- Service `bigin_by_zoho_crm`: Your Bigin by Zoho CRM Client Id
        /// 	- Service `billing_platform`: Your BillingPlatform client ID.
        /// 	- Service `bing_webmaster_tools`: Your Bing Webmaster Tools client ID.
        /// 	- Service `brightcove`: Your Brightcove client ID.
        /// 	- Service `brightpearl`: Your Brightpearl client ID.
        /// 	- Service `brivo`: Your Brivo client ID.
        /// 	- Service `buildium`: Your Buildium API client ID.
        /// 	- Service `cabcharge`: Your Cabcharge client ID.
        /// 	- Service `canvas_by_instructure`: Your Canvas by Instructure client ID.
        /// 	- Service `canvas_data_2_by_instructure`: Your Canvas Data 2 by Instructure client ID.
        /// 	- Service `castor_edc`: Your Castor EDC client Id.
        /// 	- Service `clazar`: Your Clazar client ID.
        /// 	- Service `cloudbeds`: Your Cloudbeds client ID.
        /// 	- Service `commercetools`: Your commercetools client ID.
        /// 	- Service `concur`: The SAP Concur Client ID.
        /// 	- Service `constant_contact`: Your Constant Contact client ID.
        /// 	- Service `cornerstone`: Your Cornerstone client ID.
        /// 	- Service `coupa`: Your Coupa client_id
        /// 	- Service `criteo`: Your Criteo Client ID.
        /// 	- Service `criteo_retail_media`: Your Criteo Retail Media client ID.
        /// 	- Service `culture_amp`: Your Culture Amp client ID.
        /// 	- Service `cvent`: Your Cvent client ID.
        /// 	- Service `d2l_brightspace`: Your D2L Brightspace client ID.
        /// 	- Service `dialpad`: Your Dialpad client ID.
        /// 	- Service `ebay`: Your eBay app ID.
        /// 	- Service `exact_online`: Your Exact Online client ID.
        /// 	- Service `fillout`: Your Fillout client ID.
        /// 	- Service `flexport`: The Flexport API Key.
        /// 	- Service `formstack`: Your Formstack client ID.
        /// 	- Service `genesys`: Your Genesys client ID.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Three-digit (000-999) identifier of the SAP client, which is sent to an AS ABAP upon logon.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Three-digit (000-999) identifier of the SAP client, which is sent to an AS ABAP upon logon.
        /// 	- Service `helpdesk`: Your HelpDesk client ID.
        /// 	- Service `hilti_ontrack`: Your Hilti On!Track client ID.
        /// 	- Service `ilevel`: Your iLevel Client ID.
        /// 	- Service `instructure`: Your Instructure client ID.
        /// 	- Service `integral_ad_science`: Your integral_ad_science client id.
        /// 	- Service `ironclad`: Your Ironclad client ID.
        /// 	- Service `jama_software`: Your Jama Software client ID.
        /// 	- Service `jibble`: Your Jibble client ID.
        /// 	- Service `khoros_communities`: Your Khoros Communities client ID.
        /// 	- Service `learn_amp`: Your Learn Amp client ID.
        /// 	- Service `looker_source`: Your Looker Client ID.
        /// 	- Service `marketo`: Marketo REST API Client Id.
        /// 	- Service `medallia`: Medallia Client ID
        /// 	- Service `microsoft_entra_id`: Your Microsoft Entra ID Client ID.
        /// 	- Service `microsoft_power_bi`: Your Microsoft Power BI client ID.
        /// 	- Service `microsoft_teams`: Your Microsoft Teams client ID.
        /// 	- Service `navan`: Your Navan client ID.
        /// 	- Service `nice`: Your NICE client ID.
        /// 	- Service `on24`: Your ON24 client ID.
        /// 	- Service `oracle_sap_hva_netweaver`: Three-digit (000-999) identifier of the SAP client, which is sent to an AS ABAP upon logon.
        /// 	- Service `paychex`: Your Paychex client ID.
        /// 	- Service `paypal`: `Client ID` of your PayPal client application.
        /// 	- Service `paypal_sandbox`: `Client ID` of your PayPal client application.
        /// 	- Service `personio`: Your Personio Client ID.
        /// 	- Service `piwik_pro`: Your Piwik PRO client ID.
        /// 	- Service `podio`: Your Podio client ID.
        /// 	- Service `power_reviews_enterprise`: Your PowerReviews Enterprise Client ID.
        /// 	- Service `prisma_cloud`: Your Prisma Cloud access key ID.
        /// 	- Service `procore`: Your Procore client ID.
        /// 	- Service `quora_ads`: Your Quora Ads client ID.
        /// 	- Service `reltio`: Your Reltio client ID.
        /// 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud Client ID.
        /// 	- Service `salesforce_marketing_cloud`: The Salesforce Marketing Cloud client ID.
        /// 	- Service `salesloft`: `Client ID` of your Salesloft client application.
        /// 	- Service `sana`: Your Sana client ID.
        /// 	- Service `sap_success_factors`: Your SAP SuccessFactors Client ID.
        /// 	- Service `servicenow`: ServiceNow Client ID.
        /// 	- Service `servicetitan`: Your ServiceTitan client ID.
        /// 	- Service `sharetribe`: Your Sharetribe client ID.
        /// 	- Service `shipnetwork`: Your ShipNetwork client ID.
        /// 	- Service `showpad`: Your Showpad client ID.
        /// 	- Service `sigma_computing_source`: Your Sigma Computing client ID.
        /// 	- Service `skillstx`: Your SkillsTX client ID.
        /// 	- Service `skimlinks`: Your Skimlinks client ID.
        /// 	- Service `smartrecruiters`: Your SmartRecruiters client ID.
        /// 	- Service `splash`: Your Splash client ID.
        /// 	- Service `square`: The Application ID of your organization.
        /// 	- Service `standard_metrics`: Your Standard Metrics Client ID.
        /// 	- Service `sugarcrm`: Your SugarCRM client ID.
        /// 	- Service `swoogo`: Your Swoogo client Id.
        /// 	- Service `taboola`: The Taboola client ID.
        /// 	- Service `talkdesk`: The Client ID of your OAuth Client
        /// 	- Service `tive`: Your Tive client ID.
        /// 	- Service `toast`: Your Toast client ID.
        /// 	- Service `trelica`: Your Trelica client ID.
        /// 	- Service `tremendous`: Your Tremendous client ID.
        /// 	- Service `tymeshift`: Your Tymeshift email.
        /// 	- Service `udemy_business`: Your Udemy Business client ID.
        /// 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management client ID.
        /// 	- Service `vimeo`: Your Vimeo client ID.
        /// 	- Service `visma`: Your Visma client ID.
        /// 	- Service `vonage_contact_center`: Your Vonage Contact Center client ID.
        /// 	- Service `walmart_marketplace`: Your Walmart Marketplace client ID.
        /// 	- Service `xero`: your clientId
        /// 	- Service `xray`: Your Xray Client ID.
        /// 	- Service `yahoo_display_ads_on_yahoo_japan`: Your Yahoo Display Ads on Yahoo Japan client ID.
        /// 	- Service `yougov_sport`: Your Yougov Sport client ID.
        /// 	- Service `zendesk_chat`: Your Zendesk client ID.
        /// 	- Service `zoho_books`: Your Zoho Books Client ID.
        /// 	- Service `zoho_campaigns`: Your Zoho Campaigns Client ID.
        /// 	- Service `zoho_desk`: Your Zoho Desk Client Id.
        /// 	- Service `zoho_inventory`: Your Zoho Inventory client ID.
        /// 	- Service `zoho_recruit`: Your Zoho Recruit client ID.
        /// 	- Service `zuora`: Zuora Client ID.
        /// 	- Service `zuora_sandbox`: Zuora Client ID.
        /// </summary>
        public Input<string>? ClientId
        {
            get => _clientId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientKey")]
        private Input<string>? _clientKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appfigures`: Your Appfigures Client Key.
        /// 	- Service `thinkific`: Your Thinkific client key.
        /// 	- Service `yougov_sport`: Your Yougov Sport client key.
        /// </summary>
        public Input<string>? ClientKey
        {
            get => _clientKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientName")]
        private Input<string>? _clientName;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `destini`: Your Destini Client Name.
        /// 	- Service `medallia`: Medallia company name
        /// </summary>
        public Input<string>? ClientName
        {
            get => _clientName;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientName = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `ceridian_dayforce`: Your Ceridian Dayforce Client Namespace.
        /// </summary>
        [Input("clientNamespace")]
        public Input<string>? ClientNamespace { get; set; }

        [Input("clientPrivateKey")]
        private Input<string>? _clientPrivateKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: Client Private Key in .pem format.
        /// 	- Service `aurora_postgres`: Client Private Key in .pem format.
        /// 	- Service `azure_postgres`: Client Private Key in .pem format.
        /// 	- Service `google_cloud_mysql`: Client Private Key in .pem format.
        /// 	- Service `google_cloud_postgresql`: Client Private Key in .pem format.
        /// 	- Service `heroku_postgres`: Client Private Key in .pem format.
        /// 	- Service `magento_mysql`: Client Private Key in .pem format.
        /// 	- Service `magento_mysql_rds`: Client Private Key in .pem format.
        /// 	- Service `maria`: Client Private Key in .pem format.
        /// 	- Service `maria_azure`: Client Private Key in .pem format.
        /// 	- Service `maria_rds`: Client Private Key in .pem format.
        /// 	- Service `mysql`: Client Private Key in .pem format.
        /// 	- Service `mysql_azure`: Client Private Key in .pem format.
        /// 	- Service `mysql_rds`: Client Private Key in .pem format.
        /// 	- Service `postgres`: Client Private Key in .pem format.
        /// 	- Service `postgres_rds`: Client Private Key in .pem format.
        /// </summary>
        public Input<string>? ClientPrivateKey
        {
            get => _clientPrivateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientPrivateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: Client Certificate in .pem format.
        /// 	- Service `aurora_postgres`: Client Certificate in .pem format.
        /// 	- Service `azure_postgres`: Client Certificate in .pem format.
        /// 	- Service `google_cloud_mysql`: Client Certificate in .pem format.
        /// 	- Service `google_cloud_postgresql`: Client Certificate in .pem format.
        /// 	- Service `heroku_postgres`: Client Certificate in .pem format.
        /// 	- Service `magento_mysql`: Client Certificate in .pem format.
        /// 	- Service `magento_mysql_rds`: Client Certificate in .pem format.
        /// 	- Service `maria`: Client Certificate in .pem format.
        /// 	- Service `maria_azure`: Client Certificate in .pem format.
        /// 	- Service `maria_rds`: Client Certificate in .pem format.
        /// 	- Service `mysql`: Client Certificate in .pem format.
        /// 	- Service `mysql_azure`: Client Certificate in .pem format.
        /// 	- Service `mysql_rds`: Client Certificate in .pem format.
        /// 	- Service `postgres`: Client Certificate in .pem format.
        /// 	- Service `postgres_rds`: Client Certificate in .pem format.
        /// </summary>
        [Input("clientPublicCertificate")]
        public Input<string>? ClientPublicCertificate { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `acumatica`: Your Acumatica client secret.
        /// 	- Service `adobe_analytics`: Client Secret from the OAuth Server-to-Server or Service Account (JWT) credentials of your Adobe Project.
        /// 	- Service `adobe_workfront`: Your Adobe Workfront client secret.
        /// 	- Service `adp_workforce_now`: Your ADP Client Secret.
        /// 	- Service `akamai`: Your Akamai client secret.
        /// 	- Service `akeneo`: Your Akeneo client secret.
        /// 	- Service `auth0`: Your Auth0 client secret.
        /// 	- Service `autodesk_bim_360`: Your Autodesk BIM 360 client secret.
        /// 	- Service `bigin_by_zoho_crm`: Your Bigin by Zoho CRM Client Secret
        /// 	- Service `billing_platform`: Your BillingPlatform client secret.
        /// 	- Service `bing_webmaster_tools`: Your Bing Webmaster Tools client secret.
        /// 	- Service `brightcove`: Your Brightcove client secret.
        /// 	- Service `brightpearl`: Your Brightpearl client secret.
        /// 	- Service `brivo`: Your Brivo client secret.
        /// 	- Service `canvas_by_instructure`: Your Canvas by Instructure client secret.
        /// 	- Service `castor_edc`: Your Castor EDC client secret.
        /// 	- Service `clazar`: Your Clazar client secret.
        /// 	- Service `cloudbeds`: Your Cloudbeds client secret.
        /// 	- Service `commercetools`: Your commercetools client secret.
        /// 	- Service `concur`: The SAP Concur Client secret.
        /// 	- Service `constant_contact`: Your Constant Contact client secret.
        /// 	- Service `cornerstone`: Your Cornerstone client secret.
        /// 	- Service `coupa`: Your Coupa client_id
        /// 	- Service `criteo`: Your Criteo client secret key.
        /// 	- Service `criteo_retail_media`: Your Criteo Retail Media client secret.
        /// 	- Service `culture_amp`: Your Culture Amp client secret.
        /// 	- Service `cvent`: Your Cvent client secret.
        /// 	- Service `d2l_brightspace`: Your D2L Brightspace client secret.
        /// 	- Service `dialpad`: Your Dialpad client secret.
        /// 	- Service `ebay`: Your eBay cert ID.
        /// 	- Service `exact_online`: Your Exact Online client secret.
        /// 	- Service `fillout`: Your Fillout client secret
        /// 	- Service `flexport`: The Flexport API Secret.
        /// 	- Service `formstack`: Your Formstack client secret.
        /// 	- Service `genesys`: Your Genesys client secret.
        /// 	- Service `helpdesk`: Your HelpDesk client secret.
        /// 	- Service `hilti_ontrack`: Your Hilti On!Track client secret.
        /// 	- Service `ilevel`: Your iLevel Client Secret.
        /// 	- Service `instructure`: Your Instructure client secret.
        /// 	- Service `integral_ad_science`: Your integral_ad_science client secret.
        /// 	- Service `ironclad`: Your Ironclad client secret.
        /// 	- Service `jama_software`: Your Jama Software client secret.
        /// 	- Service `jibble`: Your Jibble client secret.
        /// 	- Service `learn_amp`: Your Learn Amp client secret.
        /// 	- Service `looker_source`: Your Looker Client Secret.
        /// 	- Service `marketo`: Marketo REST API Client Secret.
        /// 	- Service `medallia`: Medallia Client Secret key
        /// 	- Service `microsoft_entra_id`: Your Microsoft Entra ID Client Secret.
        /// 	- Service `microsoft_power_bi`: Your Microsoft Power BI client secret.
        /// 	- Service `microsoft_teams`: Your Microsoft Teams client secret.
        /// 	- Service `navan`: Your Navan client secret.
        /// 	- Service `nice`: Your NICE client secret.
        /// 	- Service `paychex`: Your Paychex client secret.
        /// 	- Service `personio`: Your Personio secret.
        /// 	- Service `piwik_pro`: Your Piwik PRO client secret.
        /// 	- Service `podio`: Your Podio client secret.
        /// 	- Service `power_reviews_enterprise`: Your PowerReviews Enterprise Client Secret.
        /// 	- Service `prisma_cloud`: Your Prisma Cloud secret access Key.
        /// 	- Service `procore`: Your Procore client secret.
        /// 	- Service `quora_ads`: Your Quora Ads client secret.
        /// 	- Service `reltio`: Your Reltio client secret.
        /// 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud Client secret.
        /// 	- Service `salesforce_marketing_cloud`: The Salesforce Marketing Cloud client secret.
        /// 	- Service `salesloft`: `Client Secret` of your Salesloft client application.
        /// 	- Service `sana`: Your Sana client secret.
        /// 	- Service `sap_success_factors`: Your SAP SuccessFactors Client Secret that you generated through SAML Assertion.
        /// 	- Service `servicenow`: ServiceNow Client Secret.
        /// 	- Service `servicetitan`: Your ServiceTitan secret key.
        /// 	- Service `sharetribe`: Your Sharetribe client secret.
        /// 	- Service `showpad`: Your Showpad client secret.
        /// 	- Service `sigma_computing_source`: Your Sigma Computing client secret.
        /// 	- Service `skillstx`: Your SkillsTX client secret.
        /// 	- Service `skimlinks`: Your Skimlinks client secret.
        /// 	- Service `smartrecruiters`: Your SmartRecruiters client secret.
        /// 	- Service `splash`: Your Splash client secret.
        /// 	- Service `square`: The Application Secret of your organization.
        /// 	- Service `standard_metrics`: Your Standard Metrics Client secret.
        /// 	- Service `sugarcrm`: Your SugarCRM client secret.
        /// 	- Service `swoogo`: Your Swoogo Client Secret.
        /// 	- Service `taboola`: The Taboola client secret.
        /// 	- Service `talkdesk`: The Client Secret of your OAuth Client
        /// 	- Service `thinkific`: Your Thinkific client secret.
        /// 	- Service `tive`: Your Tive client secret.
        /// 	- Service `toast`: Your Toast client secret.
        /// 	- Service `trelica`: Your Trelica client secret.
        /// 	- Service `tremendous`: Your Tremendous client secret.
        /// 	- Service `tymeshift`: Your Tymeshift password.
        /// 	- Service `udemy_business`: Your Udemy Business client secret.
        /// 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management client secret.
        /// 	- Service `vimeo`: Your Vimeo client secret.
        /// 	- Service `visma`: Your Visma client secret.
        /// 	- Service `vonage_contact_center`: Your Vonage Contact Center client secret.
        /// 	- Service `walmart_marketplace`: Your Walmart Marketplace client secret.
        /// 	- Service `xero`: your clientSecret
        /// 	- Service `xray`: Your Xray Client Secret.
        /// 	- Service `yahoo_display_ads_on_yahoo_japan`: Your Yahoo Display Ads on Yahoo Japan client secret.
        /// 	- Service `zendesk_chat`: Your Zendesk client secret.
        /// 	- Service `zoho_books`: Your Zoho Books Client Secret.
        /// 	- Service `zoho_campaigns`: Your Zoho Campaigns Client Secret.
        /// 	- Service `zoho_desk`: Your Zoho Desk Client secret.
        /// 	- Service `zoho_inventory`: Your Zoho Inventory client secret.
        /// 	- Service `zoho_recruit`: Your Zoho Recruit client secret.
        /// 	- Service `zuora`: Zuora Client Secret.
        /// 	- Service `zuora_sandbox`: Zuora Client Secret.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Cloud storage type Braze Current is connected to.
        /// </summary>
        [Input("cloudStorageType")]
        public Input<string>? CloudStorageType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `rarible`: Your Rarible Collection Address.
        /// </summary>
        [Input("collectionAddress")]
        public Input<string>? CollectionAddress { get; set; }

        [Input("columns")]
        private InputList<string>? _columns;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_publishers`: Columns provide all trafficking statistics and revenue information available for the chosen Dimensions.
        /// </summary>
        public InputList<string> Columns
        {
            get => _columns ?? (_columns = new InputList<string>());
            set => _columns = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `alida`: Your Alida community API key name.
        /// </summary>
        [Input("communityApiKeyName")]
        public Input<string>? CommunityApiKeyName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `khoros_communities`: Your Khoros Communities community domain.
        /// </summary>
        [Input("communityDomain")]
        public Input<string>? CommunityDomain { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `khoros_communities`: Your Khoros Communities community ID.
        /// </summary>
        [Input("communityId")]
        public Input<string>? CommunityId { get; set; }

        [Input("companies")]
        private InputList<string>? _companies;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `business_central`: List of companies to sync
        /// </summary>
        public InputList<string> Companies
        {
            get => _companies ?? (_companies = new InputList<string>());
            set => _companies = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `ordway`: Your Ordway company name.
        /// </summary>
        [Input("company")]
        public Input<string>? Company { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `360learning`: Your 360Learning Company ID.
        /// 	- Service `sage_intacct`: Company ID
        /// 	- Service `sap_success_factors`: Your SAP SuccessFactors Company ID.
        /// </summary>
        [Input("companyId")]
        public Input<string>? CompanyId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cj_commission_detail`: Your CJ Commission Detail company IDs.
        /// </summary>
        [Input("companyIds")]
        public Input<string>? CompanyIds { get; set; }

        [Input("companyKey")]
        private Input<string>? _companyKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `khoros_care`: Your Khoros Care companyKey.
        /// 	- Service `upland`: Your Upland Software Company Key.
        /// </summary>
        public Input<string>? CompanyKey
        {
            get => _companyKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _companyKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `clockodo`: Your Clockodo company name.
        /// </summary>
        [Input("companyName")]
        public Input<string>? CompanyName { get; set; }

        [Input("companyRequestToken")]
        private Input<string>? _companyRequestToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `concur`: The SAP Concur Company Request Token
        /// </summary>
        public Input<string>? CompanyRequestToken
        {
            get => _companyRequestToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _companyRequestToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `concur`: The SAP Concur Company UUID
        /// </summary>
        [Input("companyUuid")]
        public Input<string>? CompanyUuid { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: If your files are compressed, but do not have extensions indicating the compression method, you can force them to be uncompressed according to the selected compression algorithm. Leave the value as infer if your files are saved with the correct compression extensions.
        /// 	- Service `azure_blob_storage`: The secrets that should be passed to the function at runtime.
        /// 	- Service `box`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
        /// 	- Service `dropbox`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
        /// 	- Service `email`: The secrets that should be passed to the function at runtime.
        /// 	- Service `ftp`: The secrets that should be passed to the function at runtime.
        /// 	- Service `gcs`: The secrets that should be passed to the function at runtime.
        /// 	- Service `google_drive`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
        /// 	- Service `kinesis`: If your files are compressed, but do not have extensions indicating the compression method, you can force them to be uncompressed according to the selected compression algorithm. Leave the value as infer if your files are saved with the correct compression extensions.
        /// 	- Service `s3`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
        /// 	- Service `sftp`: The secrets that should be passed to the function at runtime.
        /// 	- Service `share_point`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
        /// 	- Service `wasabi_cloud_storage`: The compression format is used to let Fivetran know that even files without a compression extension should be decompressed using the selected compression format.
        /// </summary>
        [Input("compression")]
        public Input<string>? Compression { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_display_and_video_360`: The report configuration method. Specifies whether a new configuration is defined manually or an existing configuration is reused. The default value is `CREATE_NEW`.
        /// </summary>
        [Input("configMethod")]
        public Input<string>? ConfigMethod { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `snowplow`: Public repository URL containing JSON configuration files.
        /// </summary>
        [Input("configRepositoryUrl")]
        public Input<string>? ConfigRepositoryUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook`: Option to select Prebuilt Reports or Custom Reports. [Possible config_type values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#configtype).
        /// 	- Service `google_analytics`: Whether to use the [Prebuilt Reports or Custom Reports](https://fivetran.com/docs/connectors/applications/google-analytics#schemainformation).
        /// </summary>
        [Input("configType")]
        public Input<string>? ConfigType { get; set; }

        [Input("connectPassword")]
        private Input<string>? _connectPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `xactly`: Your Xactly Connect password.
        /// </summary>
        public Input<string>? ConnectPassword
        {
            get => _connectPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _connectPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `xactly`: Your Xactly Connect username.
        /// </summary>
        [Input("connectUsername")]
        public Input<string>? ConnectUsername { get; set; }

        [Input("connectingUser")]
        public Input<string>? ConnectingUser { get; set; }

        [Input("connectingUserEmail")]
        public Input<string>? ConnectingUserEmail { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_msk`: How Fivetran connects to your message brokers in the cluster
        /// 	- Service `azure_blob_storage`: Connection Method. Possible values:  `DIRECT`: Fivetran will connect directly to your storage container, `SSH_TUNNEL`: Fivetran will connect to your storage container using a host machine (commonly used for VPN connections), `PRIVATE_LINK`: Fivetran will connect to your storage container using PrivateLink.
        /// 	- Service `azure_function`: Connection Method. Possible values:  `DIRECT`: Fivetran will connect directly to your function, `PRIVATE_LINK`: Fivetran will connect to your storage container using PrivateLink.
        /// 	- Service `azure_service_bus`: The connection method
        /// 	- Service `sftp`: The connection method used to connect to SFTP Server.
        /// </summary>
        [Input("connectionMethod")]
        public Input<string>? ConnectionMethod { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: Your Data Locker Connection Name. Default value: `data-locker-hourly/
        /// </summary>
        [Input("connectionName")]
        public Input<string>? ConnectionName { get; set; }

        [Input("connectionString")]
        private Input<string>? _connectionString;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: The blob storage container connection string.
        /// 	- Service `azure_event_hub`: Connection string of the Event Hub Namespace you want to sync.
        /// 	- Service `azure_service_bus`: The connection string used for authentication. Required if the authentication type is `ConnectionString` 
        /// 	- Service `microsoft_dynamics_365_fno`: The blob storage container's connection string.
        /// 	- Service `microsoft_dynamics_365_fo`: The blob storage container connection string.
        /// </summary>
        public Input<string>? ConnectionString
        {
            get => _connectionString;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _connectionString = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `aurora_postgres`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `aws_cost_report`: Connection method. Default value: `Directly`.
        /// 	- Service `aws_lambda`: Connection method. Default value: `Directly`.
        /// 	- Service `azure_blob_storage`: Connection method. Default value: `Directly`.
        /// 	- Service `azure_cosmos_for_mongo`: Possible values:`Directly`, `PrivateLink`. `Directly` is the default value
        /// 	- Service `azure_postgres`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `azure_sql_db`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `azure_sql_managed_db`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `bigquery_db`: Direct or PrivateLink connection
        /// 	- Service `clarity`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `cockroachdb`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `db2i_hva`: Possible values:`SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and the following parameter's values are specified: `tunnel_host`, `tunnel_port`, `tunnel_user`.
        /// 	- Service `db2i_sap_hva`: Possible values:`SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`.
        /// 	- Service `documentdb`: Possible values:`SshTunnel`, `PrivateLink` . `SshTunnel` is used as a value if this parameter is omitted in the request and the following parameter's values are specified: `tunnel_host`, `tunnel_port`, `tunnel_user`.
        /// 	- Service `dynamics_365_fo`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `ehr`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `elastic_cloud`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `email`: Connection method. Default value: `Directly`.
        /// 	- Service `es_self_hosted`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `google_cloud_mysql`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `google_cloud_postgresql`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `google_cloud_sqlserver`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `hana_sap_hva_b1`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `hana_sap_hva_ecc`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `hana_sap_hva_s4`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `heroku_postgres`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `kinesis`: Connection method. Default value: `Directly`.
        /// 	- Service `magento_mysql`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `magento_mysql_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `maria`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `maria_azure`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `maria_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `mongo`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `mongo_sharded`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `mysql`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `mysql_azure`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `mysql_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `opendistro`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `opensearch`: Possible values:`Directly`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `oracle`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `oracle_ebs`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `oracle_hva`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `oracle_rac`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `oracle_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `oracle_sap_hva`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `oracle_sap_hva_netweaver`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `postgres`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `postgres_rds`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `redshift_db`: Directly or Private Link
        /// 	- Service `s3`: Connection method. Default value: `Directly`.
        /// 	- Service `sap_hana`: Possible values:`Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `sap_s4hana`: Connection Method
        /// 	- Service `snowflake_db`: Directly or Private Link
        /// 	- Service `sql_server`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `sql_server_hva`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `sql_server_rds`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// 	- Service `sql_server_sap_ecc_hva`: Possible values: `Directly`, `PrivateLink`, `SshTunnel`. `SshTunnel` is used as a value if this parameter is omitted in the request and any of the following parameter's values is specified: `tunnel_host`, `tunnel_port`, `tunnel_user`. Otherwise, `Directly` is used as a value if the parameter is omitted.
        /// </summary>
        [Input("connectionType")]
        public Input<string>? ConnectionType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `prisma_cloud`: Your Prisma Cloud console URL.
        /// </summary>
        [Input("consoleUrl")]
        public Input<string>? ConsoleUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Kafka consumer group name.
        /// 	- Service `aws_msk`: The name of consumer group created for Fivetran.
        /// 	- Service `azure_event_hub`: Name of consumer group created for Fivetran.
        /// 	- Service `confluent_cloud`: Confluent Cloud consumer group name.
        /// 	- Service `heroku_kafka`: Heroku Kafka consumer group name.
        /// </summary>
        [Input("consumerGroup")]
        public Input<string>? ConsumerGroup { get; set; }

        [Input("consumerKey")]
        private Input<string>? _consumerKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `netsuite_suiteanalytics`: Consumer Key
        /// 	- Service `odoo`: Your Odoo consumer key.
        /// 	- Service `twitter`: API Key of your app
        /// 	- Service `twitter_ads`: The Twitter App consumer key.
        /// 	- Service `woocommerce`: Your WooCommerce Consumer key.
        /// </summary>
        public Input<string>? ConsumerKey
        {
            get => _consumerKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _consumerKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `xactly`: Your Xactly Connect consumer name.
        /// </summary>
        [Input("consumerName")]
        public Input<string>? ConsumerName { get; set; }

        [Input("consumerSecret")]
        private Input<string>? _consumerSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `netsuite_suiteanalytics`: Consumer Secret
        /// 	- Service `odoo`: Your Odoo consumer secret.
        /// 	- Service `twitter`: API Secret of your app
        /// 	- Service `twitter_ads`: The Twitter App consumer secret.
        /// 	- Service `woocommerce`: Your WooCommerce Consumer secret.
        /// </summary>
        public Input<string>? ConsumerSecret
        {
            get => _consumerSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _consumerSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: IP address of the Azure Storage Container which is accessible from host machine.
        /// </summary>
        [Input("containerAddress")]
        public Input<string>? ContainerAddress { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: The name of the blob container.
        /// 	- Service `microsoft_dynamics_365_fno`: The name of the blob container.
        /// 	- Service `microsoft_dynamics_365_fo`: The name of the blob container.
        /// </summary>
        [Input("containerName")]
        public Input<string>? ContainerName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `youtube_analytics`: Used only for Content Owner reports. The ID of the content owner for whom the API request is being made.
        /// </summary>
        [Input("contentOwnerId")]
        public Input<string>? ContentOwnerId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `acumatica`: Your Acumatica contract version.
        /// </summary>
        [Input("contractVersion")]
        public Input<string>? ContractVersion { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `helpscout`: Your conversation webhook URL
        /// </summary>
        [Input("conversationWebhookUrl")]
        public Input<string>? ConversationWebhookUrl { get; set; }

        [Input("conversionDimensions")]
        private InputList<string>? _conversionDimensions;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_campaign_manager`: Conversion Dimensions.
        /// </summary>
        public InputList<string> ConversionDimensions
        {
            get => _conversionDimensions ?? (_conversionDimensions = new InputList<string>());
            set => _conversionDimensions = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pinterest_ads`: The date that the user interacted with the ad OR completed a conversion event.
        /// </summary>
        [Input("conversionReportTime")]
        public Input<string>? ConversionReportTime { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_ads`: A period of time in days during which a conversion is recorded.
        /// </summary>
        [Input("conversionWindowSize")]
        public Input<int>? ConversionWindowSize { get; set; }

        [Input("convertDatsTypeToDate")]
        public Input<bool>? ConvertDatsTypeToDate { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adjust`: CSV definition for the CSV export (https://help.adjust.com/en/article/csv-uploads#how-do-i-format-my-csv-definition).
        /// </summary>
        [Input("csvDefinition")]
        public Input<string>? CsvDefinition { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `criteo`: Currency
        /// 	- Service `rokt`: Your Rokt currency.
        /// </summary>
        [Input("currency")]
        public Input<string>? Currency { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `coalesce`: Your Coalesce Custom Base URL.
        /// 	- Service `datadog`: Your Datadog custom base url.
        /// 	- Service `deposco`: Your Deposco custom base URL.
        /// </summary>
        [Input("customBaseUrl")]
        public Input<string>? CustomBaseUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `iterable`: Custom Events Sync Mode.
        /// </summary>
        [Input("customEventSyncMode")]
        public Input<string>? CustomEventSyncMode { get; set; }

        [Input("customEvents")]
        private InputList<string>? _customEvents;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `iterable`: List of custom events to sync. Should be specified when `custom_event_sync_mode` is `SelectedEvents`
        /// </summary>
        public InputList<string> CustomEvents
        {
            get => _customEvents ?? (_customEvents = new InputList<string>());
            set => _customEvents = value;
        }

        [Input("customFieldIds")]
        private InputList<string>? _customFieldIds;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_publishers`: The list of custom field IDs included in the report. Custom fields can only be selected with their corresponding dimensions.
        /// </summary>
        public InputList<string> CustomFieldIds
        {
            get => _customFieldIds ?? (_customFieldIds = new InputList<string>());
            set => _customFieldIds = value;
        }

        [Input("customFloodlightVariables")]
        private InputList<string>? _customFloodlightVariables;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_campaign_manager`: Custom Floodlight variables enable you to capture information beyond the basics (visits and revenue) that you can collect with standard parameters in your tags.
        /// </summary>
        public InputList<string> CustomFloodlightVariables
        {
            get => _customFloodlightVariables ?? (_customFloodlightVariables = new InputList<string>());
            set => _customFloodlightVariables = value;
        }

        [Input("customPayloads")]
        private InputList<Inputs.ConnectorConfigCustomPayloadGetArgs>? _customPayloads;
        public InputList<Inputs.ConnectorConfigCustomPayloadGetArgs> CustomPayloads
        {
            get => _customPayloads ?? (_customPayloads = new InputList<Inputs.ConnectorConfigCustomPayloadGetArgs>());
            set => _customPayloads = value;
        }

        [Input("customReports")]
        private InputList<Inputs.ConnectorConfigCustomReportGetArgs>? _customReports;
        public InputList<Inputs.ConnectorConfigCustomReportGetArgs> CustomReports
        {
            get => _customReports ?? (_customReports = new InputList<Inputs.ConnectorConfigCustomReportGetArgs>());
            set => _customReports = value;
        }

        [Input("customTables")]
        private InputList<Inputs.ConnectorConfigCustomTableGetArgs>? _customTables;
        public InputList<Inputs.ConnectorConfigCustomTableGetArgs> CustomTables
        {
            get => _customTables ?? (_customTables = new InputList<Inputs.ConnectorConfigCustomTableGetArgs>());
            set => _customTables = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `dbt_cloud`: Your dbt Cloud access url.
        /// 	- Service `factbird`: Your Factbird custom base url.
        /// 	- Service `jotform`: Your Jotform custom base URL.
        /// </summary>
        [Input("customUrl")]
        public Input<string>? CustomUrl { get; set; }

        [Input("customerApiKey")]
        private Input<string>? _customerApiKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `ukg_pro`: Your UKG Pro Customer API key.
        /// </summary>
        public Input<string>? CustomerApiKey
        {
            get => _customerApiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _customerApiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_ads`: ID of the customer, can be retrieved from your AdWords dashboard.
        /// </summary>
        [Input("customerId")]
        public Input<string>? CustomerId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_commerce_cloud`: The parameter to retrieve customer details.
        /// </summary>
        [Input("customerListId")]
        public Input<string>? CustomerListId { get; set; }

        [Input("dailyApiCallLimit")]
        public Input<int>? DailyApiCallLimit { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cosmos`: The source data access method. Supported values:`ACCOUNT_KEY`- Data access method that uses account keys to authenticate to the source database. It comes in both read-write and read-only variants.`RESOURCE_TOKEN`- Fine-grained permission model based on native Azure Cosmos DB users and permissions. Learn more in our [Azure Cosmos DB Data Access Methods documentation](https://fivetran.com/docs/connectors/databases/cosmos#dataaccessmethods).
        /// </summary>
        [Input("dataAccessMethod")]
        public Input<string>? DataAccessMethod { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `brightpearl`: Your Brightpearl data center.
        /// 	- Service `qualtrics`: Data center ID of the Qualtrics account. Can be found in the URL before `qualtrics.com`. (For example, if your URL is `youraccount.ca1.qualtrics.com`, then the data center is `ca1`.)
        /// 	- Service `zoho_crm`: Data Center, depending on the Domain name
        /// </summary>
        [Input("dataCenter")]
        public Input<string>? DataCenter { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `zonka_feedback`: Your Zonka Feedback data center ID.
        /// </summary>
        [Input("dataCenterId")]
        public Input<string>? DataCenterId { get; set; }

        [Input("dataModelPathAliasLists")]
        private InputList<Inputs.ConnectorConfigDataModelPathAliasListGetArgs>? _dataModelPathAliasLists;
        public InputList<Inputs.ConnectorConfigDataModelPathAliasListGetArgs> DataModelPathAliasLists
        {
            get => _dataModelPathAliasLists ?? (_dataModelPathAliasLists = new InputList<Inputs.ConnectorConfigDataModelPathAliasListGetArgs>());
            set => _dataModelPathAliasLists = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bigquery_db`: Data set name
        /// </summary>
        [Input("dataSetName")]
        public Input<string>? DataSetName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: The database name.
        /// 	- Service `aurora_postgres`: The database name.
        /// 	- Service `azure_cosmos_for_mongo`: Authentication database for the source. Usually 'admin'.
        /// 	- Service `azure_postgres`: The database name.
        /// 	- Service `azure_sql_db`: The database name.
        /// 	- Service `azure_sql_managed_db`: The database name.
        /// 	- Service `clarity`: The database name.
        /// 	- Service `cockroachdb`: The database name.
        /// 	- Service `db2i_hva`: The database name.
        /// 	- Service `db2i_sap_hva`: The database name.
        /// 	- Service `dynamics_365_fo`: The database name.
        /// 	- Service `ehr`: The database name.
        /// 	- Service `google_cloud_mysql`: The database name.
        /// 	- Service `google_cloud_postgresql`: The database name.
        /// 	- Service `google_cloud_sqlserver`: The database name.
        /// 	- Service `hana_sap_hva_b1`: The Hana database name.
        /// 	- Service `hana_sap_hva_ecc`: The Hana database name.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The Hana database name.
        /// 	- Service `hana_sap_hva_s4`: The Hana database name.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The Hana database name.
        /// 	- Service `heroku_postgres`: The database name.
        /// 	- Service `magento_mysql`: The database name.
        /// 	- Service `magento_mysql_rds`: The database name.
        /// 	- Service `maria`: The database name.
        /// 	- Service `maria_azure`: The database name.
        /// 	- Service `maria_rds`: The database name.
        /// 	- Service `mysql`: The database name.
        /// 	- Service `mysql_azure`: The database name.
        /// 	- Service `mysql_rds`: The database name.
        /// 	- Service `oracle`: The database name.
        /// 	- Service `oracle_ebs`: The database name.
        /// 	- Service `oracle_hva`: The database name.
        /// 	- Service `oracle_rac`: The database name.
        /// 	- Service `oracle_rds`: The database name.
        /// 	- Service `oracle_sap_hva`: The database name.
        /// 	- Service `postgres`: The database name.
        /// 	- Service `postgres_rds`: The database name.
        /// 	- Service `redshift_db`: The database name: Redshift
        /// 	- Service `sap_hana`: The database name.
        /// 	- Service `sap_s4hana`: The database name.
        /// 	- Service `snowflake_db`: The database name: Snowflake
        /// 	- Service `sql_server`: The database name.
        /// 	- Service `sql_server_hva`: The database name.
        /// 	- Service `sql_server_rds`: The database name.
        /// 	- Service `sql_server_sap_ecc_hva`: The database name.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `firebase`: Database Name
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_analytics_360`: The dataset ID.
        /// 	- Service `google_analytics_4_export`: The Dataset ID.
        /// </summary>
        [Input("datasetId")]
        public Input<string>? DatasetId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `netsuite_suiteanalytics`: The NetSuite data source value: `NetSuite.com`.
        /// </summary>
        [Input("datasource")]
        public Input<string>? Datasource { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics`: The aggregation duration you want. Default value: `HOUR` .
        /// </summary>
        [Input("dateGranularity")]
        public Input<string>? DateGranularity { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `myosh`: Your Myosh Server variables/db .
        /// </summary>
        [Input("db")]
        public Input<string>? Db { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Optional. You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible. If your files sync with the wrong number of columns, consider setting this value
        /// 	- Service `azure_blob_storage`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `box`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `dropbox`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `email`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `ftp`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `gcs`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `google_drive`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `kinesis`: Optional. You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible. If your files sync with the wrong number of columns, consider setting this value
        /// 	- Service `s3`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `sftp`: You can specify your the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `share_point`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// 	- Service `wasabi_cloud_storage`: You can specify the delimiter that your CSVs use here. Fivetran generally tries to infer the delimiter, but in some cases this is impossible.
        /// </summary>
        [Input("delimiter")]
        public Input<string>? Delimiter { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `brightpearl`: Your Brightpearl dev reference.
        /// </summary>
        [Input("developerReference")]
        public Input<string>? DeveloperReference { get; set; }

        [Input("dimensionAttributes")]
        private InputList<string>? _dimensionAttributes;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_publishers`: Dimension attributes provide additional fields associated with a Dimension. Dimension attributes can only be selected with their corresponding Dimensions.
        /// </summary>
        public InputList<string> DimensionAttributes
        {
            get => _dimensionAttributes ?? (_dimensionAttributes = new InputList<string>());
            set => _dimensionAttributes = value;
        }

        [Input("dimensions")]
        private InputList<string>? _dimensions;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adroll`: The dimenstions that you want to sync.
        /// 	- Service `double_click_campaign_manager`: Report dimensions to include into a sync. The `date` dimension is mandatory for all the report types. The `advertiser` dimension is mandatory for `REACH` report type
        /// 	- Service `double_click_publishers`: Report dimensions to include in the sync. The `date` dimension is mandatory for all the report types.
        /// 	- Service `google_analytics`: The report dimensions to include into a sync. The `date` dimension is mandatory for all the report types.
        /// 	- Service `google_display_and_video_360`: The report dimensions (filters) to include into a sync. The dimension names are provided in the API format. This is a required parameter when `config_method` is set to `CREATE_NEW`.
        /// </summary>
        public InputList<string> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<string>());
            set => _dimensions = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_hva`: Possible values:`DIRECT`, `BFILE`, `ASM`, `ARCHIVE_ONLY`
        /// 	- Service `oracle_sap_hva`: Possible values:`DIRECT`, `BFILE`, `ASM`, `ARCHIVE_ONLY`
        /// </summary>
        [Input("directCaptureMethod")]
        public Input<string>? DirectCaptureMethod { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cosmos`: Specifies the total number of connectors in the Distributed Connector Cluster running in parallel.
        /// 	- Service `dynamodb`: Specifies the total number of connectors in the Distributed Connector Cluster running in parallel.
        /// </summary>
        [Input("distributedConnectorClusterSize")]
        public Input<int>? DistributedConnectorClusterSize { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `qualtrics`: Can be used to set the distributions fetch window for incremental sync. Fetch window cannot be lesser than 60 days.
        /// </summary>
        [Input("distributionIncrementalFetchWindowDays")]
        public Input<int>? DistributionIncrementalFetchWindowDays { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `auth0`: Your Auth0 domain.
        /// 	- Service `bubble`: Your Bubble app name or domain name.
        /// 	- Service `confluence`: Your Confluence domain.
        /// 	- Service `kustomer`: Domain is the beginning of your kustomer URL going before .kustomerapp.com, e.g. for yourcompany.kustomerapp.com the domain name is yourcompany
        /// 	- Service `okta`: Your Okta domain.
        /// 	- Service `pipedrive`: Your Pipedrive domain.
        /// 	- Service `shopware`: Your Shopware domain.
        /// 	- Service `sistrix`: Your SISTRIX domain.
        /// 	- Service `solarwinds_service_desk`: Your SolarWinds Service Desk domain.
        /// 	- Service `uservoice`: Domain of your UserVoice site. If it ends with ".uservoice.com", you can specify just the subdomain ("mydomain.uservoice.com" - "mydomain")
        /// 	- Service `zendesk`: Zendesk domain.
        /// 	- Service `zendesk_sunshine`: Zendesk domain.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday`: Workday host name.
        /// 	- Service `workday_financial_management`: Workday host name.
        /// 	- Service `workday_hcm`: Workday host name.
        /// </summary>
        [Input("domainHostName")]
        public Input<string>? DomainHostName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `calabrio`: Your Calabrio domain name
        /// 	- Service `dynamics_365`: The custom domain name associated with Dynamics 365.
        /// 	- Service `helpshift`: Your Helpshift domain name.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `medallia`: Domain type of your Medallia URL
        /// </summary>
        [Input("domainType")]
        public Input<string>? DomainType { get; set; }

        [Input("dsvServiceAuth")]
        private Input<string>? _dsvServiceAuth;
        public Input<string>? DsvServiceAuth
        {
            get => _dsvServiceAuth;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _dsvServiceAuth = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("dsvSubscriptionKey")]
        private Input<string>? _dsvSubscriptionKey;
        public Input<string>? DsvSubscriptionKey
        {
            get => _dsvSubscriptionKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _dsvSubscriptionKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("ecommerceStores")]
        private InputList<string>? _ecommerceStores;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mailchimp`: List of IDs of the Mailchimp E-Commerce Stores to Sync
        /// </summary>
        public InputList<string> EcommerceStores
        {
            get => _ecommerceStores ?? (_ecommerceStores = new InputList<string>());
            set => _ecommerceStores = value;
        }

        [Input("edition")]
        public Input<string>? Edition { get; set; }

        [Input("elements")]
        private InputList<string>? _elements;
        public InputList<string> Elements
        {
            get => _elements ?? (_elements = new InputList<string>());
            set => _elements = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appcues`: Your Appcues Email.
        /// 	- Service `boostr`: Your Boostr email.
        /// 	- Service `copper`: Your Copper email address.
        /// 	- Service `email`: Send your emails to this address.
        /// 	- Service `moloco`: Your Moloco account email.
        /// 	- Service `netsuite_suiteanalytics`: The NetSuite user's email address.
        /// 	- Service `pardot`: The email of the Pardot user.
        /// 	- Service `skuvault`: Your SkuVault email.
        /// 	- Service `smadex`: Your Smadex account's email ID.
        /// 	- Service `zendesk`: Zendesk email.
        /// 	- Service `zendesk_sunshine`: Zendesk email.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `clockodo`: Your Clockodo email address.
        /// </summary>
        [Input("emailAddress")]
        public Input<string>? EmailAddress { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cabcharge`: Your Cabcharge email ID.
        /// 	- Service `ordway`: Your Ordway user email ID.
        /// 	- Service `planful`: Your Planful email ID.
        /// </summary>
        [Input("emailId")]
        public Input<string>? EmailId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `azure_blob_storage`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `box`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `dropbox`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `email`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `ftp`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `gcs`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `google_drive`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `kinesis`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `s3`: If your CSVs are headerless, set this is as `true`. When `true`, we will generate generic column names following the convention of `column_0`, `column_1`, ... `column_n` to map the rows. Default value: `false`.
        /// 	- Service `sftp`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `share_point`: Optional. If your CSV generating software doesn't provide header line for the documents, Fivetran can generate the generic column names and sync data rows with them.
        /// 	- Service `wasabi_cloud_storage`: If your CSVs are headerless, set this is as `true`. When `true`, we will generate generic column names following the convention of `column_0`, `column_1`, ... `column_n` to map the rows. Default value: `false`.
        /// </summary>
        [Input("emptyHeader")]
        public Input<bool>? EmptyHeader { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_campaign_manager`: Whether to enable all reach dimension combinations in the report. Default value: `false`
        /// </summary>
        [Input("enableAllDimensionCombinations")]
        public Input<bool>? EnableAllDimensionCombinations { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sql_server_hva`: Use archive log only mode
        /// 	- Service `sql_server_sap_ecc_hva`: Use archive log only mode
        /// </summary>
        [Input("enableArchiveLogOnly")]
        public Input<bool>? EnableArchiveLogOnly { get; set; }

        [Input("enableDataExtensionsSyncing")]
        public Input<bool>? EnableDataExtensionsSyncing { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cosmos`: Enable to allow the connector to join a cluster of connectors forming a Distributed Connector Cluster. This cluster allows parallel syncs from the same source to the same destination using multiple connectors.
        /// 	- Service `dynamodb`: Enable to allow the connector to join a cluster of connectors forming a Distributed Connector Cluster. This cluster allows parallel syncs from the same source to the same destination using multiple connectors.
        /// </summary>
        [Input("enableDistributedConnectorMode")]
        public Input<bool>? EnableDistributedConnectorMode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `snowplow`: Enable Enrichments
        /// </summary>
        [Input("enableEnrichments")]
        public Input<bool>? EnableEnrichments { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Enable User Profile Exports
        /// </summary>
        [Input("enableExports")]
        public Input<bool>? EnableExports { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sql_server_hva`: Using Transparent Data Encryption (TDE)
        /// 	- Service `sql_server_sap_ecc_hva`: Using Transparent Data Encryption (TDE)
        /// </summary>
        [Input("enableTde")]
        public Input<bool>? EnableTde { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apple_search_ads`: Use the public key to grant Fivetran access to Apple Search Ads api.
        /// </summary>
        [Input("encodedPublicKey")]
        public Input<string>? EncodedPublicKey { get; set; }

        [Input("encryptionKey")]
        private Input<string>? _encryptionKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `marketo`: Marketo SOAP API Encryption Key.
        /// </summary>
        public Input<string>? EncryptionKey
        {
            get => _encryptionKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _encryptionKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `branch`: Webhook Endpoint
        /// 	- Service `iterable`: Register the following URL for webhooks on your Iterable dashboard.
        /// 	- Service `marketo`: Marketo REST API endpoint.
        /// 	- Service `snowplow`: Connection-specific collector endpoint. The collector endpoint will have the `webhooks.fivetran.com/snowplow/endpoint_ID` format. You will need it to configure Snowplow to connect with Fivetran.
        /// 	- Service `webhooks`: You can send your events to https://webhooks.fivetran.com/webhooks/{endpoint}
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pinterest_ads`: The number of days to use as the conversion attribution window for an engagement (i.e. closeup or save) action.
        /// </summary>
        [Input("engagementAttributionWindow")]
        public Input<string>? EngagementAttributionWindow { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `optimizely`: Enriched Events S3 bucket
        /// </summary>
        [Input("enrichedExport")]
        public Input<string>? EnrichedExport { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `checkout`: Your Checkout.com entity ID.
        /// 	- Service `zuora`: If `is_multi_entity_feature_enabled` is `true`, then it's `EntityId`.
        /// 	- Service `zuora_sandbox`: If `is_multi_entity_feature_enabled` is `true`, then it's `EntityId`.
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bazaarvoice`: Your Bazaarvoice environment.
        /// 	- Service `buildium`: Your Buildium environment.
        /// 	- Service `checkout`: Your Checkout.com environment.
        /// 	- Service `concord`: Your Concord environment.
        /// 	- Service `deposco`: Your Deposco environment.
        /// 	- Service `dialpad`: Your Dialpad environment.
        /// 	- Service `invoiced`: Your Invoiced environment.
        /// 	- Service `jibble`: Your Jibble environment.
        /// 	- Service `lucca`: Your Lucca environment.
        /// 	- Service `ordergroove`: Your Ordergroove environment.
        /// 	- Service `paddle`: Your Paddle environment.
        /// 	- Service `procore`: Your Procore account environment.
        /// 	- Service `reltio`: Your Reltio environment.
        /// 	- Service `servicetitan`: Your ServiceTitan environment.
        /// 	- Service `smarthr`: Your SmartHR environment.
        /// 	- Service `trelica`: Your Trelica environment.
        /// 	- Service `tremendous`: Your Tremendous environment.
        /// 	- Service `vts`: Your VTS environment.
        /// 	- Service `xactly`: Your Xactly environment.
        /// 	- Service `younium`: Your Younium API environment.
        /// 	- Service `zuora`: Zuora Sandbox Environment. This accepts either of the two values Sandbox or Central Sandbox based on your subscription. The default environment is Sandbox.
        /// 	- Service `zuora_sandbox`: Zuora Sandbox Environment. This accepts either of the two values Sandbox or Central Sandbox based on your subscription. The default environment is Sandbox.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `xactly`: Your Xactly environment host.
        /// </summary>
        [Input("environmentHost")]
        public Input<string>? EnvironmentHost { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `business_central`: Name of the environment
        /// </summary>
        [Input("environmentName")]
        public Input<string>? EnvironmentName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Optional. If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `azure_blob_storage`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `box`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `dropbox`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `email`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `ftp`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `gcs`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `google_drive`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `kinesis`: Optional. If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `s3`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `sftp`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `share_point`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// 	- Service `wasabi_cloud_storage`: If your CSV generator follows non-standard rules for escaping quotation marks, you can set the escape character here.
        /// </summary>
        [Input("escapeChar")]
        public Input<string>? EscapeChar { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `gcs`: Approach used by CSV parser. Default  value: `CUSTOM_ESCAPE_CHAR`. required for CSV parsing when `non_standard_escape_char` is `true`.
        /// 	- Service `s3`: Approach used by CSV parser. Default  value: `CUSTOM_ESCAPE_CHAR`. required for CSV parsing when `non_standard_escape_char` is `true`.
        /// </summary>
        [Input("escapeCharOptions")]
        public Input<string>? EscapeCharOptions { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `kustomer`: Turn it on if your app is on EU region
        /// 	- Service `survey_monkey`: The SurveyMonkey account region. Specify `true`, if your account is hosted in the EU region. Default value is `false`.
        /// </summary>
        [Input("euRegion")]
        public Input<bool>? EuRegion { get; set; }

        [Input("events")]
        private InputList<string>? _events;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `iterable`: List of events to sync. Should be specified when `sync_mode` is `SelectedEvents`
        /// </summary>
        public InputList<string> Events
        {
            get => _events ?? (_events = new InputList<string>());
            set => _events = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adjust`: Your cloud storage.
        /// 	- Service `braze`: Export Storage. Required if `enable_exports` is `true`
        /// </summary>
        [Input("exportStorageType")]
        public Input<string>? ExportStorageType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: The external ID is a string that designates who can assume the role. For more information, click a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html"here/a
        /// 	- Service `aws_cloudtrail`: This is the same as your `group_id`, used for authentication along with the `role_arn`.
        /// 	- Service `aws_cost_report`: The external ID is a string that designates who can assume the role. For more information, click a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html"here/a
        /// 	- Service `aws_lambda`: The external ID is a string that designates who can assume the role.
        /// 	- Service `aws_msk`: This is the same as your `group_id`. This is required when `sasl_mechanism` is set to `IAM`.
        /// 	- Service `azure_function`: External ID.
        /// 	- Service `cloudfront`: This is the same as your `group_id`, used for authentication along with the `role_arn`.
        /// 	- Service `dynamodb`: This is the same as your `group_id`, used for authentication along with the `role_arn`.
        /// 	- Service `kinesis`: The external ID is a string that designates who can assume the role. For more information, click a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html"here/a
        /// 	- Service `s3`: Used for authentication along with the `role_arn`. If not provided, it uses connector's `group_id`. Use the [List All Groups endpoint](https://fivetran.com/docs/rest-api/groups#listallgroups) to find the `group_id`.
        /// 	- Service `segment`: The external ID is a string that designates who can assume the role. For more information, see a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html"Amazon's AWS Identity and Access Management User Guide/a.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `unicommerce`: Your uniware facility codes.
        /// </summary>
        [Input("facilityCodes")]
        public Input<string>? FacilityCodes { get; set; }

        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook`: List of fields which connector will sync. [Possible field values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#fields).
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: If your files are saved with improper extensions, you can force them to by synced as the selected filetype. Leave the value as infer if your files have the correct extensions
        /// 	- Service `azure_blob_storage`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
        /// 	- Service `box`: If your files are saved with improper extensions, you can force them to be synced as the selected filetype.
        /// 	- Service `dropbox`: If your files are saved with improper extensions, you can force them to be synced as the selected filetype.
        /// 	- Service `email`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
        /// 	- Service `ftp`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
        /// 	- Service `gcs`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
        /// 	- Service `google_drive`: If your files are saved with improper extensions, you can force them to be synced as the selected filetype.
        /// 	- Service `kinesis`: If your files are saved with improper extensions, you can force them to by synced as the selected filetype. Leave the value as infer if your files have the correct extensions
        /// 	- Service `s3`: If your files are saved with improper extensions, you can force them to be synced as the selected file type.
        /// 	- Service `sftp`: If your files are saved with improper extensions, you can force them to by synced as the selected file type.
        /// 	- Service `share_point`: If your files are saved with improper extensions, you can force them to be synced as the selected file type.
        /// 	- Service `wasabi_cloud_storage`: If your files are saved with improper extensions, you can force them to be synced as the selected file type.
        /// </summary>
        [Input("fileType")]
        public Input<string>? FileType { get; set; }

        [Input("files")]
        private InputList<Inputs.ConnectorConfigFileGetArgs>? _files;
        public InputList<Inputs.ConnectorConfigFileGetArgs> Files
        {
            get => _files ?? (_files = new InputList<Inputs.ConnectorConfigFileGetArgs>());
            set => _files = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_analytics`: String parameter restricts the data returned for your report. To use the filter parameter, specify a dimension or metric on which to filter, followed by the filter expression
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `itunes_connect`: Whether to sync all finance accounts or specific finance accounts.
        /// </summary>
        [Input("financeAccountSyncMode")]
        public Input<string>? FinanceAccountSyncMode { get; set; }

        [Input("financeAccounts")]
        private InputList<string>? _financeAccounts;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `itunes_connect`: Specific finance accounts to sync. Must be populated if `finance_account_sync_mode` is set to `SpecificFinanceAccounts`.
        /// </summary>
        public InputList<string> FinanceAccounts
        {
            get => _financeAccounts ?? (_financeAccounts = new InputList<string>());
            set => _financeAccounts = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `dropbox`: Your Dropbox Folder URL.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `box`: Folder URL
        /// 	- Service `google_drive`: Folder URL
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Folder Path
        /// 	- Service `one_drive`: Your OneDrive folder URL
        /// 	- Service `oracle_business_intelligence_publisher`: The folder path to save data models and reports.
        /// </summary>
        [Input("folderPath")]
        public Input<string>? FolderPath { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `clari`: Your Clari Forecast id .
        /// </summary>
        [Input("forecastId")]
        public Input<string>? ForecastId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: FTP host.
        /// </summary>
        [Input("ftpHost")]
        public Input<string>? FtpHost { get; set; }

        [Input("ftpPassword")]
        private Input<string>? _ftpPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: FTP password.
        /// </summary>
        public Input<string>? FtpPassword
        {
            get => _ftpPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _ftpPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: FTP port.
        /// </summary>
        [Input("ftpPort")]
        public Input<int>? FtpPort { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: FTP user.
        /// </summary>
        [Input("ftpUser")]
        public Input<string>? FtpUser { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_lambda`: The name of your AWS Lambda Function.
        /// </summary>
        [Input("function")]
        public Input<string>? Function { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_function`: Function app name in Azure portal.
        /// </summary>
        [Input("functionApp")]
        public Input<string>? FunctionApp { get; set; }

        [Input("functionKey")]
        private Input<string>? _functionKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_function`: Function key used for authorization.
        /// </summary>
        public Input<string>? FunctionKey
        {
            get => _functionKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _functionKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_function`: Name of the function to be triggered.
        /// </summary>
        [Input("functionName")]
        public Input<string>? FunctionName { get; set; }

        [Input("functionTrigger")]
        private Input<string>? _functionTrigger;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_cloud_function`: The trigger URL of the cloud function.
        /// </summary>
        public Input<string>? FunctionTrigger
        {
            get => _functionTrigger;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _functionTrigger = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Your GCS bucket. Required if `GCS` is the `cloud_storage_type`
        /// 	- Service `webhooks`: The GCS bucket name. Required if `bucket_service` is set to `GCS`.
        /// </summary>
        [Input("gcsBucket")]
        public Input<string>? GcsBucket { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Your GCS bucket. Required if `GCS` is the `export_storage_type`
        /// </summary>
        [Input("gcsExportBucket")]
        public Input<string>? GcsExportBucket { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Your GCS folder name. Required if `GCS` is the `export_storage_type`
        /// </summary>
        [Input("gcsExportFolder")]
        public Input<string>? GcsExportFolder { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Your GCS folder name. Required if `GCS` is the `cloud_storage_type`
        /// </summary>
        [Input("gcsFolder")]
        public Input<string>? GcsFolder { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday`: Select this option to generate a Primary Key for reports where no single column or combination of columns can be used to form a Primary Key.
        /// </summary>
        [Input("generateFivetranPk")]
        public Input<bool>? GenerateFivetranPk { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `line_ads`: Your LINE Ads group ID(s).
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `fivetran_log`: (Optional) The group name of the `target_group_id`.
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("hanaBackupPassword")]
        private Input<string>? _hanaBackupPassword;
        public Input<string>? HanaBackupPassword
        {
            get => _hanaBackupPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _hanaBackupPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_b1`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
        /// 	- Service `hana_sap_hva_ecc`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
        /// 	- Service `hana_sap_hva_s4`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The mode for connecting to HANA server. Available options: Single container (default), Multiple containers - Tenant database, Multiple containers - System database, Manual port selection - This option is used only if the database port needs to be specified manually.
        /// </summary>
        [Input("hanaMode")]
        public Input<string>? HanaMode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_service_bus`: The boolean value specifying whether the connection string has manage permissions
        /// </summary>
        [Input("hasManagePermissions")]
        public Input<bool>? HasManagePermissions { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Range of data in history you would like to include in the initial sync.
        /// 	- Service `iterable`: The time range for which historical data should be synced. Default value: `All Time`.
        /// 	- Service `klaviyo`: Range of data in history you would like to include in the initial sync. Default value: `ALL_TIME`.
        /// 	- Service `marketo`: Range of data in history you would like to include in the initial sync. Default value: `ALL_TIME`.
        /// 	- Service `sailthru`: Range of historical data you would like to include in the initial sync. Default value: `ALL_TIME`.
        /// 	- Service `salesforce_marketing_cloud`: Range of data in history you would like to include in the initial sync. Default value: `ALL_TIME`.
        /// </summary>
        [Input("historicSyncTimeFrame")]
        public Input<string>? HistoricSyncTimeFrame { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `concur`: Historical Sync Limit for the Sync
        /// 	- Service `eloqua`: Range of data in history you would like to include in the initial sync. Default value: `ALL_TIME`.
        /// 	- Service `pardot`: The time range for which historical data should be synced. Default value: `All Time`.
        /// </summary>
        [Input("historicalSyncLimit")]
        public Input<string>? HistoricalSyncLimit { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hubspot`: Used to configure Historical sync timeframe for selected tables
        /// 	- Service `rokt`: Your Rokt historical sync time frame.
        /// 	- Service `shopify`: Used to configure Historical sync timeframe for selected tables
        /// 	- Service `skimlinks`: Your Skimlinks Historical sync time frame.
        /// 	- Service `vimeo`: Your Vimeo Historical sync time frame.
        /// 	- Service `zendesk`: Used to configure Historical sync timeframe for selected tables
        /// </summary>
        [Input("historicalSyncTimeFrame")]
        public Input<string>? HistoricalSyncTimeFrame { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: Your S3 home folder path of the Data Locker.
        /// </summary>
        [Input("homeFolder")]
        public Input<string>? HomeFolder { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: DB instance host or IP address.
        /// 	- Service `aurora_postgres`: DB instance host or IP address.
        /// 	- Service `azure_postgres`: DB instance host or IP address.
        /// 	- Service `azure_sql_db`: DB instance host or IP address.
        /// 	- Service `azure_sql_managed_db`: DB instance host or IP address.
        /// 	- Service `clarity`: DB instance host or IP address.
        /// 	- Service `cockroachdb`: DB instance host or IP address.
        /// 	- Service `commercetools`: Your commercetools host.
        /// 	- Service `databricks_db`: The host URL for your Databricks account.
        /// 	- Service `db2i_hva`: A host address of the primary node. It should be a DB instance host/IP address with a port number.
        /// 	- Service `db2i_sap_hva`: DB instance host or IP address.
        /// 	- Service `documentdb`: Host IP address of the primary node. Ignored if `hosts` value is provided.
        /// 	- Service `dynamics_365_fo`: DB instance host or IP address.
        /// 	- Service `ehr`: DB instance host or IP address.
        /// 	- Service `elastic_cloud`: DB instance host or IP address.
        /// 	- Service `es_self_hosted`: DB instance host or IP address.
        /// 	- Service `ftp`: FTP host address.
        /// 	- Service `google_cloud_mysql`: DB instance host or IP address.
        /// 	- Service `google_cloud_postgresql`: DB instance host or IP address.
        /// 	- Service `google_cloud_sqlserver`: DB instance host or IP address.
        /// 	- Service `hana_sap_hva_b1`: DB instance host or IP address.
        /// 	- Service `hana_sap_hva_ecc`: DB instance host or IP address.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: DB instance host or IP address.
        /// 	- Service `hana_sap_hva_s4`: DB instance host or IP address.
        /// 	- Service `hana_sap_hva_s4_netweaver`: DB instance host or IP address.
        /// 	- Service `heroku_postgres`: DB instance host or IP address.
        /// 	- Service `jira`: The Jira service host address.
        /// 	- Service `magento_mysql`: DB instance host or IP address.
        /// 	- Service `magento_mysql_rds`: DB instance host or IP address.
        /// 	- Service `maria`: DB instance host or IP address.
        /// 	- Service `maria_azure`: DB instance host or IP address.
        /// 	- Service `maria_rds`: DB instance host or IP address.
        /// 	- Service `marin`: The Marin host address.
        /// 	- Service `mysql`: DB instance host or IP address.
        /// 	- Service `mysql_azure`: DB instance host or IP address.
        /// 	- Service `mysql_rds`: DB instance host or IP address.
        /// 	- Service `netsuite_suiteanalytics`: The NetSuite service host address.
        /// 	- Service `opendistro`: DB instance host or IP address.
        /// 	- Service `opensearch`: DB instance host or IP address.
        /// 	- Service `oracle`: DB instance host or IP address.
        /// 	- Service `oracle_ebs`: DB instance host or IP address.
        /// 	- Service `oracle_hva`: DB instance host or IP address.
        /// 	- Service `oracle_rac`: DB instance host or IP address.
        /// 	- Service `oracle_rds`: DB instance host or IP address.
        /// 	- Service `oracle_sap_hva`: DB instance host or IP address.
        /// 	- Service `oracle_sap_hva_netweaver`: DB instance host or IP address.
        /// 	- Service `postgres`: DB instance host or IP address.
        /// 	- Service `postgres_rds`: DB instance host or IP address.
        /// 	- Service `redshift_db`: Host name
        /// 	- Service `sap_hana`: The SAP HANA host or IP address.
        /// 	- Service `sap_s4hana`: The SAP S/4 host or IP address.
        /// 	- Service `sftp`: SFTP host address.
        /// 	- Service `snowflake_db`: Host name
        /// 	- Service `splunk`: The Splunk service host address.
        /// 	- Service `sql_server`: DB instance host or IP address.
        /// 	- Service `sql_server_hva`: DB instance host or IP address.
        /// 	- Service `sql_server_rds`: DB instance host or IP address.
        /// 	- Service `sql_server_sap_ecc_hva`: DB instance host or IP address.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: IP address of host tunnel machine which is used to connect to the Storage container.
        /// 	- Service `azure_service_bus`: The IP address of the host machine which we use to connect to ASB via ssh
        /// </summary>
        [Input("hostIp")]
        public Input<string>? HostIp { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `coassemble`: Your Coassemble Hostname.
        /// 	- Service `datadog`: Your Datadog host name.
        /// 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management hostname.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_commerce`: Your Adobe Commerce host url.
        /// 	- Service `sparkpost`: Your SparkPost host URL.
        /// </summary>
        [Input("hostUrl")]
        public Input<string>? HostUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: Username in the host machine.
        /// 	- Service `azure_service_bus`: The username on the host machine which we use to connect to ASB via ssh
        /// </summary>
        [Input("hostUser")]
        public Input<string>? HostUser { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `akamai`: Your Akamai hostname.
        /// 	- Service `ukg_pro`: Your UKG Pro hostname.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("hosts")]
        private InputList<string>? _hosts;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_cosmos_for_mongo`: A list of host addresses for Azure Cosmos DB for Mongo DB.
        /// 	- Service `mongo`: A list of host addresses of the primary node and all replicas. Each list item is either: a DB instance host/IP address with a port number, or SRV host record.
        /// 	- Service `mongo_sharded`: A list of host addresses of the primary node and all replicas. Each list item is either: a DB instance host/IP address with a port number, or SRV host record.
        /// </summary>
        public InputList<string> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<string>());
            set => _hosts = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `databricks_db`: http path
        /// </summary>
        [Input("httpPath")]
        public Input<string>? HttpPath { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `playvox_workforce_management`: Your Playvox Workforce Management client identifier.
        /// 	- Service `statistics_netherlands_cbs`: Your Statistics Netherlands CBS catalog identifier.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `marketo`: Marketo REST API identity url.
        /// </summary>
        [Input("identity")]
        public Input<string>? Identity { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_commerce_cloud`: Whether to sync data through OCAPI endpoints.
        /// </summary>
        [Input("includeOcapiEndpoints")]
        public Input<bool>? IncludeOcapiEndpoints { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `acumatica`: Your Acumatica instance name.
        /// 	- Service `coupa`: The instance name of your Coupa account in the URL.
        /// 	- Service `flywheel_digital`: Your Flywheel Digital instance.
        /// 	- Service `salesforce_marketing_cloud`: The Salesforce Marketing Cloud instance ID
        /// 	- Service `servicenow`: ServiceNow Instance ID.
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_b1`: Two-digit number (00-97) of the SAP instance within its host.
        /// 	- Service `hana_sap_hva_ecc`: Two-digit number (00-97) of the SAP instance within its host.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Two-digit number (00-97) of the SAP instance within its host.
        /// 	- Service `hana_sap_hva_s4`: Two-digit number (00-97) of the SAP instance within its host.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Two-digit number (00-97) of the SAP instance within its host.
        /// 	- Service `oracle_sap_hva_netweaver`: Two-digit number (00-97) of the SAP instance within its host.
        /// </summary>
        [Input("instanceNumber")]
        public Input<string>? InstanceNumber { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sap_business_by_design`: The SAP Business ByDesign instance URL.
        /// </summary>
        [Input("instanceUrl")]
        public Input<string>? InstanceUrl { get; set; }

        [Input("integrationKey")]
        private Input<string>? _integrationKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pendo`: The integration key of the Pendo account.
        /// </summary>
        public Input<string>? IntegrationKey
        {
            get => _integrationKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _integrationKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aveva_pi`: IP address of the AF Server
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `fivetran_log`: (Optional) Retrieve account-level logs.
        /// </summary>
        [Input("isAccountLevelConnector")]
        public Input<bool>? IsAccountLevelConnector { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apple_search_ads`: The contents of your PEM certificate file. Default value: `false`
        /// </summary>
        [Input("isAuth2Enabled")]
        public Input<bool>? IsAuth2Enabled { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `twitter_ads`: Custom API credentials
        /// </summary>
        [Input("isCustomApiCredentials")]
        public Input<bool>? IsCustomApiCredentials { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pardot`: Whether the `EXTERNAL_ACTIVITY` table must be synced or not.
        /// </summary>
        [Input("isExternalActivitiesEndpointSelected")]
        public Input<bool>? IsExternalActivitiesEndpointSelected { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Use Secure FTP (FTPS).
        /// </summary>
        [Input("isFtps")]
        public Input<bool>? IsFtps { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sftp`: Whether to use a key pair for authentication.  When `true`, do not use `password`.
        /// </summary>
        [Input("isKeypair")]
        public Input<bool>? IsKeypair { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `zuora`: Set to `true` if there are multiple entities in your Zuora account and you only want to use one entity. Otherwise, set to `false`.
        /// 	- Service `zuora_sandbox`: Set to `true` if there are multiple entities in your Zuora account and you only want to use one entity. Otherwise, set to `false`.
        /// </summary>
        [Input("isMultiEntityFeatureEnabled")]
        public Input<bool>? IsMultiEntityFeatureEnabled { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_marketing_cloud`: Indicates that that your installed package uses OAuth 2.0. Default value: `false`
        /// </summary>
        [Input("isNewPackage")]
        public Input<bool>? IsNewPackage { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `snowflake_db`: Indicates that a private key is encrypted. The default value: `false`. The field can be specified if authentication type is `KEY_PAIR`.
        /// </summary>
        [Input("isPrivateKeyEncrypted")]
        public Input<bool>? IsPrivateKeyEncrypted { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_lambda`: We use PrivateLink by default if your AWS Lambda is in the same region as Fivetran. Turning on this toggle ensures that Fivetran always connects to AWS lambda over PrivateLink. Learn more in our [PrivateLink documentation](https://fivetran.com/docs/connectors/databases/connection-options#awsprivatelink).
        /// 	- Service `s3`: Set to `true` if you want to connect to S3 bucket over PrivateLink. Default value: `false`.
        /// </summary>
        [Input("isPrivateLinkRequired")]
        public Input<bool>? IsPrivateLinkRequired { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Whether you are syncing from a public bucket. Default value: `false`.
        /// 	- Service `kinesis`: Is the bucket public? (you don't need an AWS account for syncing public buckets!)
        /// 	- Service `s3`: Whether you are syncing from a public bucket. Default value: `false`.
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sailthru`: Enable this if you want to sync Sailthru Connect
        /// </summary>
        [Input("isSailthruConnectEnabled")]
        public Input<bool>? IsSailthruConnectEnabled { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `ftp`: Whether the server supports FTPS.
        /// </summary>
        [Input("isSecure")]
        public Input<bool>? IsSecure { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_marketing_cloud`: Provide SFTP credentials
        /// </summary>
        [Input("isSftpCredsAvailable")]
        public Input<bool>? IsSftpCredsAvailable { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `box`: Allows the creation of connector using Merge Mode strategy.
        /// 	- Service `dropbox`: Allows the creation of connector using Merge Mode strategy.
        /// 	- Service `google_drive`: Allows the creation of connector using Merge Mode strategy.
        /// 	- Service `sftp`: Allows the creation of connector using the specified Sync strategy.
        /// 	- Service `share_point`: Allows the creation of connector using Merge Mode strategy.
        /// </summary>
        [Input("isSingleTableMode")]
        public Input<bool>? IsSingleTableMode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adyen`: Whether or not your Adyen Account is a Test Account. Default value: `false`.
        /// </summary>
        [Input("isTestAccount")]
        public Input<bool>? IsTestAccount { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_selling_partner`: Whether or not you have a Vendor Account. Default value: `false`.
        /// </summary>
        [Input("isVendor")]
        public Input<bool>? IsVendor { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud issuer name.
        /// 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud issuer name.
        /// 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud issuer name.
        /// </summary>
        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Control how your JSON data is delivered into your destination
        /// 	- Service `azure_blob_storage`: Control how your JSON data is delivered into your destination
        /// 	- Service `box`: Control how your JSON data is delivered into your destination
        /// 	- Service `dropbox`: Control how your JSON data is delivered into your destination
        /// 	- Service `email`: Control how your JSON data is delivered into your destination
        /// 	- Service `ftp`: Control how your JSON data is delivered into your destination
        /// 	- Service `gcs`: Control how your JSON data is delivered into your destination
        /// 	- Service `google_drive`: Control how your JSON data is delivered into your destination
        /// 	- Service `kinesis`: Control how your JSON data is delivered into your destination
        /// 	- Service `s3`: Control how your JSON data is delivered into your destination
        /// 	- Service `sftp`: Control how your JSON data is delivered into your destination
        /// 	- Service `share_point`: Control how your JSON data is delivered into your destination
        /// 	- Service `wasabi_cloud_storage`: Specifies how Fivetran should handle your JSON data. Default value: `Packed`.
        /// </summary>
        [Input("jsonDeliveryMode")]
        public Input<string>? JsonDeliveryMode { get; set; }

        [Input("key")]
        private Input<string>? _key;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `uservoice`: The UserVoice API key.
        /// </summary>
        public Input<string>? Key
        {
            get => _key;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _key = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("keyPassword")]
        private Input<string>? _keyPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_msk`: If `security_protocol` is set to `TLS`, enter your `Key Password`.
        /// </summary>
        public Input<string>? KeyPassword
        {
            get => _keyPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `heroku_kafka`: Key Store Type
        /// </summary>
        [Input("keyStoreType")]
        public Input<string>? KeyStoreType { get; set; }

        [Input("keystore")]
        private Input<string>? _keystore;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_msk`: If `security_protocol` is set to `TLS`, add the `Keystore File` as Base64 encoded string.
        /// </summary>
        public Input<string>? Keystore
        {
            get => _keystore;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keystore = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("keystorePassword")]
        private Input<string>? _keystorePassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_msk`: If `security_protocol` is set to `TLS`, enter your `Keystore Password`.
        /// </summary>
        public Input<string>? KeystorePassword
        {
            get => _keystorePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keystorePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("lastSyncedChangesUtc_")]
        public Input<string>? LastSyncedChangesUtc_ { get; set; }

        [Input("latestVersion")]
        public Input<string>? LatestVersion { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `younium`: Your Younium legal entity ID.
        /// </summary>
        [Input("legalEntityId")]
        public Input<string>? LegalEntityId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pardot`: API limit for the external activities endpoint.
        /// </summary>
        [Input("limitForApiCallsToExternalActivitiesEndpoint")]
        public Input<int>? LimitForApiCallsToExternalActivitiesEndpoint { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `azure_blob_storage`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `box`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `dropbox`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `email`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `ftp`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `gcs`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `google_drive`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `kinesis`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `s3`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `sftp`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `share_point`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// 	- Service `wasabi_cloud_storage`: You can specify the custom line separator for your CSV files. The line separator is used in files to separate one row from the next.
        /// </summary>
        [Input("lineSeparator")]
        public Input<string>? LineSeparator { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pigment`: Your Pigment list ID.
        /// </summary>
        [Input("listId")]
        public Input<string>? ListId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cj_commission_detail`: Your CJ Commission Detail list of company IDs.
        /// </summary>
        [Input("listOfCompanyIds")]
        public Input<string>? ListOfCompanyIds { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Optional. If you have a file structure where new files are always named in lexicographically increasing order such as files being named in increasing order of time, you can select codetime_based_pattern_listing/code.
        /// 	- Service `kinesis`: Optional. If you have a file structure where new files are always named in lexicographically increasing order such as files being named in increasing order of time, you can select codetime_based_pattern_listing/code.
        /// 	- Service `s3`: The listing strategy you want to use. Default value: `complete_listing`.
        /// </summary>
        [Input("listStrategy")]
        public Input<string>? ListStrategy { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_analytics_4_export`: The Sync Mode
        /// </summary>
        [Input("listSyncMode")]
        public Input<string>? ListSyncMode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `db2i_hva`: The log journal name.
        /// 	- Service `db2i_sap_hva`: The log journal name.
        /// </summary>
        [Input("logJournal")]
        public Input<string>? LogJournal { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `db2i_hva`: The log journal schema.
        /// 	- Service `db2i_sap_hva`: The log journal schema.
        /// </summary>
        [Input("logJournalSchema")]
        public Input<string>? LogJournalSchema { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Name of the SAP logon group. The default value is PUBLIC. This field is optional.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Name of the SAP logon group. The default value is PUBLIC. This field is optional.
        /// </summary>
        [Input("logOnGroup")]
        public Input<string>? LogOnGroup { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `rebound_returns`: Your ReBound Returns login.
        /// 	- Service `the_trade_desk`: The Trade Desk email. It is a part of the login credentials.
        /// 	- Service `walmart_dsp`: Walmart DSP email. It is a part of the login credentials.
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        [Input("loginPassword")]
        private Input<string>? _loginPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `concur`: The SAP Concur password.
        /// 	- Service `sage_intacct`: The login password. It is a part of the login credentials.
        /// </summary>
        public Input<string>? LoginPassword
        {
            get => _loginPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _loginPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("managerAccounts")]
        private InputList<string>? _managerAccounts;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_ads`: The list of the Manager Account IDs whose clients will be synced. Must be populated if `sync_mode` is set to `ManagerAccounts`.
        /// </summary>
        public InputList<string> ManagerAccounts
        {
            get => _managerAccounts ?? (_managerAccounts = new InputList<string>());
            set => _managerAccounts = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `reltio`: Maximum API requests per day
        /// </summary>
        [Input("maxApiRequestsPerDay")]
        public Input<int>? MaxApiRequestsPerDay { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `afterpay`: Your Afterpay Merchant ID.
        /// 	- Service `amazon_selling_partner`: The Merchant ID or Vendor Code.
        /// 	- Service `avantlink`: Your AvantLink Merchant ID.
        /// 	- Service `braintree`: Your Braintree merchant ID.
        /// 	- Service `braintree_sandbox`: Your Braintree merchant ID.
        /// 	- Service `shareasale`: Your ShareASale merchant ID.
        /// 	- Service `xsolla`: Your Xsolla Merchant ID.
        /// </summary>
        [Input("merchantId")]
        public Input<string>? MerchantId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Kafka message type.
        /// 	- Service `aws_msk`: The Message type.
        /// 	- Service `azure_event_hub`: Message type.
        /// 	- Service `azure_service_bus`: The format of messages in the topic
        /// 	- Service `confluent_cloud`: Confluent Cloud message type.
        /// 	- Service `heroku_kafka`: Heroku Kafka message type.
        /// </summary>
        [Input("messageType")]
        public Input<string>? MessageType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pigment`: Your Pigment metric ID.
        /// </summary>
        [Input("metricId")]
        public Input<string>? MetricId { get; set; }

        [Input("metrics")]
        private InputList<string>? _metrics;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adroll`: The metrics that you want to sync.
        /// 	- Service `criteo`: Metrics
        /// 	- Service `double_click_campaign_manager`: Report metrics to include into a sync.
        /// 	- Service `google_analytics`: The report metrics to include into a sync.
        /// 	- Service `google_display_and_video_360`: The report metrics to include into a sync. The metric names are provided in the API format. This is a required parameter when `config_method` is set to `CREATE_NEW`.
        /// </summary>
        public InputList<string> Metrics
        {
            get => _metrics ?? (_metrics = new InputList<string>());
            set => _metrics = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_sheets`: The name of the named data range on the sheet that contains the data to be synced.
        /// </summary>
        [Input("namedRange")]
        public Input<string>? NamedRange { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_service_bus`: The ASB namespace which we have to sync. Required for `AzureActiveDirectory` authentication.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_publishers`: Network code is a unique, numeric identifier for your Ad Manager network.
        /// </summary>
        [Input("networkCode")]
        public Input<int>? NetworkCode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `gcs`: Use this if your CSV generator uses non-standard ways of escaping characters. Default value: `false`.
        /// 	- Service `s3`: Use this if your CSV generator uses non-standard ways of escaping characters. Default value: `false`.
        /// </summary>
        [Input("nonStandardEscapeChar")]
        public Input<bool>? NonStandardEscapeChar { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Optional. If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `azure_blob_storage`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `box`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `dropbox`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `email`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `ftp`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `gcs`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `google_drive`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `kinesis`: Optional. If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `s3`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `sftp`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `share_point`: If your CSVs use a special value indicating null, you can specify it here.
        /// 	- Service `wasabi_cloud_storage`: If your CSVs use a special value indicating null, you can specify it here.
        /// </summary>
        [Input("nullSequence")]
        public Input<string>? NullSequence { get; set; }

        [Input("oauthToken")]
        private Input<string>? _oauthToken;
        public Input<string>? OauthToken
        {
            get => _oauthToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _oauthToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("oauthTokenSecret")]
        private Input<string>? _oauthTokenSecret;
        public Input<string>? OauthTokenSecret
        {
            get => _oauthTokenSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _oauthTokenSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud OCAPI Client ID.
        /// </summary>
        [Input("ocapiClientId")]
        public Input<string>? OcapiClientId { get; set; }

        [Input("ocapiClientSecret")]
        private Input<string>? _ocapiClientSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud OCAPI Client secret.
        /// </summary>
        public Input<string>? OcapiClientSecret
        {
            get => _ocapiClientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _ocapiClientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud OCAPI custom object types.
        /// </summary>
        [Input("ocapiCustomObjectTypes")]
        public Input<string>? OcapiCustomObjectTypes { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_commerce_cloud`: The Salesforce Commerce Cloud OCAPI hostname.
        /// </summary>
        [Input("ocapiHostname")]
        public Input<string>? OcapiHostname { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_b1`: ODBC manager library path
        /// 	- Service `hana_sap_hva_ecc`: ODBC manager library path
        /// 	- Service `hana_sap_hva_s4`: ODBC manager library path
        /// </summary>
        [Input("odbcDriverManagerLibraryPath")]
        public Input<string>? OdbcDriverManagerLibraryPath { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_b1`: odbc.ini and odbcsinst.ini location
        /// 	- Service `hana_sap_hva_ecc`: odbc.ini and odbcsinst.ini location
        /// 	- Service `hana_sap_hva_s4`: odbc.ini and odbcsinst.ini location
        /// </summary>
        [Input("odbcSysIniPath")]
        public Input<string>? OdbcSysIniPath { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `azure_blob_storage`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `box`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `dropbox`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `ftp`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `gcs`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `google_drive`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `kinesis`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `s3`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as `fail` unless you are certain that you have undesirable, malformed data.
        /// 	- Service `sftp`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `share_point`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as fail unless you are certain that you have undesirable, malformed data.
        /// 	- Service `wasabi_cloud_storage`: If you know that your files contain some errors, you can choose to have poorly formatted lines skipped. We recommend leaving the value as `fail` unless you are certain that you have undesirable, malformed data.
        /// </summary>
        [Input("onError")]
        public Input<string>? OnError { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `jira`: Whether the Jira instance is local or in cloud.
        /// </summary>
        [Input("onPremise")]
        public Input<bool>? OnPremise { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `gladly`: Your Gladly Organization Name.
        /// 	- Service `statuspage`: Your Statuspage Organization ID.
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_workfront`: Your Adobe Workfront organization domain.
        /// </summary>
        [Input("organizationDomain")]
        public Input<string>? OrganizationDomain { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics`: Organization ID from the Service Account (JWT) credentials of your Adobe Project.
        /// 	- Service `device_magic`: Your Device Magic organization ID.
        /// 	- Service `integrate`: Your Integrate organization ID.
        /// 	- Service `megaphone`: Your Megaphone organization ID.
        /// 	- Service `productive`: Your Productive Organization ID.
        /// 	- Service `salesforce_commerce_cloud`: The organization ID from Salesforce Commerce Cloud account.
        /// 	- Service `sentry`: Your Sentry organization ID.
        /// 	- Service `zoho_books`: Your Zoho Books Organization ID.
        /// 	- Service `zoho_inventory`: Your Zoho Inventory organization ID.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `brightpearl`: Your Brightpearl organization name.
        /// 	- Service `confluence`: Your Confluence organization name.
        /// </summary>
        [Input("organizationName")]
        public Input<string>? OrganizationName { get; set; }

        [Input("organizations")]
        private InputList<string>? _organizations;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apple_search_ads`: Organizations
        /// 	- Service `snapchat_ads`: Specific organizations IDs to sync. Must be populated if `syncMode` is set to `SpecificOrganizations`.
        /// </summary>
        public InputList<string> Organizations
        {
            get => _organizations ?? (_organizations = new InputList<string>());
            set => _organizations = value;
        }

        [Input("packedModeTables")]
        private InputList<string>? _packedModeTables;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_cosmos_for_mongo`: List of tables to be synced in packed mode; format:`db.table`(case-sensitive).
        /// 	- Service `dynamodb`: List of tables to be synced in packed mode.
        /// 	- Service `firebase`: Specific tables to sync. Must be populated if `packing_mode` is set to `SelectTablesForPackedMode`.
        /// 	- Service `mongo`: List of tables to be synced in packed mode; format:`db.table`(case-sensitive).
        /// 	- Service `mongo_sharded`: List of tables to be synced in packed mode; format:`db.table`(case-sensitive).
        /// </summary>
        public InputList<string> PackedModeTables
        {
            get => _packedModeTables ?? (_packedModeTables = new InputList<string>());
            set => _packedModeTables = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_cosmos_for_mongo`: Indicates the desired sync pack mode. Accepted values are `UsePackedModeOnly` and `UseUnpackedModeOnly`. `SelectTablesForPackedMode` is deprecated. 
        /// 	- Service `firebase`: Whether to sync all tables in unpacked mode or specific tables in packed mode. Default value: `UseUnpackedModeOnly`.
        /// 	- Service `klaviyo`: Packing mode for EVENT and PERSON tables.
        /// 	- Service `mongo`: Whether to sync all tables in unpacked mode only, all tables in packed mode only, or specific tables in packed mode. Default value: `UseUnpackedModeOnly`.
        /// 	- Service `mongo_sharded`: Whether to sync all tables in unpacked mode only, all tables in packed mode only, or specific tables in packed mode. Default value: `UseUnpackedModeOnly`.
        /// 	- Service `optimizely`: Packing mode for conversion and decision tables.
        /// 	- Service `sailthru`: Packing mode for LIST_STATE and USER tables.
        /// </summary>
        [Input("packingMode")]
        public Input<string>? PackingMode { get; set; }

        [Input("pages")]
        private InputList<string>? _pages;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook_pages`: Specific pages to sync. Must be populated if `sync_mode` is set to `SpecificPages`.
        /// </summary>
        public InputList<string> Pages
        {
            get => _pages ?? (_pages = new InputList<string>());
            set => _pages = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `care_quality_commission`: Your Care Quality Commission partner code.
        /// </summary>
        [Input("partnerCode")]
        public Input<string>? PartnerCode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `expensify`: Your Expensify partnerUserID.
        /// </summary>
        [Input("partnerUserId")]
        public Input<string>? PartnerUserId { get; set; }

        [Input("partnerUserSecret")]
        private Input<string>? _partnerUserSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `expensify`: Your Expensify partnerUserSecret.
        /// </summary>
        public Input<string>? PartnerUserSecret
        {
            get => _partnerUserSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _partnerUserSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("partners")]
        private InputList<string>? _partners;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_display_and_video_360`: The list of partners to include into a sync. This parameter only takes effect when `config_method` is set to `CREATE_NEW`.
        /// 	- Service `the_trade_desk`: Specific Partner IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
        /// 	- Service `walmart_dsp`: Specific Partner IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
        /// </summary>
        public InputList<string> Partners
        {
            get => _partners ?? (_partners = new InputList<string>());
            set => _partners = value;
        }

        [Input("passPhrase")]
        private Input<string>? _passPhrase;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `qualtrics`: Pass Phrase
        /// </summary>
        public Input<string>? PassPhrase
        {
            get => _passPhrase;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _passPhrase = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("passphrase")]
        private Input<string>? _passphrase;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `snowflake_db`: In case private key is encrypted, you are required to enter passphrase that was used to encrypt the private key. The field can be specified if authentication type is `KEY_PAIR`.
        /// </summary>
        public Input<string>? Passphrase
        {
            get => _passphrase;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _passphrase = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `absorb_lms`: Your Absorb LMS password.
        /// 	- Service `adobe_commerce`: Your Adobe Commerce password.
        /// 	- Service `akeneo`: Your Akeneo password.
        /// 	- Service `alida`: Your Alida client secret.
        /// 	- Service `anaplan`: Your Anaplan password. Must be populated if `auth_mode` is set to `Basic`.
        /// 	- Service `appfigures`: Your Appfigures Password.
        /// 	- Service `aurora`: The user's password.
        /// 	- Service `aurora_postgres`: The user's password.
        /// 	- Service `azure_cosmos_for_mongo`: Password used for source database authentication.
        /// 	- Service `azure_postgres`: The user's password.
        /// 	- Service `azure_sql_db`: The user's password.
        /// 	- Service `azure_sql_managed_db`: The user's password.
        /// 	- Service `boostr`: Your Boostr password.
        /// 	- Service `brivo`: Your Brivo password.
        /// 	- Service `cabcharge`: Your Cabcharge password.
        /// 	- Service `ceridian_dayforce`: Your Ceridian Dayforce Password.
        /// 	- Service `cin7`: Your Cin7 API Key.
        /// 	- Service `clarity`: The user's password.
        /// 	- Service `cockroachdb`: The user's password.
        /// 	- Service `collibra`: Your collibra password.
        /// 	- Service `compliance_checkpoint`: Your Compliance Checkpoint account password.
        /// 	- Service `contrast_security`: Your Contrast Security API Password.
        /// 	- Service `db2i_hva`: The user's password.
        /// 	- Service `db2i_sap_hva`: The user's password.
        /// 	- Service `deposco`: Your Deposco password.
        /// 	- Service `documentdb`: The user's password.
        /// 	- Service `dynamics_365_fo`: The user's password.
        /// 	- Service `ehr`: The user's password.
        /// 	- Service `elastic_cloud`: The user's password.
        /// 	- Service `es_self_hosted`: The user's password.
        /// 	- Service `ftp`: FTP password.
        /// 	- Service `globalmeet`: Your GlobalMeet Password.
        /// 	- Service `google_cloud_mysql`: The user's password.
        /// 	- Service `google_cloud_postgresql`: The user's password.
        /// 	- Service `google_cloud_sqlserver`: The user's password.
        /// 	- Service `green_power_monitor`: Your GreenPowerMonitor password.
        /// 	- Service `guru`: Your Guru password.
        /// 	- Service `hana_sap_hva_b1`: The user's password.
        /// 	- Service `hana_sap_hva_ecc`: The user's password.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The user's password.
        /// 	- Service `hana_sap_hva_s4`: The user's password.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The user's password.
        /// 	- Service `heroku_postgres`: The user's password.
        /// 	- Service `hilti_ontrack`: Your Hilti On!Track password.
        /// 	- Service `impact`: Your Impact Account Token
        /// 	- Service `integral_ad_science`: Your integral_ad_science password.
        /// 	- Service `itunes_connect`: Your password
        /// 	- Service `jamf`: Your Jamf password.
        /// 	- Service `jira`: The Jira user's password.
        /// 	- Service `khoros_care`: Your Khoros Care password.
        /// 	- Service `kissmetrics`: Your Kissmetrics API Password.
        /// 	- Service `klarna`: Your Klarna Password.
        /// 	- Service `lessonly`: Your Lessonly password.
        /// 	- Service `magento_mysql`: The user's password.
        /// 	- Service `magento_mysql_rds`: The user's password.
        /// 	- Service `maria`: The user's password.
        /// 	- Service `maria_azure`: The user's password.
        /// 	- Service `maria_rds`: The user's password.
        /// 	- Service `marin`: The Marin user's password.
        /// 	- Service `moloco`: Your Moloco account password.
        /// 	- Service `mongo`: The user's password.
        /// 	- Service `mongo_sharded`: The user's password.
        /// 	- Service `myosh`: Your myosh password.
        /// 	- Service `mysql`: The user's password.
        /// 	- Service `mysql_azure`: The user's password.
        /// 	- Service `mysql_rds`: The user's password.
        /// 	- Service `netsuite_suiteanalytics`: The NetSuite user's password.
        /// 	- Service `opendistro`: The user's password.
        /// 	- Service `opensearch`: The user's password.
        /// 	- Service `oracle`: The user's password.
        /// 	- Service `oracle_business_intelligence_publisher`: The Oracle Business Intelligence user password.
        /// 	- Service `oracle_ebs`: The user's password.
        /// 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud user password.
        /// 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud user password.
        /// 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud user password.
        /// 	- Service `oracle_hva`: The user's password.
        /// 	- Service `oracle_rac`: The user's password.
        /// 	- Service `oracle_rds`: The user's password.
        /// 	- Service `oracle_sap_hva`: The user's password.
        /// 	- Service `oracle_sap_hva_netweaver`: The user's password.
        /// 	- Service `outbrain`: The Outbrain user's password.
        /// 	- Service `pardot`: The Pardot user's password.
        /// 	- Service `partnerize`: Your Partnerize account's password.
        /// 	- Service `podio`: Your Podio account password.
        /// 	- Service `postgres`: The user's password.
        /// 	- Service `postgres_rds`: The user's password.
        /// 	- Service `qmatic_data_connect`: Your Qmatic Data Connect password.
        /// 	- Service `redshift_db`: The Redshift user's password.
        /// 	- Service `revx`: Your RevX Password.
        /// 	- Service `rtb_house`: Your RTB House password.
        /// 	- Service `sap_business_by_design`: The SAP Business ByDesign password.
        /// 	- Service `sap_hana`: Your SAP HANA password.
        /// 	- Service `sap_s4hana`: Your SAP S/4 password.
        /// 	- Service `scorm`: Your Scorm Secret Key.
        /// 	- Service `servicenow`: Your account password.
        /// 	- Service `sftp`: SFTP password.
        /// 	- Service `shiphero`: Your ShipHero password.
        /// 	- Service `shipstation`: Your ShipStation password.
        /// 	- Service `shopware`: Your Shopware password.
        /// 	- Service `skuvault`: Your SkuVault password.
        /// 	- Service `smadex`: Your Smadex Password.
        /// 	- Service `snowflake_db`: The Snowflake user's password.
        /// 	- Service `splash`: Your Splash password.
        /// 	- Service `splunk`: The Splunk user's password.
        /// 	- Service `sql_server`: The user's password.
        /// 	- Service `sql_server_hva`: The user's password.
        /// 	- Service `sql_server_rds`: The user's password.
        /// 	- Service `sql_server_sap_ecc_hva`: The user's password.
        /// 	- Service `starrez`: Your StarRez API password
        /// 	- Service `stickyio`: Your sticky.io password.
        /// 	- Service `stylight`: Your Stylight Password.
        /// 	- Service `sugarcrm`: Your SugarCRM password.
        /// 	- Service `teamwork`: Your Teamwork password.
        /// 	- Service `the_trade_desk`: The Trade Desk password. It is a part of the login credentials.
        /// 	- Service `toggl_track`: Your Toggl Track Password
        /// 	- Service `ukg_pro`: Your UKG Pro password.
        /// 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management password.
        /// 	- Service `unicommerce`: Your uniware login password.
        /// 	- Service `upland`: Your Upland Software Password.
        /// 	- Service `veevavault`: Your Veeva Vault password.
        /// 	- Service `walmart_dsp`: Walmart DSP password. It is a part of the login credentials.
        /// 	- Service `when_i_work`: Your When I Work password.
        /// 	- Service `wherefour`: Your Wherefour password.
        /// 	- Service `workday`: Workday password.
        /// 	- Service `workday_financial_management`: Workday password.
        /// 	- Service `workday_hcm`: Workday password.
        /// 	- Service `xandr`: Your Xandr password.
        /// 	- Service `younium`: Your Younium password.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("pat")]
        private Input<string>? _pat;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `github`: The `Personal Access Token` generated in Github.
        /// </summary>
        public Input<string>? Pat
        {
            get => _pat;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _pat = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `tableau_source`: Your Tableau Source PAT Name.
        /// </summary>
        [Input("patName")]
        public Input<string>? PatName { get; set; }

        [Input("patSecret")]
        private Input<string>? _patSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `tableau_source`: Your Tableau Source PAT Secret.
        /// </summary>
        public Input<string>? PatSecret
        {
            get => _patSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _patSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `jira`: A URL subdirectory where the Jira instance is working.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("pats")]
        private InputList<string>? _pats;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `github`: The `Personal Access Tokens`.
        /// </summary>
        public InputList<string> Pats
        {
            get => _pats ?? (_pats = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _pats = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Optional. All files in your search path matching this regular expression will be synced. This parameter is optional.
        /// 	- Service `azure_blob_storage`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `box`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `dropbox`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `email`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `ftp`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `gcs`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `google_drive`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `kinesis`: Optional. All files in your search path matching this regular expression will be synced. This parameter is optional.
        /// 	- Service `s3`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `sftp`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `share_point`: All files in your search path matching this regular expression will be synced.
        /// 	- Service `wasabi_cloud_storage`: All files in your search path matching this regular expression will be synced.
        /// </summary>
        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle`: Optional: Required only for containerized database.
        /// 	- Service `oracle_ebs`: Optional: Required only for containerized database.
        /// 	- Service `oracle_hva`: (Multi-tenant databases only) The database's PDB name. Exclude this parameter for single-tenant databases.
        /// 	- Service `oracle_rac`: Optional: Required only for containerized database.
        /// 	- Service `oracle_rds`: Optional: Required only for containerized database.
        /// 	- Service `oracle_sap_hva`: (Multi-tenant databases only) The database's PDB name. Exclude this parameter for single-tenant databases.
        /// </summary>
        [Input("pdbName")]
        public Input<string>? PdbName { get; set; }

        [Input("pemCertificate")]
        private Input<string>? _pemCertificate;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apple_search_ads`: The contents of your PEM certificate file. Must be populated if `is_auth2_enabled` is set to `false`.
        /// </summary>
        public Input<string>? PemCertificate
        {
            get => _pemCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _pemCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("pemPrivateKey")]
        private Input<string>? _pemPrivateKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apple_search_ads`: The contents of your PEM secret key file. Must be populated if `is_auth2_enabled` is set to `true`.
        /// </summary>
        public Input<string>? PemPrivateKey
        {
            get => _pemPrivateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _pemPrivateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("perInteractionDimensions")]
        private InputList<string>? _perInteractionDimensions;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_campaign_manager`: Per Interaction Dimensions.
        /// </summary>
        public InputList<string> PerInteractionDimensions
        {
            get => _perInteractionDimensions ?? (_perInteractionDimensions = new InputList<string>());
            set => _perInteractionDimensions = value;
        }

        [Input("personalAccessToken")]
        private Input<string>? _personalAccessToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cj_commission_detail`: Your CJ Commission Detail personal access token.
        /// 	- Service `databricks_db`: Access Token
        /// 	- Service `harvest`: Your Harvest Personal Access Token.
        /// 	- Service `productive`: Your Productive personal access token.
        /// 	- Service `totango`: Your Totango personal access token.
        /// </summary>
        public Input<string>? PersonalAccessToken
        {
            get => _personalAccessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _personalAccessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("personalApiToken")]
        private Input<string>? _personalApiToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `circleci`: Your CircleCI Personal API token.
        /// 	- Service `monday`: Your Monday.com Personal API Token.
        /// </summary>
        public Input<string>? PersonalApiToken
        {
            get => _personalApiToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _personalApiToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("pgpPassPhrase")]
        private Input<string>? _pgpPassPhrase;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `ftp`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `gcs`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `s3`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `sftp`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `wasabi_cloud_storage`: The PGP passphrase used to create the key. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// </summary>
        public Input<string>? PgpPassPhrase
        {
            get => _pgpPassPhrase;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _pgpPassPhrase = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("pgpSecretKey")]
        private Input<string>? _pgpSecretKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `ftp`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `gcs`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `s3`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `sftp`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// 	- Service `wasabi_cloud_storage`: The contents of your PGP secret key file. Must be populated if `use_pgp_encryption_options` is set to `true`.
        /// </summary>
        public Input<string>? PgpSecretKey
        {
            get => _pgpSecretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _pgpSecretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `itunes_connect`: Register the number on AppleId Account Page for 2FA
        /// </summary>
        [Input("phoneNumber")]
        public Input<string>? PhoneNumber { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `justcall`: Your JustCall Plan Type.
        /// </summary>
        [Input("planType")]
        public Input<string>? PlanType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: The port number.
        /// 	- Service `aurora_postgres`: The port number.
        /// 	- Service `aveva_pi`: Port number at which the AF Server is running
        /// 	- Service `azure_postgres`: The port number.
        /// 	- Service `azure_sql_db`: The port number.
        /// 	- Service `azure_sql_managed_db`: The port number.
        /// 	- Service `clarity`: The port number.
        /// 	- Service `cockroachdb`: The port number.
        /// 	- Service `databricks_db`: The port of your SQL warehouse.
        /// 	- Service `db2i_hva`: The port number.
        /// 	- Service `db2i_sap_hva`: The port number.
        /// 	- Service `documentdb`: Port of the primary node. Ignored if `hosts` value is provided.
        /// 	- Service `dynamics_365_fo`: The port number.
        /// 	- Service `ehr`: The port number.
        /// 	- Service `elastic_cloud`: The port number.
        /// 	- Service `es_self_hosted`: The port number.
        /// 	- Service `ftp`: FTP port.
        /// 	- Service `google_cloud_mysql`: The port number.
        /// 	- Service `google_cloud_postgresql`: The port number.
        /// 	- Service `google_cloud_sqlserver`: The port number.
        /// 	- Service `hana_sap_hva_b1`: The port number.
        /// 	- Service `hana_sap_hva_ecc`: The port number.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The port number.
        /// 	- Service `hana_sap_hva_s4`: The port number.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The port number.
        /// 	- Service `heroku_postgres`: The port number.
        /// 	- Service `jira`: The Jira service host port.
        /// 	- Service `magento_mysql`: The port number.
        /// 	- Service `magento_mysql_rds`: The port number.
        /// 	- Service `maria`: The port number.
        /// 	- Service `maria_azure`: The port number.
        /// 	- Service `maria_rds`: The port number.
        /// 	- Service `mysql`: The port number.
        /// 	- Service `mysql_azure`: The port number.
        /// 	- Service `mysql_rds`: The port number.
        /// 	- Service `netsuite_suiteanalytics`: The NetSuite service host port.
        /// 	- Service `opendistro`: The port number.
        /// 	- Service `opensearch`: The port number.
        /// 	- Service `oracle`: The port number.
        /// 	- Service `oracle_ebs`: The port number.
        /// 	- Service `oracle_hva`: The port number.
        /// 	- Service `oracle_rac`: The port number.
        /// 	- Service `oracle_rds`: The port number.
        /// 	- Service `oracle_sap_hva`: The port number.
        /// 	- Service `postgres`: The port number.
        /// 	- Service `postgres_rds`: The port number.
        /// 	- Service `redshift_db`: Port number
        /// 	- Service `sap_hana`: The SAP HANA port number.
        /// 	- Service `sap_s4hana`: The SAP S/4 port number.
        /// 	- Service `sftp`: SFTP port.
        /// 	- Service `snowflake_db`: The Snowflake optional port number.
        /// 	- Service `splunk`: The Splunk service host port.
        /// 	- Service `sql_server`: The port number.
        /// 	- Service `sql_server_hva`: The port number.
        /// 	- Service `sql_server_rds`: The port number.
        /// 	- Service `sql_server_sap_ecc_hva`: The port number.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `linkedin_ads`: The time period to attribute conversions based on clicks. Default value: `DAY_30`
        /// </summary>
        [Input("postClickAttributionWindowSize")]
        public Input<string>? PostClickAttributionWindowSize { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook`: The name of report of which connector will sync the data. [Possible prebuilt_report values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#prebuiltreport).
        /// 	- Service `google_analytics`: The name of the Prebuilt Report from which the connector will sync the data.
        /// </summary>
        [Input("prebuiltReport")]
        public Input<string>? PrebuiltReport { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cloudtrail`: If prefix is present when configuring the bucket.
        /// 	- Service `aws_cost_report`: Folder path to the aws_cost_report files within the bucket.
        /// 	- Service `aws_inventory`: The prefix if you used one when configuring the bucket.
        /// 	- Service `azure_blob_storage`: All files and folders under this folder path will be searched for files to sync.
        /// 	- Service `box`: All files and folders under this folder path will be searched for files to sync.
        /// 	- Service `cloudfront`: The name of the CloudFront folder in the bucket.
        /// 	- Service `dropbox`: All files and folders under this folder path will be searched for files to sync.
        /// 	- Service `ftp`: All files and folders under this folder path will be searched for files to sync.
        /// 	- Service `gcs`: All files and folders under this folder path will be searched for files to sync.
        /// 	- Service `google_drive`: All files and folders under this folder path will be searched for files to sync, this can be the entire drive link or a folder URL
        /// 	- Service `kinesis`: Folder path to the Kinesis files within the bucket.
        /// 	- Service `marin`: Folder path to the Marin manifest file.
        /// 	- Service `microsoft_dynamics_365_fo`: Folder name in which the exported dynamics 365 data resides.
        /// 	- Service `s3`: All files and folders under this folder path will be searched for files to sync.
        /// 	- Service `segment`: Folder path to the Segment files within the bucket. Must be populated if `sync_type` is set to `S3`.
        /// 	- Service `sftp`: All files and folders under this folder path will be searched for files to sync.
        /// 	- Service `share_point`: All files and folders under this folder path link will be searched for files to sync. This can be any shared folder link.
        /// 	- Service `wasabi_cloud_storage`: All files and folders under this folder path will be searched for files to sync.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("primaryKey")]
        private Input<string>? _primaryKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `care_quality_commission`: Your Care Quality Commission primary key.
        /// </summary>
        public Input<string>? PrimaryKey
        {
            get => _primaryKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _primaryKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("primaryKeys")]
        private InputList<string>? _primaryKeys;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday`: Primary Keys
        /// </summary>
        public InputList<string> PrimaryKeys
        {
            get => _primaryKeys ?? (_primaryKeys = new InputList<string>());
            set => _primaryKeys = value;
        }

        [Input("privateKey")]
        private Input<string>? _privateKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `absorb_lms`: Your Absorb LMS REST API private key.
        /// 	- Service `adobe_analytics`: The complete contents of your private key file including the start and end tags (`----BEGIN PRIVATE KEY----` to `----END PRIVATE KEY----`).
        /// 	- Service `adp_workforce_now`: Private Key.
        /// 	- Service `anaplan`: The contents of your private key file. Must be populated if `auth_mode` is set to `Certificate`.
        /// 	- Service `apple_search_ads`: The contents of your secret key file. Must be populated if `is_auth2_enabled` is set to `false`.
        /// 	- Service `braintree`: The contents of your secret key file.
        /// 	- Service `braintree_sandbox`: The contents of your secret key file.
        /// 	- Service `netsuite_suiteanalytics`: Private Key
        /// 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud private key.
        /// 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud private key.
        /// 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud private key.
        /// 	- Service `qualtrics`: Your private key
        /// 	- Service `salesforce`: Provide content of the `.key` private key (only when authentication_method = `ADVANCED`).
        /// 	- Service `salesforce_sandbox`: Provide content of the `.key` private key (only when authentication_method = `ADVANCED`).
        /// 	- Service `snowflake_db`: Private access key.  The field should be specified if authentication type is `KEY_PAIR`.
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("privateToken")]
        private Input<string>? _privateToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `eventbrite`: Your Eventbrite private token.
        /// </summary>
        public Input<string>? PrivateToken
        {
            get => _privateToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `webconnex`: Your Webconnex product.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        [Input("profiles")]
        private InputList<string>? _profiles;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_ads`: Specific User Profile IDs to sync. Must be populated if `sync_mode` is set to `SpecificProfiles`.
        /// 	- Service `google_analytics`: Specific User Profile IDs to sync.  Must be populated if `syncMode` is set to `SpecificAccounts`.
        /// 	- Service `google_analytics_mcf`: Specific User Profile IDs to sync.  Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
        /// </summary>
        public InputList<string> Profiles
        {
            get => _profiles ?? (_profiles = new InputList<string>());
            set => _profiles = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_dsp`: Comma-separated list of your Amazon DSP profiles.
        /// </summary>
        [Input("profilesAmazonDsp")]
        public Input<string>? ProfilesAmazonDsp { get; set; }

        [Input("projectAccessToken")]
        private Input<string>? _projectAccessToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `rollbar`: Your Rollbar project access token.
        /// </summary>
        public Input<string>? ProjectAccessToken
        {
            get => _projectAccessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _projectAccessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("projectCredentials")]
        private InputList<Inputs.ConnectorConfigProjectCredentialGetArgs>? _projectCredentials;
        public InputList<Inputs.ConnectorConfigProjectCredentialGetArgs> ProjectCredentials
        {
            get => _projectCredentials ?? (_projectCredentials = new InputList<Inputs.ConnectorConfigProjectCredentialGetArgs>());
            set => _projectCredentials = value;
        }

        [Input("projectId")]
        private Input<string>? _projectId;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bigquery_db`: BigQuery project ID
        /// 	- Service `google_analytics_360`: The project ID.
        /// 	- Service `google_analytics_4_export`: The Project ID.
        /// 	- Service `mixpanel`: Project ID
        /// </summary>
        public Input<string>? ProjectId
        {
            get => _projectId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _projectId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sentry`: Your Sentry project IDs.
        /// </summary>
        [Input("projectIds")]
        public Input<string>? ProjectIds { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `commercetools`: Your commercetools project key.
        /// </summary>
        [Input("projectKey")]
        public Input<string>? ProjectKey { get; set; }

        [Input("projects")]
        private InputList<string>? _projects;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `asana`: Specific Project IDs to sync. Must be populated if `syncMode` is set to `SpecificProjects`.
        /// 	- Service `jira`: Specific projects to sync. Must be populated if `syncMode` is set to `CUSTOM`.
        /// </summary>
        public InputList<string> Projects
        {
            get => _projects ?? (_projects = new InputList<string>());
            set => _projects = value;
        }

        [Input("properties")]
        private InputList<string>? _properties;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_analytics_4`: The array of strings in the `properties/{id}` format where `id` is a Google Analytics 4 property identifier. Must be populated if `sync_mode` is set to `SPECIFIC_ACCOUNTS`.
        /// </summary>
        public InputList<string> Properties
        {
            get => _properties ?? (_properties = new InputList<string>());
            set => _properties = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cloudbeds`: Your Cloudbeds property IDs.
        /// </summary>
        [Input("propertyId")]
        public Input<string>? PropertyId { get; set; }

        [Input("publicKey")]
        private Input<string>? _publicKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: Public Key
        /// 	- Service `aurora_postgres`: Public Key
        /// 	- Service `azure_blob_storage`: Public key generated by Fivetran to be copied into the host-machine's authorized keys file.
        /// 	- Service `azure_cosmos_for_mongo`: Public Key
        /// 	- Service `azure_postgres`: Public Key
        /// 	- Service `azure_service_bus`: Public key generated by Fivetran to be copied into the host-machine's authorized keys file.
        /// 	- Service `azure_sql_db`: Public Key.
        /// 	- Service `azure_sql_managed_db`: Public Key.
        /// 	- Service `braintree`: The contents of your PEM certificate file.
        /// 	- Service `braintree_sandbox`: The contents of your PEM certificate file.
        /// 	- Service `clarity`: Public Key.
        /// 	- Service `cockroachdb`: Public Key
        /// 	- Service `db2i_hva`: Public Key
        /// 	- Service `db2i_sap_hva`: Public Key
        /// 	- Service `documentdb`: Public Key
        /// 	- Service `dynamics_365_fo`: Public Key.
        /// 	- Service `ehr`: Public Key.
        /// 	- Service `elastic_cloud`: Public Key
        /// 	- Service `es_self_hosted`: Public Key
        /// 	- Service `google_cloud_mysql`: Public Key
        /// 	- Service `google_cloud_postgresql`: Public Key
        /// 	- Service `google_cloud_sqlserver`: Public Key.
        /// 	- Service `hana_sap_hva_b1`: Public Key
        /// 	- Service `hana_sap_hva_ecc`: Public Key
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Public Key
        /// 	- Service `hana_sap_hva_s4`: Public Key
        /// 	- Service `hana_sap_hva_s4_netweaver`: Public Key
        /// 	- Service `heroku_postgres`: Public Key
        /// 	- Service `magento_mysql`: Public Key
        /// 	- Service `magento_mysql_rds`: Public Key
        /// 	- Service `maria`: Public Key
        /// 	- Service `maria_azure`: Public Key
        /// 	- Service `maria_rds`: Public Key
        /// 	- Service `mongo`: Public Key
        /// 	- Service `mongo_sharded`: Public Key
        /// 	- Service `mysql`: Public Key
        /// 	- Service `mysql_azure`: Public Key
        /// 	- Service `mysql_rds`: Public Key
        /// 	- Service `opendistro`: Public Key
        /// 	- Service `opensearch`: Public Key
        /// 	- Service `oracle`: Public Key
        /// 	- Service `oracle_ebs`: Public Key
        /// 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud public key.
        /// 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud public key.
        /// 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud public key.
        /// 	- Service `oracle_hva`: Public Key
        /// 	- Service `oracle_rac`: Public Key
        /// 	- Service `oracle_rds`: Public Key
        /// 	- Service `oracle_sap_hva`: Public Key
        /// 	- Service `partnerstack_vendor`: Your PartnerStack Vendor Public key.
        /// 	- Service `postgres`: Public Key
        /// 	- Service `postgres_rds`: Public Key
        /// 	- Service `sap_hana`: Public Key
        /// 	- Service `sap_s4hana`: Public Key
        /// 	- Service `sftp`: Public Key
        /// 	- Service `sql_server`: Public Key.
        /// 	- Service `sql_server_hva`: Public Key.
        /// 	- Service `sql_server_rds`: Public Key.
        /// 	- Service `sql_server_sap_ecc_hva`: Public Key.
        /// </summary>
        public Input<string>? PublicKey
        {
            get => _publicKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _publicKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora_postgres`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
        /// 	- Service `azure_postgres`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
        /// 	- Service `google_cloud_postgresql`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
        /// 	- Service `heroku_postgres`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
        /// 	- Service `postgres`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
        /// 	- Service `postgres_rds`: Publication name. Specify only for `"updated_method": "WAL_PGOUTPUT"`.
        /// </summary>
        [Input("publicationName")]
        public Input<string>? PublicationName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `skimlinks`: Your Skimlinks publisher ID.
        /// </summary>
        [Input("publisherId")]
        public Input<string>? PublisherId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `outbrain`: Include or ignore results from archived campaigns
        /// </summary>
        [Input("pullArchivedCampaigns")]
        public Input<bool>? PullArchivedCampaigns { get; set; }

        [Input("pythonVersion")]
        public Input<string>? PythonVersion { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_display_and_video_360`: The ID of the query whose configuration you want to reuse. This is a required parameter when `config_method` is set to `REUSE_EXISTING`.
        /// </summary>
        [Input("queryId")]
        public Input<string>? QueryId { get; set; }

        [Input("queryParamValue")]
        private Input<string>? _queryParamValue;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `alchemer`: Your Alchemer API key.
        /// 	- Service `birdeye`: Your Birdeye query-param-value.
        /// </summary>
        public Input<string>? QueryParamValue
        {
            get => _queryParamValue;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _queryParamValue = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bigquery_db`: Specify a different project ID to account for quota and billing of Fivetran query workload
        /// </summary>
        [Input("quotaProjectId")]
        public Input<string>? QuotaProjectId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
        /// 	- Service `gcs`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
        /// 	- Service `google_drive`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
        /// 	- Service `s3`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
        /// 	- Service `sftp`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
        /// 	- Service `share_point`: You can specify the enclosing character used in your CSVs here. Fivetran will consider " as the quote character if this field is empty and quote_character_enabled is set to true.
        /// </summary>
        [Input("quoteChar")]
        public Input<string>? QuoteChar { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
        /// 	- Service `gcs`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
        /// 	- Service `google_drive`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
        /// 	- Service `s3`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
        /// 	- Service `sftp`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
        /// 	- Service `share_point`: If you don’t want to use an enclosing character while processing the files, set the value to false. By default, the value is set to true and is considered " as quote character.
        /// </summary>
        [Input("quoteCharacterEnabled")]
        public Input<bool>? QuoteCharacterEnabled { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `vimeo`: Your Vimeo rate limit plan.
        /// </summary>
        [Input("rateLimitPlan")]
        public Input<string>? RateLimitPlan { get; set; }

        [Input("refreshToken")]
        private Input<string>? _refreshToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `ironsource`: Your Ironsource `Client Secret`.
        /// </summary>
        public Input<string>? RefreshToken
        {
            get => _refreshToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _refreshToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pinterest_ads`: The expiration date of the refresh token. Unix timestamp in seconds
        /// </summary>
        [Input("refreshTokenExpiresAt")]
        public Input<string>? RefreshTokenExpiresAt { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `algolia`: Your Algolia analytics region.
        /// 	- Service `alida`: Your Alida region.
        /// 	- Service `amazon_ads`: The region used by the Amazon Ads profile.
        /// 	- Service `amazon_selling_partner`: The region used by the Amazon Selling Partner profile.
        /// 	- Service `anaplan`: Your Anaplan account region
        /// 	- Service `atlassian_ops_genie`: Your company's Osgenie region (usually **company**.opsgenie.com)
        /// 	- Service `awin`: Your Awin Region.
        /// 	- Service `aws_lambda`: The AWS region code for the DynamoDB instance.
        /// 	- Service `bigin_by_zoho_crm`: Your Bigin by Zoho CRM Region
        /// 	- Service `concur`: The region.
        /// 	- Service `cvent`: Your Cvent region.
        /// 	- Service `everflow`: Your Everflow region.
        /// 	- Service `exact_online`: Your Exact Online region.
        /// 	- Service `getfeedback`: Your GetFeedback region.
        /// 	- Service `happyfox`: Your HappyFox region.
        /// 	- Service `keypay`: Your KeyPay region.
        /// 	- Service `medallia_agile_research`: Your Medallia Agile region.
        /// 	- Service `messagebird`: Your MessageBird Account region.
        /// 	- Service `mixpanel`: Data Region
        /// 	- Service `navan`: Your Navan region.
        /// 	- Service `on24`: Your ON24 region.
        /// 	- Service `pendo`: The Pendo account region.
        /// 	- Service `proofpoint_security_awareness`: Your Proofpoint Security Awareness Region.
        /// 	- Service `ringover`: Your Ringover region.
        /// 	- Service `samsara`: The region of your Samsara account. For instance, if your region is `EUROPE`, provide `eu.samsara` in the `Region` field. If your region is not in Europe, provide `samsara`.
        /// 	- Service `snyk`: Your Snyk region.
        /// 	- Service `talkdesk`: Your Talkdesk region (".com",".eu","ca.com")
        /// 	- Service `totango`: Your Totango region.
        /// 	- Service `transcend`: Your Transcend region.
        /// 	- Service `vonage_contact_center`: Your Vonage Contact Center region.
        /// 	- Service `wasabi_cloud_storage`: The Wasabi Cloud Storage bucket region. Required for connector creation. Default value: `US_EAST_1`.
        /// 	- Service `workday_strategic_sourcing`: Your Workday Strategic Sourcing Region.
        /// 	- Service `xray`: Your Xray region.
        /// 	- Service `zoho_books`: Your Zoho Books application host region.
        /// 	- Service `zoho_campaigns`: Your Zoho Campaigns application host region.
        /// 	- Service `zoho_desk`: Your Zoho Desk domain.
        /// 	- Service `zoho_inventory`: Your Zoho Inventory application host region.
        /// 	- Service `zoho_recruit`: Your Zoho Recruit region.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_attribution`: Your Amazon Attribution API URL region.
        /// </summary>
        [Input("regionApiUrl")]
        public Input<string>? RegionApiUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_attribution`: Your Amazon Attribution auth URL region.
        /// </summary>
        [Input("regionAuthUrl")]
        public Input<string>? RegionAuthUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_attribution`: Your Amazon Attribution token URL region.
        /// </summary>
        [Input("regionTokenUrl")]
        public Input<string>? RegionTokenUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `playvox_workforce_management`: Your Playvox Workforce Management region URL.
        /// </summary>
        [Input("regionUrl")]
        public Input<string>? RegionUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// 	- Service `google_cloud_mysql`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// 	- Service `magento_mysql`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// 	- Service `magento_mysql_rds`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// 	- Service `maria`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// 	- Service `maria_azure`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// 	- Service `maria_rds`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// 	- Service `mysql`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// 	- Service `mysql_azure`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// 	- Service `mysql_rds`: Unique ID within the MySQL replica set. Must be an integer different from all other master and replica servers within the same group.
        /// </summary>
        [Input("replicaId")]
        public Input<int>? ReplicaId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora_postgres`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
        /// 	- Service `azure_postgres`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
        /// 	- Service `google_cloud_postgresql`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
        /// 	- Service `heroku_postgres`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
        /// 	- Service `postgres`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
        /// 	- Service `postgres_rds`: Replication slot name. Specify only for `"updated_method": "WAL"` or `"WAL_PGOUTPUT"`.
        /// </summary>
        [Input("replicationSlot")]
        public Input<string>? ReplicationSlot { get; set; }

        [Input("reportConfigs")]
        private InputList<Inputs.ConnectorConfigReportConfigGetArgs>? _reportConfigs;
        public InputList<Inputs.ConnectorConfigReportConfigGetArgs> ReportConfigs
        {
            get => _reportConfigs ?? (_reportConfigs = new InputList<Inputs.ConnectorConfigReportConfigGetArgs>());
            set => _reportConfigs = value;
        }

        [Input("reportConfigurationIds")]
        private InputList<string>? _reportConfigurationIds;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_campaign_manager`: You can select only one Floodlight Configuration ID per account.
        /// </summary>
        public InputList<string> ReportConfigurationIds
        {
            get => _reportConfigurationIds ?? (_reportConfigurationIds = new InputList<string>());
            set => _reportConfigurationIds = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday`: This is to select report format from JSON and CSV. By default, report format is JSON.
        /// </summary>
        [Input("reportFormatType")]
        public Input<string>? ReportFormatType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pinterest_ads`: Granularity at which reports will be
        /// </summary>
        [Input("reportGranularity")]
        public Input<string>? ReportGranularity { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `rakutenadvertising`: Your Rakuten Advertising report keys.
        /// </summary>
        [Input("reportKeys")]
        public Input<string>? ReportKeys { get; set; }

        [Input("reportLists")]
        private InputList<Inputs.ConnectorConfigReportListGetArgs>? _reportLists;
        public InputList<Inputs.ConnectorConfigReportListGetArgs> ReportLists
        {
            get => _reportLists ?? (_reportLists = new InputList<Inputs.ConnectorConfigReportListGetArgs>());
            set => _reportLists = value;
        }

        [Input("reportServiceApiKey")]
        private Input<string>? _reportServiceApiKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adyen`: Your Report Service API key.
        /// </summary>
        public Input<string>? ReportServiceApiKey
        {
            get => _reportServiceApiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _reportServiceApiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("reportSuites")]
        private InputList<string>? _reportSuites;
        public InputList<string> ReportSuites
        {
            get => _reportSuites ?? (_reportSuites = new InputList<string>());
            set => _reportSuites = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `criteo`: Report Timezone
        /// </summary>
        [Input("reportTimezone")]
        public Input<string>? ReportTimezone { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adroll`: The report type you want. Default value: `ALL_ADS`.
        /// 	- Service `double_click_campaign_manager`: Type of reporting data to sync. Default value: `STANDARD`.
        /// 	- Service `google_display_and_video_360`: The type of the report to create. This is a required parameter when `config_method` is set to `CREATE_NEW`.
        /// 	- Service `youtube_analytics`: The name of report of which connector will sync the data.
        /// </summary>
        [Input("reportType")]
        public Input<string>? ReportType { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday`: URL for a live custom report.
        /// </summary>
        [Input("reportUrl")]
        public Input<string>? ReportUrl { get; set; }

        [Input("reports")]
        private InputList<Inputs.ConnectorConfigReportGetArgs>? _reports;
        public InputList<Inputs.ConnectorConfigReportGetArgs> Reports
        {
            get => _reports ?? (_reports = new InputList<Inputs.ConnectorConfigReportGetArgs>());
            set => _reports = value;
        }

        [Input("reportsLinkedinAds")]
        private InputList<string>? _reportsLinkedinAds;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `linkedin_ads`: Specific analytics reports to sync. Must be populated if adAnalytics is set to 'SpecificReports'.
        /// </summary>
        public InputList<string> ReportsLinkedinAds
        {
            get => _reportsLinkedinAds ?? (_reportsLinkedinAds = new InputList<string>());
            set => _reportsLinkedinAds = value;
        }

        [Input("repositories")]
        private InputList<string>? _repositories;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `github`: Specific Repository IDs to sync. Must be populated if `syncMode` is set to `SpecificRepositories`.
        /// </summary>
        public InputList<string> Repositories
        {
            get => _repositories ?? (_repositories = new InputList<string>());
            set => _repositories = value;
        }

        [Input("resourceToken")]
        private Input<string>? _resourceToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cosmos`: A token that provides access to a specific Azure Cosmos DB resource. Required for the `RESOURCE_TOKEN` data access method.
        /// </summary>
        public Input<string>? ResourceToken
        {
            get => _resourceToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _resourceToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `dynamics_365`: URL at which Dynamics 365 is accessed
        /// </summary>
        [Input("resourceUrl")]
        public Input<string>? ResourceUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pardot`: The number of API calls that the connector should not exceed in a day. Default REST API call limit per day: 150,000.
        /// </summary>
        [Input("restApiLimit")]
        public Input<int>? RestApiLimit { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Directory path containing the SAP NetWeaver RFC SDK library files.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Directory path containing the SAP NetWeaver RFC SDK library files.
        /// 	- Service `oracle_sap_hva_netweaver`: Directory path containing the SAP NetWeaver RFC SDK library files.
        /// </summary>
        [Input("rfcLibraryPath")]
        public Input<string>? RfcLibraryPath { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `netsuite_suiteanalytics`: The NetSuite Role ID for connection.
        /// 	- Service `snowflake_db`: Snowflake Connector role name
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("roleArn")]
        private Input<string>? _roleArn;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: S3 Role ARN
        /// 	- Service `aws_cloudtrail`: The Role ARN required for authentication.
        /// 	- Service `aws_cost`: The Role ARN required for authentication.
        /// 	- Service `aws_cost_report`: The Role ARN required for authentication.
        /// 	- Service `aws_inventory`: The Role ARN required for authentication.
        /// 	- Service `aws_lambda`: The Role ARN required for authentication.
        /// 	- Service `aws_msk`: If `sasl_mechanism` is set to `IAM`, enter your Role ARN
        /// 	- Service `cloudfront`: The Role ARN required for authentication.
        /// 	- Service `dynamodb`: Role ARN
        /// 	- Service `heap`: The Role ARN required for authentication.
        /// 	- Service `kinesis`: The Role ARN required for authentication.
        /// 	- Service `s3`: The Role ARN required for authentication. Required for connector creation when syncing using private bucket.
        /// 	- Service `segment`: The Role ARN required for authentication. Must be populated if `sync_type` is set to `S3`.
        /// </summary>
        public Input<string>? RoleArn
        {
            get => _roleArn;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _roleArn = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: Rollback window
        /// </summary>
        [Input("rollbackWindow")]
        public Input<int>? RollbackWindow { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bingads`: A period of time in days during which a conversion is recorded.
        /// </summary>
        [Input("rollbackWindowSize")]
        public Input<int>? RollbackWindowSize { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `webhooks`: The S3 bucket name. Required if `bucket_service` is set to `S3`.
        /// </summary>
        [Input("s3Bucket")]
        public Input<string>? S3Bucket { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Your S3 user export bucket. Required if `AWS_S3` is the `export_storage_type`
        /// </summary>
        [Input("s3ExportBucket")]
        public Input<string>? S3ExportBucket { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: This is the same as your `group_id`, used if `export_storage_type` is `AWS_S3`
        /// </summary>
        [Input("s3ExportExternalId")]
        public Input<string>? S3ExportExternalId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Your S3 user export folder name. Required if `AWS_S3` is the `export_storage_type`
        /// </summary>
        [Input("s3ExportFolder")]
        public Input<string>? S3ExportFolder { get; set; }

        [Input("s3ExportRoleArn")]
        private Input<string>? _s3ExportRoleArn;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: The Role ARN required for authentication required if `AWS_S3` is the `export_storage_type`
        /// </summary>
        public Input<string>? S3ExportRoleArn
        {
            get => _s3ExportRoleArn;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _s3ExportRoleArn = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("s3RoleArn")]
        private Input<string>? _s3RoleArn;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adjust`: Used if the `export_storage_type` is `AWS_S3`, the Role ARN required for authentication.
        /// 	- Service `webhooks`: The Role ARN required for authentication. Required if `bucket_service` is set to `S3`.
        /// </summary>
        public Input<string>? S3RoleArn
        {
            get => _s3RoleArn;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _s3RoleArn = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: The S3 bucket name.
        /// 	- Service `braze`: Your S3 bucket required if `AWS_S3` is the `cloud_storage_type`
        /// 	- Service `sailthru`: Name of the bucket configured to receive sailthru connect data.
        /// </summary>
        [Input("s3bucket")]
        public Input<string>? S3bucket { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: This is the same as your `group_id`, used for authentication along with the `role_arn` required if `AWS_S3` is the `cloud_storage_type`
        /// 	- Service `sailthru`: The external ID is a string that designates who can assume the role.
        /// </summary>
        [Input("s3externalId")]
        public Input<string>? S3externalId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `braze`: Your S3 folder name required if `AWS_S3` is the `cloud_storage_type`
        /// </summary>
        [Input("s3folder")]
        public Input<string>? S3folder { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sailthru`: Copy and use this to configure Sailthru Connect in your sailthru account.
        /// </summary>
        [Input("s3path")]
        public Input<string>? S3path { get; set; }

        [Input("s3roleArn")]
        private Input<string>? _s3roleArn;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: The Role ARN required for authentication.
        /// 	- Service `braze`: The Role ARN required for authentication required if `AWS_S3` is the `cloud_storage_type`
        /// 	- Service `sailthru`: Role ARN of the IAM role created for Fivetran.
        /// </summary>
        public Input<string>? S3roleArn
        {
            get => _s3roleArn;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _s3roleArn = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `itunes_connect`: Whether to sync all sales accounts or specific sales accounts.
        /// </summary>
        [Input("salesAccountSyncMode")]
        public Input<string>? SalesAccountSyncMode { get; set; }

        [Input("salesAccounts")]
        private InputList<string>? _salesAccounts;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `itunes_connect`: Specific sales account to sync. Must be populated if `sales_account_sync_mode` is set to `SpecificSalesAccounts`.
        /// </summary>
        public InputList<string> SalesAccounts
        {
            get => _salesAccounts ?? (_salesAccounts = new InputList<string>());
            set => _salesAccounts = value;
        }

        [Input("salesforceSecurityToken")]
        private Input<string>? _salesforceSecurityToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pardot`: The Pardot user's Salesforce SSO Account Security Token.
        /// </summary>
        public Input<string>? SalesforceSecurityToken
        {
            get => _salesforceSecurityToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _salesforceSecurityToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `gocardless`: Your GoCardless account type.
        /// </summary>
        [Input("sandboxAccount")]
        public Input<string>? SandboxAccount { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `db2i_hva`: The SAP schema.
        /// 	- Service `db2i_sap_hva`: SAP schema name.
        /// 	- Service `sql_server_hva`: SAP Schema Name. Required only for High-Volume Agent SAP ECC connector.
        /// 	- Service `sql_server_sap_ecc_hva`: SAP Schema Name.
        /// </summary>
        [Input("sapSchema")]
        public Input<string>? SapSchema { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_b1`: The schema name where the HANA tables reside.
        /// 	- Service `hana_sap_hva_ecc`: The Hana schema name where the SAP tables reside.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The Hana schema name where the SAP tables reside.
        /// 	- Service `hana_sap_hva_s4`: The Hana schema name where the SAP tables reside.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The Hana schema name where the SAP tables reside.
        /// </summary>
        [Input("sapSourceSchema")]
        public Input<string>? SapSourceSchema { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_sap_hva`: The Oracle schema name where the SAP tables reside.
        /// </summary>
        [Input("sapUser")]
        public Input<string>? SapUser { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: SASL Mechanism
        /// 	- Service `aws_msk`: If `security_protocol` is set to `SASL`, enter the SASL Mechanism
        /// </summary>
        [Input("saslMechanism")]
        public Input<string>? SaslMechanism { get; set; }

        [Input("saslPlainKey")]
        private Input<string>? _saslPlainKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: API Key
        /// </summary>
        public Input<string>? SaslPlainKey
        {
            get => _saslPlainKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _saslPlainKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("saslPlainSecret")]
        private Input<string>? _saslPlainSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: API Secret
        /// </summary>
        public Input<string>? SaslPlainSecret
        {
            get => _saslPlainSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _saslPlainSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("saslScram256Key")]
        private Input<string>? _saslScram256Key;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: API Key
        /// </summary>
        public Input<string>? SaslScram256Key
        {
            get => _saslScram256Key;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _saslScram256Key = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("saslScram256Secret")]
        private Input<string>? _saslScram256Secret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: API Secret
        /// </summary>
        public Input<string>? SaslScram256Secret
        {
            get => _saslScram256Secret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _saslScram256Secret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("saslScram512Key")]
        private Input<string>? _saslScram512Key;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: API Key
        /// 	- Service `aws_msk`: If `sasl_mechanism` is set to `SCRAM_SHA_512`, enter your secret's `saslScram512Key`.
        /// </summary>
        public Input<string>? SaslScram512Key
        {
            get => _saslScram512Key;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _saslScram512Key = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("saslScram512Secret")]
        private Input<string>? _saslScram512Secret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: API Secret
        /// 	- Service `aws_msk`: If `sasl_mechanism` is set to `SCRAM_SHA_512`, enter your secret's `saslScram512Key`.
        /// </summary>
        public Input<string>? SaslScram512Secret
        {
            get => _saslScram512Secret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _saslScram512Secret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Schema Registry Credentials source
        /// 	- Service `aws_msk`: Schema Registry Credentials source
        /// 	- Service `confluent_cloud`: Schema Registry Credentials source
        /// </summary>
        [Input("schemaRegistryCredentialsSource")]
        public Input<string>? SchemaRegistryCredentialsSource { get; set; }

        [Input("schemaRegistryKey")]
        private Input<string>? _schemaRegistryKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Schema Registry Key
        /// 	- Service `aws_msk`: Schema Registry Key
        /// 	- Service `azure_service_bus`: The key used to access the schema registry. Required for the `avro` and `protobuf` message types
        /// 	- Service `confluent_cloud`: Schema Registry Key
        /// </summary>
        public Input<string>? SchemaRegistryKey
        {
            get => _schemaRegistryKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _schemaRegistryKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("schemaRegistrySecret")]
        private Input<string>? _schemaRegistrySecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Schema Registry Secret
        /// 	- Service `aws_msk`: Schema Registry Secret
        /// 	- Service `azure_service_bus`: The secret used to access the schema registry. Required for the `avro` and `protobuf` message types
        /// 	- Service `confluent_cloud`: Schema Registry Secret
        /// </summary>
        public Input<string>? SchemaRegistrySecret
        {
            get => _schemaRegistrySecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _schemaRegistrySecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("schemaRegistryUrls")]
        private InputList<string>? _schemaRegistryUrls;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Your schema registry URLs
        /// 	- Service `aws_msk`: Your schema registry URLs
        /// 	- Service `azure_service_bus`: The comma-separated list of schema registry servers in the `server:port` format
        /// 	- Service `confluent_cloud`: Your schema registry URLs
        /// </summary>
        public InputList<string> SchemaRegistryUrls
        {
            get => _schemaRegistryUrls ?? (_schemaRegistryUrls = new InputList<string>());
            set => _schemaRegistryUrls = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `ebay`: Your eBay scopes.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cornerstone`: Your Cornerstone scopes.
        /// </summary>
        [Input("scopes")]
        public Input<string>? Scopes { get; set; }

        [Input("seats")]
        private InputList<string>? _seats;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `yahoo_dsp`: Specific Seats to sync. Must be populated if `sync_mode_seat` is set to `SPECIFIC_SEATS`.
        /// </summary>
        public InputList<string> Seats
        {
            get => _seats ?? (_seats = new InputList<string>());
            set => _seats = value;
        }

        [Input("secret")]
        private Input<string>? _secret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appcues`: Your Appcues Secret.
        /// 	- Service `buildium`: Your Buildium API secret.
        /// 	- Service `canvas_data_2_by_instructure`: Your Canvas Data 2 by Instructure secret.
        /// 	- Service `loopio`: Your Loopio Secret.
        /// 	- Service `mode`: Your Mode Secret.
        /// 	- Service `playvox_workforce_management`: Your Playvox Workforce Management client secret.
        /// 	- Service `twilio`: The Twilio API secret
        /// 	- Service `uservoice`: The UserVoice API secret.
        /// 	- Service `venminder`: Your Venminder secret.
        /// 	- Service `vts`: Your VTS secret.
        /// </summary>
        public Input<string>? Secret
        {
            get => _secret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("secretKey")]
        private Input<string>? _secretKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `afterpay`: Your Afterpay Secret Key.
        /// 	- Service `appsflyer`: Your AWS secret key.
        /// 	- Service `bigquery_db`: Private key of the customer service account. If specified, your service account will be used to process the data instead of the Fivetran-managed service account.
        /// 	- Service `checkr`: Your Checkr secret key.
        /// 	- Service `ezofficeinventory`: Your EZOfficeInventory API secret key.
        /// 	- Service `gcs`: Your JSON Private Key. Used to authorize service account. Required if you use a Custom Service Account to authenticate the storage bucket.
        /// 	- Service `ironsource`: Your Ironsource `Client ID`.
        /// 	- Service `line_ads`: Your LINE Ads secret key.
        /// 	- Service `mailjet`: Your Mailjet secret key.
        /// 	- Service `partnerstack_vendor`: Your PartnerStack Vendor Secret key.
        /// 	- Service `paypal`: `Client Secret` of your PayPal client application.
        /// 	- Service `paypal_sandbox`: `Client Secret` of your PayPal client application.
        /// 	- Service `phoenix_ads`: Your Phoenix Ads Secret key.
        /// 	- Service `retailnext`: Your RetailNext secret key.
        /// 	- Service `statsig`: Your Statsig secret key.
        /// 	- Service `yotpo`: Your Yotpo Secret key
        /// </summary>
        public Input<string>? SecretKey
        {
            get => _secretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("secrets")]
        private Input<string>? _secrets;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_lambda`: The secrets that should be passed to the function at runtime.
        /// 	- Service `azure_function`: The secrets that should be passed to the function at runtime.
        /// 	- Service `google_cloud_function`: The secrets that should be passed to the function at runtime.
        /// </summary>
        public Input<string>? Secrets
        {
            get => _secrets;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secrets = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("secretsLists")]
        private InputList<Inputs.ConnectorConfigSecretsListGetArgs>? _secretsLists;
        public InputList<Inputs.ConnectorConfigSecretsListGetArgs> SecretsLists
        {
            get => _secretsLists ?? (_secretsLists = new InputList<Inputs.ConnectorConfigSecretsListGetArgs>());
            set => _secretsLists = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Security protocol for Kafka interaction.
        /// 	- Service `aws_msk`: The security protocol for Kafka interaction.
        /// 	- Service `confluent_cloud`: Security protocol for Confluent Cloud interaction.
        /// 	- Service `heroku_kafka`: Security protocol for Heroku Kafka interaction.
        /// </summary>
        [Input("securityProtocol")]
        public Input<string>? SecurityProtocol { get; set; }

        [Input("segments")]
        private InputList<string>? _segments;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_analytics`: A segment is a subset of your Analytics data that is made up of one or more non-destructive filters (filters that do not alter the underlying data). Those filters isolate subsets of users, sessions, and hits.
        /// </summary>
        public InputList<string> Segments
        {
            get => _segments ?? (_segments = new InputList<string>());
            set => _segments = value;
        }

        [Input("selectedEventTypes")]
        private InputList<string>? _selectedEventTypes;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_marketing_cloud`: Select the event types to be synced.
        /// </summary>
        public InputList<string> SelectedEventTypes
        {
            get => _selectedEventTypes ?? (_selectedEventTypes = new InputList<string>());
            set => _selectedEventTypes = value;
        }

        [Input("selectedExports")]
        private InputList<string>? _selectedExports;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `anaplan`: The list of export IDs in the format `workspace_id_model_id_export_id` that the connector will sync. Must be populated if `sync_mode` is set to `SpecificExports`.
        /// </summary>
        public InputList<string> SelectedExports
        {
            get => _selectedExports ?? (_selectedExports = new InputList<string>());
            set => _selectedExports = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sage_intacct`: Your Sender ID
        /// </summary>
        [Input("senderId")]
        public Input<string>? SenderId { get; set; }

        [Input("senderPassword")]
        private Input<string>? _senderPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sage_intacct`: Your Sender Password
        /// </summary>
        public Input<string>? SenderPassword
        {
            get => _senderPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _senderPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `castor_edc`: Your Castor EDC server.
        /// </summary>
        [Input("server")]
        public Input<string>? Server { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `tableau_source`: Your Tableau Source server address.
        /// </summary>
        [Input("serverAddress")]
        public Input<string>? ServerAddress { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `clockify`: Your Clockify server region.
        /// </summary>
        [Input("serverRegion")]
        public Input<string>? ServerRegion { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_business_intelligence_publisher`: The Oracle Business Intelligence Instance URL.
        /// 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud Instance URL.
        /// 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud Instance URL.
        /// 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud Instance URL.
        /// </summary>
        [Input("serverUrl")]
        public Input<string>? ServerUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `myosh`: Your myosh server variable.
        /// </summary>
        [Input("serverVariable")]
        public Input<string>? ServerVariable { get; set; }

        [Input("servers")]
        private InputList<string>? _servers;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Comma-separated list of Kafka servers in the format `server:port`.
        /// 	- Service `aws_msk`: Comma-separated list of Kafka servers in the `server:port` format.
        /// 	- Service `confluent_cloud`: Comma-separated list of Confluent Cloud servers in the format `server:port`.
        /// 	- Service `heroku_kafka`: Comma-separated list of Heroku Kafka servers in the format `server:port`.
        /// </summary>
        public InputList<string> Servers
        {
            get => _servers ?? (_servers = new InputList<string>());
            set => _servers = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_drive`: Share the folder with the email address
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_cloud_function`: Provide Invoker role to this service account.
        /// </summary>
        [Input("serviceAccountEmail")]
        public Input<string>? ServiceAccountEmail { get; set; }

        [Input("serviceAccountKey")]
        private Input<string>? _serviceAccountKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `firebase`: The contents of your service account key file. Required for authentication.
        /// </summary>
        public Input<string>? ServiceAccountKey
        {
            get => _serviceAccountKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _serviceAccountKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("serviceAccountSecret")]
        private Input<string>? _serviceAccountSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mixpanel`: Service Account Secret
        /// </summary>
        public Input<string>? ServiceAccountSecret
        {
            get => _serviceAccountSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _serviceAccountSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mixpanel`: Service Account Username
        /// </summary>
        [Input("serviceAccountUsername")]
        public Input<string>? ServiceAccountUsername { get; set; }

        [Input("serviceAuthentication")]
        private Input<string>? _serviceAuthentication;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `dsv`: A base64 encoded variant of your `username:password` string. Required for authentication.
        /// </summary>
        public Input<string>? ServiceAuthentication
        {
            get => _serviceAuthentication;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _serviceAuthentication = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Unique identifier sapsid of the SAP system. This field is displayed only when the REMOTE SERVICE IDENTIFICATION is set to Service.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Unique identifier sapsid of the SAP system. This field is displayed only when the REMOTE SERVICE IDENTIFICATION is set to Service.
        /// 	- Service `walmart_marketplace`: Your Walmart Marketplace service name.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("serviceVersion")]
        public Input<string>? ServiceVersion { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: SFTP host.
        /// 	- Service `salesforce_marketing_cloud`: Host
        /// </summary>
        [Input("sftpHost")]
        public Input<string>? SftpHost { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Log in with key pair or password
        /// 	- Service `salesforce_marketing_cloud`: Set this field if you use a key pair for logging into your SFTP server. Don't set it if you use a username and password
        /// </summary>
        [Input("sftpIsKeyPair")]
        public Input<bool>? SftpIsKeyPair { get; set; }

        [Input("sftpPassword")]
        private Input<string>? _sftpPassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: SFTP password required if sftp_is_key_pair is false
        /// 	- Service `salesforce_marketing_cloud`: Password
        /// </summary>
        public Input<string>? SftpPassword
        {
            get => _sftpPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sftpPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: SFTP port.
        /// 	- Service `salesforce_marketing_cloud`: Port
        /// </summary>
        [Input("sftpPort")]
        public Input<int>? SftpPort { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: Public Key
        /// 	- Service `salesforce_marketing_cloud`: Public Key
        /// </summary>
        [Input("sftpPublicKey")]
        public Input<string>? SftpPublicKey { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: SFTP user.
        /// 	- Service `salesforce_marketing_cloud`: User
        /// </summary>
        [Input("sftpUser")]
        public Input<string>? SftpUser { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `share_point`: Your SharePoint folder URL. You can find the folder URL by following the steps mentioned [here](https://fivetran.com/docs/connectors/files/share-point/setup-guide).
        /// </summary>
        [Input("shareUrl")]
        public Input<string>? ShareUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_sheets`: The URL of the sheet that can be copied from the browser address bar, or the ID of the sheet that can be found in the sheet's URL between **/d/** and **/edit**.
        /// </summary>
        [Input("sheetId")]
        public Input<string>? SheetId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `shopify`: The Shopify shop name. Can be found in the URL before **.myshopify.com**.
        /// </summary>
        [Input("shop")]
        public Input<string>? Shop { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `triple_whale`: Your Triple Whale shop domain.
        /// </summary>
        [Input("shopDomain")]
        public Input<string>? ShopDomain { get; set; }

        [Input("shortCode")]
        private Input<string>? _shortCode;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `salesforce_commerce_cloud`: The Salesforce eight-character string assigned to a realm for routing purposes.
        /// </summary>
        public Input<string>? ShortCode
        {
            get => _shortCode;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _shortCode = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `klaviyo`: Sync events linked to deleted profiles
        /// </summary>
        [Input("shouldSyncEventsWithDeletedProfiles")]
        public Input<bool>? ShouldSyncEventsWithDeletedProfiles { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apple_search_ads`: Turn the toggle on if you want the reports to also return records without metrics.
        /// </summary>
        [Input("showRecordsWithNoMetrics")]
        public Input<bool>? ShowRecordsWithNoMetrics { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `twilio`: The Twilio API key SID
        /// </summary>
        [Input("sid")]
        public Input<string>? Sid { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `webhooks`: This is used in HMAC auth method to decode and verify the signature. Supported encodings BASE64 and HEXA_DECIMAL. Default: BASE64
        /// </summary>
        [Input("signatureEncoding")]
        public Input<string>? SignatureEncoding { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
        /// 	- Service `ftp`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
        /// 	- Service `gcs`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
        /// 	- Service `s3`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
        /// 	- Service `sftp`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
        /// 	- Service `wasabi_cloud_storage`: The contents of the signer's public key file. Must be populated if `use_pgp_encryption_options` is set to `true` and PGP encrypted files are signed.
        /// </summary>
        [Input("signerPublicKey")]
        public Input<string>? SignerPublicKey { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `teamwork`: Your Teamwork site address.
        /// </summary>
        [Input("siteAddress")]
        public Input<string>? SiteAddress { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `microsoft_lists`: The Site ID of the SharePoint site from which you want to sync your lists. The Site ID is the `id` field in the [Graph API](https://docs.microsoft.com/en-us/graph/api/site-search?view=graph-rest-1.0&amp;tabs=http) response for sites.
        /// 	- Service `salesforce_commerce_cloud`: The name of the site from which you want to sync data.
        /// </summary>
        [Input("siteId")]
        public Input<string>? SiteId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `microsoft_lists`: The Name of the SharePoint site. The Site Name is the `name` field in the Graph API response for sites.
        /// 	- Service `tableau_source`: Your Tableau Source site name.
        /// </summary>
        [Input("siteName")]
        public Input<string>? SiteName { get; set; }

        [Input("siteUrls")]
        private InputList<string>? _siteUrls;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_search_console`: Specific Site URLs to sync. Must be populated if `sync_mode` is set to `SpecificSites`.
        /// </summary>
        public InputList<string> SiteUrls
        {
            get => _siteUrls ?? (_siteUrls = new InputList<string>());
            set => _siteUrls = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Enter 1 or greater
        /// 	- Service `azure_blob_storage`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
        /// 	- Service `box`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
        /// 	- Service `dropbox`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
        /// 	- Service `email`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
        /// 	- Service `ftp`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
        /// 	- Service `gcs`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
        /// 	- Service `google_drive`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
        /// 	- Service `kinesis`: Enter 1 or greater
        /// 	- Service `s3`: We will skip over the number of lines specified at the end to avoid introducing aberrant data into your destination.
        /// 	- Service `sftp`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
        /// 	- Service `share_point`: We will skip over the number of lines specified at the end so as to not introduce aberrant data into your destination.
        /// 	- Service `wasabi_cloud_storage`: We will skip over the number of lines specified at the end to avoid introducing aberrant data into your destination.
        /// </summary>
        [Input("skipAfter")]
        public Input<int>? SkipAfter { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_cost_report`: Enter 1 or greater
        /// 	- Service `azure_blob_storage`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `box`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `dropbox`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `email`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `ftp`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `gcs`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `google_drive`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `kinesis`: Enter 1 or greater
        /// 	- Service `s3`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `sftp`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `share_point`: We will skip over the number of lines specified before syncing data.
        /// 	- Service `wasabi_cloud_storage`: We will skip over the number of lines specified before syncing data.
        /// </summary>
        [Input("skipBefore")]
        public Input<int>? SkipBefore { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_ads`: Toggles the ["Skip empty reports"](https://fivetran.com/docs/connectors/applications/google-ads#skipemptyreports) feature. Enabled by default
        /// </summary>
        [Input("skipEmptyReports")]
        public Input<bool>? SkipEmptyReports { get; set; }

        [Input("sncCertificate")]
        private Input<string>? _sncCertificate;
        public Input<string>? SncCertificate
        {
            get => _sncCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sncCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sncCertificateSource")]
        private Input<string>? _sncCertificateSource;
        public Input<string>? SncCertificateSource
        {
            get => _sncCertificateSource;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sncCertificateSource = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sncFivetranName")]
        public Input<string>? SncFivetranName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Path to the external security product's library.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Path to the external security product's library.
        /// </summary>
        [Input("sncLibraryPath")]
        public Input<string>? SncLibraryPath { get; set; }

        [Input("sncMode")]
        public Input<string>? SncMode { get; set; }

        [Input("sncMyName")]
        public Input<string>? SncMyName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Client SNC name.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Client SNC name.
        /// </summary>
        [Input("sncName")]
        public Input<string>? SncName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Communication partner's SNC name.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Communication partner's SNC name.
        /// </summary>
        [Input("sncPartnerName")]
        public Input<string>? SncPartnerName { get; set; }

        [Input("sncSourceName")]
        public Input<string>? SncSourceName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `marketo`: Marketo SOAP API Endpoint.
        /// </summary>
        [Input("soapUri")]
        public Input<string>? SoapUri { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `linkedin_company_pages`: The social data (UGCPosts, Shares, Comments) sync time frame in months. Default value: `SIX` .
        /// </summary>
        [Input("socialDataSyncTimeframe")]
        public Input<string>? SocialDataSyncTimeframe { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics_data_feed`: The data source.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `big_commerce`: The BigCommerce store hash.
        /// </summary>
        [Input("storeHash")]
        public Input<string>? StoreHash { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `reviewsio`: Your REVIEWS.io store ID
        /// </summary>
        [Input("storeId")]
        public Input<string>? StoreId { get; set; }

        [Input("subCollections")]
        private InputList<string>? _subCollections;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `firebase`: List of nested collections to sync. Only specified subCollections can be synced.
        /// </summary>
        public InputList<string> SubCollections
        {
            get => _subCollections ?? (_subCollections = new InputList<string>());
            set => _subCollections = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `absorb_lms`: Your Absorb LMS subdomain.
        /// 	- Service `activecampaign`: Your ActiveCampaign sub-domain.
        /// 	- Service `acumatica`: Your Acumatica subdomain.
        /// 	- Service `ada`: Your Ada sub-domain.
        /// 	- Service `alchemer`: Your Alchemer sub-domain.
        /// 	- Service `atlassian_jira_align`: Your Jira Align base URL.
        /// 	- Service `azure_boards`: Your Azure Boards Organization Name.
        /// 	- Service `azure_devops`: Your Azure Organization Name
        /// 	- Service `betterworks`: Your Betterworks subdomain.
        /// 	- Service `bubble`: Your Bubble subdomain.
        /// 	- Service `buildium`: Your Buildium subdomain.
        /// 	- Service `canvas_by_instructure`: Your Canvas by Instructure domain.
        /// 	- Service `chargebee_product_catalog_1`: Your Chargebee Product Catalog 1 subdomain.
        /// 	- Service `chargebee_product_catalog_2`: Your Chargebee subdomain.
        /// 	- Service `checkr`: Your Checkr subdomain.
        /// 	- Service `clubspeed`: Your Clubspeed subdomain.
        /// 	- Service `collibra`: Your collibra subdomain.
        /// 	- Service `compliance_checkpoint`: Your Compliance Checkpoint subdomain.
        /// 	- Service `concord`: Your Concord Sub Domain.
        /// 	- Service `contrast_security`: Your Contrast Security subdomain.
        /// 	- Service `customerio`: Your Customer.io region-specific Subdomain.
        /// 	- Service `dbt_cloud`: Your dbt Cloud API server region.
        /// 	- Service `deputy`: Your Deputy subdomain.
        /// 	- Service `docebo`: Your Docebo subdomain.
        /// 	- Service `drata`: Your Drata sub_domain.
        /// 	- Service `eventsforce`: Your Eventsforce subdomain.
        /// 	- Service `ezofficeinventory`: Your EZOfficeInventory Subdomain.
        /// 	- Service `fountain`: Your Fountain subdomain.
        /// 	- Service `freshchat`: Your Freshchat Sub Domain
        /// 	- Service `gainsight_customer_success`: The subdomain of your Gainsight account.
        /// 	- Service `gainsight_product_experience`: Your Gainsight Product Experience subdomain.
        /// 	- Service `genesys`: Your Genesys subdomain.
        /// 	- Service `green_power_monitor`: Your GreenPowerMonitor subdomain.
        /// 	- Service `heartland_retail_pos`: Your Heartland Retail POS subdomain.
        /// 	- Service `infobip`: Your Infobip sub_domain.
        /// 	- Service `insightly`: Your company's Insightly subdomain name.
        /// 	- Service `instructure`: The Sub domain in which your Instructure account is hosted.
        /// 	- Service `jamf`: Your Jamf subdomain.
        /// 	- Service `kandji`: Your Kandji Subdomain.
        /// 	- Service `khoros_care`: Your Khoros Care subDomain.
        /// 	- Service `looker_source`: Your looker SubDomain name.
        /// 	- Service `lucca`: Your Lucca subdomain.
        /// 	- Service `mailgun`: Your Mailgun subdomain.
        /// 	- Service `matomo`: Your Matomo subdomain.
        /// 	- Service `maxio_chargify`: Enter Your Subdomain.
        /// 	- Service `myosh`: Your myosh subdomain.
        /// 	- Service `namely`: Your Namely subdomain.
        /// 	- Service `nylas`: Your Nylas subdomain.
        /// 	- Service `odoo`: Your Odoo subdomain.
        /// 	- Service `okta`: Your Okta subdomain.
        /// 	- Service `picqer`: Your Picqer subdomain.
        /// 	- Service `pinpoint`: Your Pinpoint sub domain name.
        /// 	- Service `piwik_pro`: Your Piwik PRO subdomain.
        /// 	- Service `playvox`: Your Playvox Subdomain.
        /// 	- Service `posthog`: Your PostHog data region (`app` or `eu`).
        /// 	- Service `recurly`: Your company's Recurly subdomain.
        /// 	- Service `reltio`: Your Reltio subdomain.
        /// 	- Service `revel`: Your Revel Systems subDomain.
        /// 	- Service `rundeck`: Your Rundeck subdomain.
        /// 	- Service `sage_hr`: Your Sage HR subdomain.
        /// 	- Service `salesforce_marketing_cloud`: Your Salesforce Marketing Cloud subdomain.
        /// 	- Service `salsify`: Your Salsify Organization ID.
        /// 	- Service `sap_success_factors`: Your SAP SuccessFactors Subdomain.
        /// 	- Service `sonarqube`: Your Sonarqube subdomain.
        /// 	- Service `starrez`: Your StarRez subdomain
        /// 	- Service `sugarcrm`: Your SugarCRM subdomain.
        /// 	- Service `tableau_source`: Your Tableau Source subdomain.
        /// 	- Service `tempo`: Your Tempo subdomain.
        /// 	- Service `testrail`: Your TestRail subdomain.
        /// 	- Service `thinkific`: Your Thinkific subdomain.
        /// 	- Service `totango`: Your Totango Subdomain.
        /// 	- Service `tymeshift`: Your Tymeshift subdomain.
        /// 	- Service `upland`: Your Upland Software subDomain.
        /// 	- Service `wordpress`: Your WordPress subdomain.
        /// 	- Service `workable`: Your Workable Subdomain.
        /// 	- Service `wrike`: Your Wrike Subdomain.
        /// </summary>
        [Input("subDomain")]
        public Input<string>? SubDomain { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bamboohr`: The subdomain used to access your account. If you access BambooHR at 'https://mycompany.bamboohr.com', then the subdomain is 'mycompany'.
        /// 	- Service `datadog`: Your Datadog subdomain.
        /// 	- Service `ebay`: Your eBay environment.
        /// 	- Service `freshdesk`: Your company's freshdesk subdomain (usually **company**.freshdesk.com).
        /// 	- Service `freshsales`: Your Freshsales domain.
        /// 	- Service `freshservice`: Your company's freshservice subdomain (usually **company**.freshservice.com).
        /// 	- Service `freshsuccess`: Your Freshsuccess subdomain.
        /// 	- Service `gorgias`: Your Gorgias subdomain.
        /// 	- Service `hex`: Your Hex subdomain.
        /// 	- Service `jama_software`: Your Jama Software subdomain.
        /// 	- Service `klarna`: Your Klarna subdomain.
        /// 	- Service `learnupon`: Your Learnupon subdomain.
        /// 	- Service `maxio_saasoptics`: Your Maxio SaaSOptics subdomain.
        /// 	- Service `medallia`: Medallia subdomain
        /// 	- Service `packiyo`: Your Packiyo subdomain.
        /// 	- Service `qmatic_data_connect`: Your Qmatic Data Connect subdomain.
        /// 	- Service `sana`: Your Sana subdomain.
        /// 	- Service `showpad`: Your Showpad subdomain.
        /// 	- Service `skillstx`: Your SkillsTX subdomain.
        /// 	- Service `smarthr`: Your SmartHR subdomain.
        /// 	- Service `sonarqube`: Your Sonarqube subdomain.
        /// 	- Service `toast`: Your Toast domain.
        /// 	- Service `vts`: Your VTS Subdomain.
        /// 	- Service `yext`: Your Yext subdomain. 
        /// 	- Service `zendesk_chat`: Your Zendesk domain.
        /// </summary>
        [Input("subdomain")]
        public Input<string>? Subdomain { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_service_bus`: The subscriber name. If the connection string does not have manage permission, you need to specify a subscriber name we can use to fetch data. If not specified, we default to `fivetran_sub_schema`
        /// </summary>
        [Input("subscriberName")]
        public Input<string>? SubscriberName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `retailnext`: Your RetailNext subscription.
        /// </summary>
        [Input("subscription")]
        public Input<string>? Subscription { get; set; }

        [Input("subscriptionKey")]
        private Input<string>? _subscriptionKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cabcharge`: Your Cabcharge subscription key.
        /// 	- Service `dsv`: Your DSV subscription key.
        /// </summary>
        public Input<string>? SubscriptionKey
        {
            get => _subscriptionKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _subscriptionKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `stripe`: Sync Connected Accounts. Connected Account Documentation - https://stripe.com/docs/api/connected_accounts.
        /// 	- Service `stripe_test`: Sync Connected Accounts. Connected Account Documentation - https://stripe.com/docs/api/connected_accounts.
        /// </summary>
        [Input("supportConnectedAccountsSync")]
        public Input<bool>? SupportConnectedAccountsSync { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday`: This option is to unpack the nested columns and sync them separately. By default, we sync the nested columns as JSON objects.
        /// </summary>
        [Input("supportNestedColumns")]
        public Input<bool>? SupportNestedColumns { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `qualaroo`: Array of Qualaroo Survey IDs.
        /// </summary>
        [Input("surveyIds")]
        public Input<string>? SurveyIds { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `snapchat_ads`: The time period to attribute conversions based on swipes. Default value: `DAY_28`
        /// </summary>
        [Input("swipeAttributionWindow")]
        public Input<string>? SwipeAttributionWindow { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: Sync AppsFlyer Data Locker. Default value is `true`, set it to `false` to sync AppsFlyer data using only webhooks.
        /// </summary>
        [Input("syncDataLocker")]
        public Input<bool>? SyncDataLocker { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `webhooks`: The webhooks sync format.  Default value: `Unpacked`. Unpacked messages must be valid JSON.
        /// </summary>
        [Input("syncFormat")]
        public Input<string>? SyncFormat { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `financial_force`: Enable this option to sync formula fields directly (default value = `false`)
        /// 	- Service `salesforce`: Enable this option to sync formula fields directly (default value = `false`)
        /// 	- Service `salesforce_sandbox`: Enable this option to sync formula fields directly (default value = `false`)
        /// </summary>
        [Input("syncFormulaFields")]
        public Input<bool>? SyncFormulaFields { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook_ads`: Parameter defining whether to enable or disable metadata synchronisation. Default value: `TRUE`.
        /// </summary>
        [Input("syncMetadata")]
        public Input<bool>? SyncMetadata { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_lambda`: Sync Method
        /// </summary>
        [Input("syncMethod")]
        public Input<string>? SyncMethod { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adroll`: Whether to sync all advertisables or specific advertisables. Default value: `AllAdvertisables`.
        /// 	- Service `amazon_ads`: Option to select connector should sync all profiles or specific profiles.
        /// 	- Service `anaplan`: Whether to sync all exports or specific exports.
        /// 	- Service `apple_search_ads`: Sync Mode
        /// 	- Service `asana`: Whether to sync all projects or specific projects.
        /// 	- Service `bingads`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`.
        /// 	- Service `double_click_campaign_manager`: Whether to sync all user profiles or specific ones. Default value: `AllAccounts`.
        /// 	- Service `dynamodb`: Which packed mode setting to use. Default value: `UsePackedModeOnly`.
        /// 	- Service `facebook`: Option to select connector should sync all accounts or specific accounts. [Possible sync_mode values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#syncmode).
        /// 	- Service `facebook_ad_account`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`.
        /// 	- Service `facebook_ads`: Option to select connector should sync all accounts or specific accounts. [Possible sync_mode values](https://fivetran.com/docs/connectors/applications/facebook-ads-insights/api-config#syncmode).
        /// 	- Service `facebook_pages`: Whether to sync all accounts or specific accounts. Default value: `AllPages`.
        /// 	- Service `github`: Whether to sync all repositories or specific repositories.
        /// 	- Service `google_ads`: Whether to sync all accounts or specific accounts.
        /// 	- Service `google_analytics`: Whether to sync all accounts or specific accounts.
        /// 	- Service `google_analytics_4`: Whether to sync all accounts or specific accounts.
        /// 	- Service `google_analytics_mcf`: Whether to sync all accounts or specific accounts. Default value: `ALL_ACCOUNTS`
        /// 	- Service `google_search_console`: Whether to sync all sites or specific sites.
        /// 	- Service `instagram_business`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`.
        /// 	- Service `iterable`: Events Sync Mode.
        /// 	- Service `jira`: Whether to sync all projects or specific projects.
        /// 	- Service `linkedin_ads`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`
        /// 	- Service `pendo`: Whether to sync all App IDs or specific App IDs. Default value: `AllAppIds`.
        /// 	- Service `pinterest_ads`: Whether to sync all advertisers or specific advertisers.
        /// 	- Service `reddit_ads`: Whether to sync all accounts or specific accounts.
        /// 	- Service `salesforce_marketing_cloud`: Select the sync mode.
        /// 	- Service `snapchat_ads`: Whether to sync all organizations or specific organizations. Default value: `AllOrganizations`.
        /// 	- Service `spotify_ads`: Whether to sync all ad accounts or specific ad accounts.
        /// 	- Service `taboola`: Whether to sync all accounts or specific accounts.
        /// 	- Service `the_trade_desk`: Whether to sync all accounts or specific accounts.
        /// 	- Service `tiktok_ads`: Whether to sync all advertiser accounts or specific accounts.
        /// 	- Service `twilio`: Whether to sync all accounts or specific accounts.
        /// 	- Service `twitter`: Whether to sync all accounts or specific accounts. Default value: `AllAccounts`.
        /// 	- Service `twitter_ads`: Whether to sync all accounts or specific accounts.
        /// 	- Service `walmart_dsp`: Whether to sync all accounts or specific accounts.
        /// 	- Service `yahoo_gemini`: Whether to sync all accounts or specific accounts. Default value: `SpecificAccounts`.
        /// 	- Service `zuora`: Select `Zuora Billing` to sync exclusively Zuora Billing related records. Choose `Zuora Revenue` for syncing only Zuora Revenue reports. If both Zuora Billing records and Zuora Revenue reports are to be synced, opt for `Both`.
        /// 	- Service `zuora_sandbox`: Select `Zuora Billing` to sync exclusively Zuora Billing related records. Choose `Zuora Revenue` for syncing only Zuora Revenue reports. If both Zuora Billing records and Zuora Revenue reports are to be synced, opt for `Both`.
        /// </summary>
        [Input("syncMode")]
        public Input<string>? SyncMode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `yahoo_dsp`: Whether to sync all advertisers or specific advertisers. Default value: `ALL_ADVERTISERS`.
        /// </summary>
        [Input("syncModeAdvertiser")]
        public Input<string>? SyncModeAdvertiser { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `yahoo_dsp`: Whether to sync all seats or specific seats. Default value: `ALL_SEATS`.
        /// </summary>
        [Input("syncModeSeat")]
        public Input<string>? SyncModeSeat { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `reddit_ads`: When this parameter is set to `true`, we sync the data of the additional linked accounts. When this parameter is set to `false`, we sync only the data from the main account that was used for authorization
        /// </summary>
        [Input("syncMultipleAccounts")]
        public Input<bool>? SyncMultipleAccounts { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cosmos`: The packing mode type. Supported values:`STANDARD_UNPACKED_MODE`- Unpacks _one_ layer of nested fields and infers types.`PACKED_MODE`- Delivers packed data as a single destination column value.Learn more in our [Azure Cosmos DB Sync Pack Mode Options documentation](https://fivetran.com/docs/connectors/databases/cosmos#packmodeoptions).
        /// 	- Service `documentdb`: Indicates whether synced data will be packed into a single entry(column), or unpacked with one layer of nested fields.
        /// </summary>
        [Input("syncPackMode")]
        public Input<string>? SyncPackMode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: These options are for Appsflyer's Pull API, and are only necessary for syncing events from Pull API.
        /// </summary>
        [Input("syncPullApi")]
        public Input<bool>? SyncPullApi { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Kafka sync type.  Unpacked messages must be valid JSON.
        /// 	- Service `aws_msk`: The sync type.  Unpacked messages must be valid JSON.
        /// 	- Service `azure_event_hub`: Sync type.  Unpacked messages must be valid JSON.
        /// 	- Service `azure_service_bus`: The sync type, which is based on the message type. For `text` and `xml`, `packed` is supported. For `protobuf` and `avro`, `unpacked` is supported. For `json`, both `packed` and `unpacked` are supported
        /// 	- Service `confluent_cloud`: Kafka sync type.  Unpacked messages must be valid JSON.
        /// 	- Service `heroku_kafka`: Heroku Kafka sync type.  Unpacked messages must be valid JSON.
        /// 	- Service `segment`: The Segment connector sync type.
        /// </summary>
        [Input("syncType")]
        public Input<string>? SyncType { get; set; }

        [Input("sysnr")]
        public Input<string>? Sysnr { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hana_sap_hva_ecc_netweaver`: Unique identifier sapsid of the SAP system. This field is displayed only when the REMOTE SERVICE IDENTIFICATION is set to System ID.
        /// 	- Service `hana_sap_hva_s4_netweaver`: Unique identifier sapsid of the SAP system. This field is displayed only when the REMOTE SERVICE IDENTIFICATION is set to System ID.
        /// </summary>
        [Input("systemId")]
        public Input<string>? SystemId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pigment`: Your Pigment table ID.
        /// </summary>
        [Input("tableId")]
        public Input<string>? TableId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `airtable`: Name of table in Airtable
        /// </summary>
        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hubspot`: Timestamp to indicate when tables without access was updated
        /// </summary>
        [Input("tablesWithoutAccessUpdatedAt")]
        public Input<string>? TablesWithoutAccessUpdatedAt { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `culture_amp`: Your Culture Amp Target entity ID.
        /// </summary>
        [Input("targetEntityId")]
        public Input<string>? TargetEntityId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `d2l_brightspace`: Your D2L Brightspace target host.
        /// </summary>
        [Input("targetHost")]
        public Input<string>? TargetHost { get; set; }

        [Input("tdeCertificate")]
        private Input<string>? _tdeCertificate;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sql_server_hva`: Certificate used to protect a database encryption key
        /// 	- Service `sql_server_sap_ecc_hva`: Certificate used to protect a database encryption key
        /// </summary>
        public Input<string>? TdeCertificate
        {
            get => _tdeCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tdeCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sql_server_hva`: Name of the Certificate used to protect a database encryption key
        /// 	- Service `sql_server_sap_ecc_hva`: Name of the Certificate used to protect a database encryption key
        /// </summary>
        [Input("tdeCertificateName")]
        public Input<string>? TdeCertificateName { get; set; }

        [Input("tdePassword")]
        private Input<string>? _tdePassword;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sql_server_hva`: Password of the TDE private key
        /// 	- Service `sql_server_sap_ecc_hva`: Password of the TDE private key
        /// </summary>
        public Input<string>? TdePassword
        {
            get => _tdePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tdePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tdePrivateKey")]
        private Input<string>? _tdePrivateKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sql_server_hva`: Private key associated with the TDE certificate
        /// 	- Service `sql_server_sap_ecc_hva`: Private key associated with the TDE certificate
        /// </summary>
        public Input<string>? TdePrivateKey
        {
            get => _tdePrivateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tdePrivateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `asana`: Team ID
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics`: Technical Account ID from the Service Account (JWT) credentials of your Adobe Project.
        /// </summary>
        [Input("technicalAccountId")]
        public Input<string>? TechnicalAccountId { get; set; }

        [Input("templateLabels")]
        private InputList<string>? _templateLabels;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mandrill`: Provide the labels to filter the templates
        /// </summary>
        public InputList<string> TemplateLabels
        {
            get => _templateLabels ?? (_templateLabels = new InputList<string>());
            set => _templateLabels = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `microsoft_entra_id`: Your Microsoft Entra ID Tenant.
        /// 	- Service `microsoft_power_bi`: Your Microsoft Power BI tenant.
        /// 	- Service `microsoft_teams`: Your Microsoft Teams Tenant.
        /// 	- Service `unicommerce`: Your uniware tenant.
        /// 	- Service `workday`: Workday tenant name
        /// 	- Service `workday_financial_management`: Workday tenant name
        /// 	- Service `workday_hcm`: Workday tenant name
        /// </summary>
        [Input("tenant")]
        public Input<string>? Tenant { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `planful`: Your Planful tenant app URL.
        /// </summary>
        [Input("tenantAppUrl")]
        public Input<string>? TenantAppUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `deposco`: Your Deposco tenant code.
        /// </summary>
        [Input("tenantCode")]
        public Input<string>? TenantCode { get; set; }

        [Input("tenantConfigs")]
        private InputList<Inputs.ConnectorConfigTenantConfigGetArgs>? _tenantConfigs;
        public InputList<Inputs.ConnectorConfigTenantConfigGetArgs> TenantConfigs
        {
            get => _tenantConfigs ?? (_tenantConfigs = new InputList<Inputs.ConnectorConfigTenantConfigGetArgs>());
            set => _tenantConfigs = value;
        }

        [Input("tenantId")]
        private Input<string>? _tenantId;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_sql_db`: Azure AD tenant ID.
        /// 	- Service `azure_sql_managed_db`: Azure AD tenant ID.
        /// 	- Service `business_central`: `Tenant ID` of your Business Central application
        /// 	- Service `crowddev`: Your  crowd.dev Tenant ID.
        /// 	- Service `reltio`: Your Reltio tenant ID.
        /// 	- Service `servicetitan`: Your ServiceTitan tenant ID.
        /// 	- Service `visma`: Your Visma tenant ID.
        /// </summary>
        public Input<string>? TenantId
        {
            get => _tenantId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tenantId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mambu`: Your Mambu tenant name.
        /// </summary>
        [Input("tenantName")]
        public Input<string>? TenantName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `ivanti`: Your Ivanti Tenant URL.
        /// 	- Service `playvox_workforce_management`: Your Playvox Workforce Management tenant URL.
        /// 	- Service `reltio`: Your Reltio tenant URL.
        /// </summary>
        [Input("tenantUrl")]
        public Input<string>? TenantUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `sap_hana`: testTableName
        /// 	- Service `sap_s4hana`: testTableName
        /// </summary>
        [Input("testTableName")]
        public Input<string>? TestTableName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pardot`: The time zone configured in your Pardot instance. An empty value defaults to `UTC+00:00`.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adobe_analytics`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector has been created. Default value: `TWELVE` .
        /// 	- Service `adroll`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `TWELVE`.
        /// 	- Service `apple_search_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once connection is created.  NOTE: The more months of reporting data you sync, the longer your initial sync will take.
        /// 	- Service `bingads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `SIX`.
        /// 	- Service `criteo`: The number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created.   NOTE: The greater number of months means the initial sync will take more time.
        /// 	- Service `double_click_campaign_manager`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. Default value: `TWELVE`.
        /// 	- Service `double_click_publishers`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync.
        /// 	- Service `facebook`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
        /// 	- Service `facebook_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
        /// 	- Service `google_ads`: The number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled custom and prebuilt reports during the next connector sync. Default value: `TWELVE`.
        /// 	- Service `google_analytics`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. The default value: `TWELVE`.
        /// 	- Service `google_analytics_4`: The number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. The default value: `TWELVE`.
        /// 	- Service `google_analytics_mcf`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. Default value: `TWELVE`.
        /// 	- Service `google_display_and_video_360`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync.  NOTE: The more months of reporting data you sync, the longer your initial sync will take.
        /// 	- Service `google_search_ads_360`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync. 
        /// 	- Service `google_search_console`: Number of months' worth of reporting data you'd like to include in your initial sync. A change of this value will trigger a re-sync for enabled reports during the next connector sync.
        /// 	- Service `instagram_business`: Number of months' worth of data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `SIX`.
        /// 	- Service `itunes_connect`: Historical sync time frame in months.
        /// 	- Service `linkedin_ads`: Number of months for which to query reporting data included in the initial sync. This number cannot be modified once the connector is created. Default value: `ALL_TIME`.
        /// 	- Service `outbrain`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once connection is created.  NOTE: The more months of reporting data you sync, the longer your initial sync will take.
        /// 	- Service `pinterest_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
        /// 	- Service `reddit_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `TWELVE`.
        /// 	- Service `snapchat_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `TWELVE`.
        /// 	- Service `spotify_ads`: The number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `SIX`.
        /// 	- Service `taboola`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once connection is created.  NOTE: The more months of reporting data you sync, the longer your initial sync will take.
        /// 	- Service `the_trade_desk`: Number of months' worth of data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
        /// 	- Service `tiktok_ads`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
        /// 	- Service `twitter`: Number of months' worth of data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
        /// 	- Service `twitter_ads`: Historical sync timeframe in months.
        /// 	- Service `walmart_dsp`: Number of months' worth of data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
        /// 	- Service `yahoo_dsp`: Number of months` worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `THREE`.
        /// 	- Service `yahoo_gemini`: Number of months' worth of reporting data you'd like to include in your initial sync. This cannot be modified once the connector is created. Default value: `TWELVE`.
        /// </summary>
        [Input("timeframeMonths")]
        public Input<string>? TimeframeMonths { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `rokt`: Your Rokt timezone.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apple_search_ads`: Determines whether to use UTC or the users timezone from the apple account
        /// </summary>
        [Input("timezoneMode")]
        public Input<string>? TimezoneMode { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_hva`: Single-tenant database: The database's SID.  Multi-tenant database: The database's TNS.
        /// 	- Service `oracle_sap_hva`: Single-tenant database: The database SID.  Multi-tenant database: The database TNS.
        /// </summary>
        [Input("tns")]
        public Input<string>? Tns { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `toast`: Your Toast Restaurant External ID.
        /// </summary>
        [Input("toastId")]
        public Input<string>? ToastId { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `khoros_communities`: Your Khoros Communities token.
        /// 	- Service `matomo`: Your Matomo auth token.
        /// 	- Service `mode`: Your Mode Token.
        /// 	- Service `oracle_moat_analytics`: Your Oracle Moat Analytics Token.
        /// 	- Service `shareasale`: Your ShareASale token.
        /// 	- Service `solarwinds_service_desk`: Your SolarWinds Service Desk token.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cosmos`: The container name. Required for the `RESOURCE_TOKEN` data access method.
        /// </summary>
        [Input("tokenAuthenticatedContainer")]
        public Input<string>? TokenAuthenticatedContainer { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cosmos`: The database name. Required for the `RESOURCE_TOKEN` data access method.
        /// </summary>
        [Input("tokenAuthenticatedDatabase")]
        public Input<string>? TokenAuthenticatedDatabase { get; set; }

        [Input("tokenId")]
        private Input<string>? _tokenId;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `chargedesk`: Your ChargeDesk token ID.
        /// 	- Service `mux`: Your Mux token ID
        /// </summary>
        public Input<string>? TokenId
        {
            get => _tokenId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tokenId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tokenKey")]
        private Input<string>? _tokenKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `netsuite_suiteanalytics`: Token ID
        /// 	- Service `on24`: Your ON24 token key.
        /// 	- Service `proofpoint_security_awareness`: Your Proofpoint Security Awareness Token Key.
        /// </summary>
        public Input<string>? TokenKey
        {
            get => _tokenKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tokenKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tokenSecret")]
        private Input<string>? _tokenSecret;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `netsuite_suiteanalytics`: Token Secret
        /// 	- Service `on24`: Your ON24 token secret.
        /// </summary>
        public Input<string>? TokenSecret
        {
            get => _tokenSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tokenSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tokenSecretKey")]
        private Input<string>? _tokenSecretKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mux`: Your Mux token secret key
        /// </summary>
        public Input<string>? TokenSecretKey
        {
            get => _tokenSecretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tokenSecretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `amazon_dsp`: Your Amazon DSP token URL region.
        /// </summary>
        [Input("tokenUrlRegion")]
        public Input<string>? TokenUrlRegion { get; set; }

        [Input("topics")]
        private InputList<string>? _topics;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_service_bus`: The comma-separated list of topics which should be synced. Required if you do not have manage permissions
        /// </summary>
        public InputList<string> Topics
        {
            get => _topics ?? (_topics = new InputList<string>());
            set => _topics = value;
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `heroku_kafka`: Trust Store Type
        /// </summary>
        [Input("trustStoreType")]
        public Input<string>? TrustStoreType { get; set; }

        [Input("trustedCert")]
        private Input<string>? _trustedCert;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `apache_kafka`: Kafka trusted certificate.
        /// 	- Service `heroku_kafka`: Heroku Kafka trusted certificate. Required for `TLS` security protocol.
        /// </summary>
        public Input<string>? TrustedCert
        {
            get => _trustedCert;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _trustedCert = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("truststore")]
        private Input<string>? _truststore;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aws_msk`: If `security_protocol` is set to `TLS`, add the `Truststore File` as Base64 encoded string.
        /// </summary>
        public Input<string>? Truststore
        {
            get => _truststore;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _truststore = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `aurora_postgres`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `azure_cosmos_for_mongo`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `azure_postgres`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `azure_sql_db`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `azure_sql_managed_db`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `clarity`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `cockroachdb`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `db2i_hva`: SSH host, only specify when connecting via an SSH tunnel (do not use a load balancer). Required for connector creation.
        /// 	- Service `db2i_sap_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `documentdb`: SSH host, only specify when connecting via an SSH tunnel (do not use a load balancer). Required for connector creation.
        /// 	- Service `dynamics_365_fo`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `ehr`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `elastic_cloud`: SSH host, specify only to connect using an SSH tunnel (do not use a load balancer).
        /// 	- Service `es_self_hosted`: SSH host, specify only to connect using an SSH tunnel (do not use a load balancer).
        /// 	- Service `google_cloud_mysql`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `google_cloud_postgresql`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `google_cloud_sqlserver`: SSH host, only specify when connecting via an SSH tunnel (do not use a load balancer).
        /// 	- Service `hana_sap_hva_b1`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `hana_sap_hva_ecc`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `hana_sap_hva_ecc_netweaver`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `hana_sap_hva_s4`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `hana_sap_hva_s4_netweaver`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `heroku_postgres`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `magento_mysql`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `magento_mysql_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `maria`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `maria_azure`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `maria_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `mongo`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `mongo_sharded`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `mysql`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `mysql_azure`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `mysql_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `opendistro`: SSH host, specify only to connect using an SSH tunnel (do not use a load balancer).
        /// 	- Service `opensearch`: SSH host, specify only to connect using an SSH tunnel (do not use a load balancer).
        /// 	- Service `oracle`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `oracle_ebs`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `oracle_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `oracle_rac`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `oracle_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `oracle_sap_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `oracle_sap_hva_netweaver`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `postgres`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `postgres_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `sap_hana`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `sap_hana_db`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `sap_s4hana`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `sftp`: Tunnel host address, specify only to connect via SSH tunnel.
        /// 	- Service `sql_server`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `sql_server_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `sql_server_rds`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// 	- Service `sql_server_sap_ecc_hva`: SSH host, specify only to connect via an SSH tunnel (do not use a load balancer).
        /// </summary>
        [Input("tunnelHost")]
        public Input<string>? TunnelHost { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `aurora_postgres`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `azure_cosmos_for_mongo`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `azure_postgres`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `azure_sql_db`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `azure_sql_managed_db`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `clarity`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `cockroachdb`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `db2i_hva`: SSH port, only specify when connecting via an SSH tunnel. Required for connector creation.
        /// 	- Service `db2i_sap_hva`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `documentdb`: SSH port, only specify when connecting via an SSH tunnel. Required for connector creation.
        /// 	- Service `dynamics_365_fo`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `ehr`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `elastic_cloud`: SSH port, specify only to connect using an SSH tunnel.
        /// 	- Service `es_self_hosted`: SSH port, specify only to connect using an SSH tunnel.
        /// 	- Service `google_cloud_mysql`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `google_cloud_postgresql`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `google_cloud_sqlserver`: SSH port, only specify when connecting via an SSH tunnel.
        /// 	- Service `hana_sap_hva_b1`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `hana_sap_hva_ecc`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `hana_sap_hva_s4`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `hana_sap_hva_s4_netweaver`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `heroku_postgres`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `magento_mysql`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `magento_mysql_rds`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `maria`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `maria_azure`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `maria_rds`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `mongo`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `mongo_sharded`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `mysql`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `mysql_azure`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `mysql_rds`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `opendistro`: SSH port, specify only to connect using an SSH tunnel.
        /// 	- Service `opensearch`: SSH port, specify only to connect using an SSH tunnel.
        /// 	- Service `oracle`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_ebs`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_hva`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_rac`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_rds`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_sap_hva`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_sap_hva_netweaver`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `postgres`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `postgres_rds`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `sap_hana`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `sap_hana_db`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `sap_s4hana`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `sftp`: Tunnel port, specify only to connect via SSH tunnel.
        /// 	- Service `sql_server`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `sql_server_hva`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `sql_server_rds`: SSH port, specify only to connect via an SSH tunnel.
        /// 	- Service `sql_server_sap_ecc_hva`: SSH port, specify only to connect via an SSH tunnel.
        /// </summary>
        [Input("tunnelPort")]
        public Input<int>? TunnelPort { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `aurora_postgres`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `azure_cosmos_for_mongo`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `azure_postgres`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `azure_sql_db`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `azure_sql_managed_db`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `clarity`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `cockroachdb`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `db2i_hva`: SSH user, specify only to connect via an SSH tunnel. Required for connector creation.
        /// 	- Service `db2i_sap_hva`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `documentdb`: SSH user, specify only to connect via an SSH tunnel. Required for connector creation.
        /// 	- Service `dynamics_365_fo`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `ehr`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `elastic_cloud`: SSH user, specify only to connect using an SSH tunnel.
        /// 	- Service `es_self_hosted`: SSH user, specify only to connect using an SSH tunnel.
        /// 	- Service `google_cloud_mysql`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `google_cloud_postgresql`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `google_cloud_sqlserver`: SSH user, only specify when connecting via an SSH tunnel.
        /// 	- Service `hana_sap_hva_b1`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `hana_sap_hva_ecc`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `hana_sap_hva_s4`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `hana_sap_hva_s4_netweaver`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `heroku_postgres`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `magento_mysql`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `magento_mysql_rds`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `maria`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `maria_azure`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `maria_rds`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `mongo`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `mongo_sharded`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `mysql`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `mysql_azure`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `mysql_rds`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `opendistro`: SSH user, specify only to connect using an SSH tunnel.
        /// 	- Service `opensearch`: SSH user, specify only to connect using an SSH tunnel.
        /// 	- Service `oracle`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_ebs`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_hva`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_rac`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_rds`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_sap_hva`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `oracle_sap_hva_netweaver`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `postgres`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `postgres_rds`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `sap_hana`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `sap_hana_db`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `sap_s4hana`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `sftp`: Tunnel user, specify only to connect via SSH tunnel.
        /// 	- Service `sql_server`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `sql_server_hva`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `sql_server_rds`: SSH user, specify only to connect via an SSH tunnel.
        /// 	- Service `sql_server_sap_ecc_hva`: SSH user, specify only to connect via an SSH tunnel.
        /// </summary>
        [Input("tunnelUser")]
        public Input<string>? TunnelUser { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `akamai`: Your Akamai type name.
        /// 	- Service `bubble`: Your Bubble type name.
        /// </summary>
        [Input("typeName")]
        public Input<string>? TypeName { get; set; }

        [Input("uniqueId")]
        public Input<string>? UniqueId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `google_display_and_video_360`: Specifies whether the configuration is updated before each sync or only when the connector settings are saved. This parameter only takes effect when `config_method` is set to `REUSE_EXISTING`. The default value is `true`.
        /// </summary>
        [Input("updateConfigOnEachSync")]
        public Input<bool>? UpdateConfigOnEachSync { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `aurora_postgres`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `azure_postgres`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `azure_sql_db`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
        /// 	- Service `azure_sql_managed_db`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
        /// 	- Service `clarity`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
        /// 	- Service `dynamics_365_fo`: Update Method
        /// 	- Service `ehr`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
        /// 	- Service `google_cloud_mysql`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `google_cloud_postgresql`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `google_cloud_sqlserver`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
        /// 	- Service `heroku_postgres`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `magento_mysql`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `magento_mysql_rds`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `maria`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `maria_azure`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `maria_rds`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `mysql`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `mysql_azure`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `mysql_rds`: The method to detect new or changed rows. Supported values:`BINLOG` - Fivetran uses your binary logs (also called binlogs) to request only the data that has changed since our last sync. This is the default value if no value is specified. `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `oracle`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables. - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `oracle_ebs`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables.  - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `oracle_hva`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables. - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `oracle_rac`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables.  - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `oracle_rds`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables.  - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `oracle_sap_hva`: The method used to detect new or changed rows. Supported values: - `LOGMINER` - Fivetran uses LogMiner, a utility that is part of Oracle Database, to detect modified rows in the source tables. - `TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `postgres`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `postgres_rds`: The method to detect new or changed rows. Specify only for `"service": "postgres"` or `"service": "postgres_rds"`. Supported values:`WAL` - this method replicates new, changed and deleted rows by tailing the write-ahead log (WAL) via a logical slot. This is more efficient than the XMIN method, but requires more setup and monitoring.`XMIN` - this method detects new or changed rows via the XMIN system column, but is not capable of detecting deleted rows.`WAL_PGOUTPUT` -  logical replication of the WAL using the pgoutput plugin. This method replicates new, changed, and deleted rows by tailing the write-ahead log (WAL) using a logical slot.`TELEPORT` - Fivetran's proprietary replication method that uses compressed snapshots to detect and apply changes.
        /// 	- Service `redshift_db`: Default value: `Teleport`
        /// 	- Service `snowflake_db`: Default value: `Teleport`
        /// 	- Service `sql_server`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
        /// 	- Service `sql_server_hva`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
        /// 	- Service `sql_server_rds`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
        /// 	- Service `sql_server_sap_ecc_hva`: (Optional) The incremental update method the connector will use. The possible values are `"TELEPORT"` or `"NATIVE_UPDATE"`. The type defaults to `"NATIVE_UPDATE"` if the value is set to `null` or not specified.
        /// </summary>
        [Input("updateMethod")]
        public Input<string>? UpdateMethod { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `cosmos`: Cosmos resource instance address.
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `fountain`: Your Fountain URL format.
        /// </summary>
        [Input("urlFormat")]
        public Input<string>? UrlFormat { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mandrill`: Whether to use multiple API keys for interaction.
        /// </summary>
        [Input("useApiKeys")]
        public Input<bool>? UseApiKeys { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: Use Custom Bucket. Set it to 'true' if the data is being synced to your S3 bucket instead of an AppsFlyer-managed bucket.
        /// </summary>
        [Input("useCustomerBucket")]
        public Input<bool>? UseCustomerBucket { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `oracle_hva`: Default value: `false`. Set to `true` if you're using a RAC instance.
        /// 	- Service `oracle_sap_hva`: Default value: `false`. Set to `true` if you're using a RAC instance.
        /// </summary>
        [Input("useOracleRac")]
        public Input<bool>? UseOracleRac { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `azure_blob_storage`: Set to `true` if files present in the Azure Blob Storage container are encrypted using PGP. Default value: `false`.
        /// 	- Service `ftp`: Set to `true` if files are encrypted using PGP in the S3 bucket. Default value: `false`.
        /// 	- Service `gcs`: Set to `true` if files are encrypted using PGP in the GCS bucket. Default value: `false`.
        /// 	- Service `s3`: Set to `true` if files are encrypted using PGP in the S3 bucket. Default value: `false`.
        /// 	- Service `sftp`: Set to `true` if files present in SFTP server are encrypted using PGP. Default value: `false`.
        /// 	- Service `wasabi_cloud_storage`: Set to `true` if files are encrypted using PGP in the Wasabi Cloud Storage bucket. Default value: `false`.
        /// </summary>
        [Input("usePgpEncryptionOptions")]
        public Input<bool>? UsePgpEncryptionOptions { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bigquery_db`: BigQuery use service account; default is false
        /// </summary>
        [Input("useServiceAccount")]
        public Input<bool>? UseServiceAccount { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mandrill`: Use template labels to filter templates for sync
        /// </summary>
        [Input("useTemplateLabels")]
        public Input<bool>? UseTemplateLabels { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `github`: Set to `true` to capture deletes.
        /// 	- Service `xero`: Updates to few fields like sent_to_contact in Invoice table might be missed if you don't enable this.
        /// </summary>
        [Input("useWebhooks")]
        public Input<bool>? UseWebhooks { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bigquery_db`: Create and drop tables in a query results dataset. Default is false
        /// 	- Service `snowflake_db`: Choose a database and schema to create temporary tables for syncs.
        /// </summary>
        [Input("useWorkspace")]
        public Input<bool>? UseWorkspace { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `aurora`: The user name.
        /// 	- Service `aurora_postgres`: The user name.
        /// 	- Service `azure_cosmos_for_mongo`: Username for source database access.
        /// 	- Service `azure_postgres`: The user name.
        /// 	- Service `azure_sql_db`: The user name.  For Azure Databases, the format must be `user@domain`.
        /// 	- Service `azure_sql_managed_db`: The user name.  For Azure Databases, the format must be `user@domain`.
        /// 	- Service `clarity`: The user name.  For Azure Databases, the format must be `user@domain`.
        /// 	- Service `cockroachdb`: The user name.
        /// 	- Service `db2i_hva`: The user name.
        /// 	- Service `db2i_sap_hva`: The username.
        /// 	- Service `documentdb`: The user name.
        /// 	- Service `dynamics_365_fo`: The user name. The format must be `user@domain`.
        /// 	- Service `ehr`: The user name.  For Azure Databases, the format must be `user@domain`.
        /// 	- Service `elastic_cloud`: The user name.
        /// 	- Service `es_self_hosted`: The user name.
        /// 	- Service `ftp`: FTP user.
        /// 	- Service `google_cloud_mysql`: The user name.
        /// 	- Service `google_cloud_postgresql`: The user name.
        /// 	- Service `google_cloud_sqlserver`: The user name. For Azure Databases, the format must be `user@domain`.
        /// 	- Service `hana_sap_hva_b1`: The username.
        /// 	- Service `hana_sap_hva_ecc`: The username.
        /// 	- Service `hana_sap_hva_ecc_netweaver`: The username.
        /// 	- Service `hana_sap_hva_s4`: The username.
        /// 	- Service `hana_sap_hva_s4_netweaver`: The username.
        /// 	- Service `heroku_postgres`: The user name.
        /// 	- Service `jira`: The Jira username.
        /// 	- Service `magento_mysql`: The user name.
        /// 	- Service `magento_mysql_rds`: The user name.
        /// 	- Service `maria`: The user name.
        /// 	- Service `maria_azure`: The user name.
        /// 	- Service `maria_rds`: The user name.
        /// 	- Service `marin`: The Marin username.
        /// 	- Service `mongo`: The user name.
        /// 	- Service `mongo_sharded`: The user name.
        /// 	- Service `mysql`: The user name.
        /// 	- Service `mysql_azure`: The user name.
        /// 	- Service `mysql_rds`: The user name.
        /// 	- Service `opendistro`: The user name.
        /// 	- Service `opensearch`: The user name.
        /// 	- Service `oracle`: The user name.
        /// 	- Service `oracle_ebs`: The user name.
        /// 	- Service `oracle_hva`: The user name.
        /// 	- Service `oracle_rac`: The user name.
        /// 	- Service `oracle_rds`: The user name.
        /// 	- Service `oracle_sap_hva`: The username.
        /// 	- Service `oracle_sap_hva_netweaver`: The username.
        /// 	- Service `outbrain`: The username or email of the Outbrain user.
        /// 	- Service `postgres`: The user name.
        /// 	- Service `postgres_rds`: The user name.
        /// 	- Service `redshift_db`: The Redshift username.
        /// 	- Service `sap_hana`: Your SAP HANA user name.
        /// 	- Service `sap_s4hana`: Your SAP S/4 user name.
        /// 	- Service `sftp`: SFTP user.
        /// 	- Service `snowflake_db`: The Snowflake username.
        /// 	- Service `splunk`: The Splunk username.
        /// 	- Service `sql_server`: The user name.  For Azure Databases, the format must be `user@domain`.
        /// 	- Service `sql_server_hva`: The user name.  For Azure Databases, the format must be `user@domain`.
        /// 	- Service `sql_server_rds`: The user name.  For Azure Databases, the format must be `user@domain`.
        /// 	- Service `sql_server_sap_ecc_hva`: The user name.  For Azure Databases, the format must be `user@domain`.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `coassemble`: Your Coassemble user ID.
        /// 	- Service `gmail`: (DEPRECATED) Your Gmail user ID.
        /// 	- Service `hibob`: Your HiBob Service User Token.
        /// 	- Service `marketo`: Marketo SOAP API User Id.
        /// 	- Service `okendo`: Your Okendo user ID.
        /// 	- Service `playvox`: Your Playvox User ID.
        /// 	- Service `sage_intacct`: User ID
        /// 	- Service `vimeo`: Your Vimeo user ID.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        [Input("userKey")]
        private Input<string>? _userKey;
        public Input<string>? UserKey
        {
            get => _userKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _userKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday`: Workday username.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        [Input("userProfiles")]
        private InputList<string>? _userProfiles;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `double_click_campaign_manager`: IDs of specific User Profiles to sync. Must be populated if `sync_mode` is set to `SpecificAccounts`.
        /// </summary>
        public InputList<string> UserProfiles
        {
            get => _userProfiles ?? (_userProfiles = new InputList<string>());
            set => _userProfiles = value;
        }

        [Input("userToken")]
        private Input<string>? _userToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hibob`: Your HiBob Service User ID.
        /// 	- Service `konnect_insights`: Your Konnect Insights User Token.
        /// 	- Service `sonarqube`: Your Sonarqube user token.
        /// </summary>
        public Input<string>? UserToken
        {
            get => _userToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _userToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("username")]
        private Input<string>? _username;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `absorb_lms`: Your Absorb LMS username.
        /// 	- Service `adobe_commerce`: Your Adobe Commerce username.
        /// 	- Service `akeneo`: Your Akeneo username.
        /// 	- Service `alida`: Your Alida client ID.
        /// 	- Service `anaplan`: Your Anaplan user ID. Must be populated if `auth_mode` is set to `Basic`.
        /// 	- Service `appfigures`: Your Appfigures Username.
        /// 	- Service `aveva_pi`: Username for the user to authenticate as with the AF Server
        /// 	- Service `ceridian_dayforce`: Your Ceridian Dayforce Username.
        /// 	- Service `churnzero`: Your ChurnZero username.
        /// 	- Service `cin7`: Your Cin7 API Username.
        /// 	- Service `collibra`: Your collibra username.
        /// 	- Service `compliance_checkpoint`: Your Compliance Checkpoint account username.
        /// 	- Service `concur`: The SAP Concur username.
        /// 	- Service `confluence`: Your Confluence username.
        /// 	- Service `contrast_security`: Your Contrast Security API Username.
        /// 	- Service `dcl_logistics`: Your DCL Logistics username.
        /// 	- Service `deposco`: Your Deposco username.
        /// 	- Service `github`: `Login` of your GitHub profile.
        /// 	- Service `gladly`: Your Gladly Username.
        /// 	- Service `globalmeet`: Your GlobalMeet Username.
        /// 	- Service `gorgias`: Your Gorgias username.
        /// 	- Service `green_power_monitor`: Your GreenPowerMonitor username.
        /// 	- Service `guru`: Your Guru username.
        /// 	- Service `hilti_ontrack`: Your Hilti On!Track username.
        /// 	- Service `impact`: Your Impact Account SID
        /// 	- Service `integral_ad_science`: Your integral_ad_science username.
        /// 	- Service `itunes_connect`: Your Apple ID
        /// 	- Service `jamf`: Your Jamf username.
        /// 	- Service `khoros_care`: Your Khoros Care username.
        /// 	- Service `kissmetrics`: Your Kissmetrics API Username.
        /// 	- Service `klarna`: Your Klarna Username.
        /// 	- Service `learnupon`: Your Learnupon username.
        /// 	- Service `lessonly`: Your Lessonly username.
        /// 	- Service `mailgun`: Your Mailgun API username.
        /// 	- Service `myosh`: Your myosh username.
        /// 	- Service `oracle_business_intelligence_publisher`: The Oracle Business Intelligence username.
        /// 	- Service `oracle_fusion_cloud_apps_crm`: The Oracle Fusion Cloud username.
        /// 	- Service `oracle_fusion_cloud_apps_fscm`: The Oracle Fusion Cloud username.
        /// 	- Service `oracle_fusion_cloud_apps_hcm`: The Oracle Fusion Cloud username.
        /// 	- Service `partnerize`: Your Partnerize account's username.
        /// 	- Service `pingdom`: Your Pingdom Username.
        /// 	- Service `podio`: Your Podio account username.
        /// 	- Service `qmatic_data_connect`: Your Qmatic Data Connect username.
        /// 	- Service `quorum`: Your Quorum username .
        /// 	- Service `revx`: Your RevX Username.
        /// 	- Service `rtb_house`: Your RTB House username.
        /// 	- Service `sap_business_by_design`: The SAP Business ByDesign username.
        /// 	- Service `scorm`: Your Scorm App ID.
        /// 	- Service `servicenow`: Your ServiceNow User ID (username).
        /// 	- Service `shiphero`: Your ShipHero username.
        /// 	- Service `shipstation`: Your ShipStation username.
        /// 	- Service `shopware`: Your Shopware username.
        /// 	- Service `splash`: Your Splash username.
        /// 	- Service `starrez`: Your StarRez API username
        /// 	- Service `stickyio`: Your sticky.io username .
        /// 	- Service `stylight`: Your Stylight Username.
        /// 	- Service `sugarcrm`: Your SugarCRM username.
        /// 	- Service `teamwork`: Your Teamwork username.
        /// 	- Service `testrail`: Your TestRail username.
        /// 	- Service `ukg_pro`: Your UKG Pro username.
        /// 	- Service `ukg_pro_workforce_management`: Your UKG Pro Workforce Management username.
        /// 	- Service `unicommerce`: Your uniware login username.
        /// 	- Service `upland`: Your Upland Software Username.
        /// 	- Service `veevavault`: Your Veeva Vault username.
        /// 	- Service `when_i_work`: Your When I Work username.
        /// 	- Service `wherefour`: Your Wherefour username.
        /// 	- Service `workday_financial_management`: Workday username.
        /// 	- Service `workday_hcm`: Username of your Workday Integration System User account
        /// 	- Service `xandr`: Your Xandr username.
        /// 	- Service `younium`: Your Younium username.
        /// </summary>
        public Input<string>? Username
        {
            get => _username;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _username = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `criteo_retail_media`: Your Criteo Retail Media version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `facebook`: Time period to attribute conversions based on views. [Possible view_attribution_window values](https://fivetran.com/docs/applications/facebook-ad-insights/api-config#viewattributionwindow).
        /// 	- Service `pinterest_ads`: The number of days to use as the conversion attribution window for a 'view' action.
        /// 	- Service `snapchat_ads`: The time period to attribute conversions based on views. Default value: `DAY_1`
        /// </summary>
        [Input("viewAttributionWindow")]
        public Input<string>? ViewAttributionWindow { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `pigment`: Your Pigment view ID.
        /// </summary>
        [Input("viewId")]
        public Input<string>? ViewId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `linkedin_ads`: The time period to attribute conversions based on views. Default value: `DAY_7`
        /// </summary>
        [Input("viewThroughAttributionWindowSize")]
        public Input<string>? ViewThroughAttributionWindowSize { get; set; }

        [Input("webServiceApiKey")]
        private Input<string>? _webServiceApiKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adyen`: Your Adyen Web Service API key.
        /// </summary>
        public Input<string>? WebServiceApiKey
        {
            get => _webServiceApiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _webServiceApiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `appsflyer`: Webhook Url
        /// </summary>
        [Input("webhookEndpoint")]
        public Input<string>? WebhookEndpoint { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `xero`: Webhook Key
        /// </summary>
        [Input("webhookKey")]
        public Input<string>? WebhookKey { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `branch`: Webhook URL
        /// 	- Service `pipedrive`: The registered URL for webhooks in your Pipedrive dashboard.
        /// 	- Service `segment`: Webhook URL.
        /// 	- Service `xero`: (ReadOnly) The Webhook URL generated by Fivetran. You can configure this in XERO.
        /// </summary>
        [Input("webhookUrl")]
        public Input<string>? WebhookUrl { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `woocommerce`: The Site ID of your WordPress hosted WooCommerce instance or the subdomain of your self-hosted WooCommerce instance.
        /// </summary>
        [Input("wordPressSiteIdOrWoocommerceDomainName")]
        public Input<string>? WordPressSiteIdOrWoocommerceDomainName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `moloco`: Your Moloco workplace ID.
        /// </summary>
        [Input("workplaceId")]
        public Input<string>? WorkplaceId { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `mode`: Your Mode Workspace.
        /// </summary>
        [Input("workspace")]
        public Input<string>? Workspace { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bigquery_db`: Workspace Dataset Name
        /// 	- Service `snowflake_db`: The name of the database where the temporary tables will be created.
        /// </summary>
        [Input("workspaceName")]
        public Input<string>? WorkspaceName { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `bigquery_db`: Use the source dataset as the workspace dataset
        /// </summary>
        [Input("workspaceSameAsSource")]
        public Input<bool>? WorkspaceSameAsSource { get; set; }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `snowflake_db`: The name of the schema that belongs to the workspace database where the temporary tables will be created.
        /// </summary>
        [Input("workspaceSchema")]
        public Input<string>? WorkspaceSchema { get; set; }

        [Input("workspaceToken")]
        private Input<string>? _workspaceToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `hex`: Your Hex workspace token.
        /// </summary>
        public Input<string>? WorkspaceToken
        {
            get => _workspaceToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _workspaceToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("wsCertificate")]
        private Input<string>? _wsCertificate;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `adp_workforce_now`: Web Services Certificate.
        /// </summary>
        public Input<string>? WsCertificate
        {
            get => _wsCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _wsCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("xApiKey")]
        private Input<string>? _xApiKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday_strategic_sourcing`: Your Workday Strategic Sourcing X API key.
        /// </summary>
        public Input<string>? XApiKey
        {
            get => _xApiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _xApiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("xKey")]
        private Input<string>? _xKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `medallia_agile_research`: Your Medallia Agile Research key.
        /// </summary>
        public Input<string>? XKey
        {
            get => _xKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _xKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("xMasterKey")]
        private Input<string>? _xMasterKey;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `medallia_agile_research`: Your Medallia Agile Research master key.
        /// </summary>
        public Input<string>? XMasterKey
        {
            get => _xMasterKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _xMasterKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday_strategic_sourcing`: Your Workday Strategic Sourcing X User Email.
        /// </summary>
        [Input("xUserEmail")]
        public Input<string>? XUserEmail { get; set; }

        [Input("xUserToken")]
        private Input<string>? _xUserToken;

        /// <summary>
        /// Field usage depends on `service` value: 
        /// 	- Service `workday_strategic_sourcing`: Your Workday Strategic Sourcing X User Token.
        /// </summary>
        public Input<string>? XUserToken
        {
            get => _xUserToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _xUserToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public ConnectorConfigGetArgs()
        {
        }
        public static new ConnectorConfigGetArgs Empty => new ConnectorConfigGetArgs();
    }
}
