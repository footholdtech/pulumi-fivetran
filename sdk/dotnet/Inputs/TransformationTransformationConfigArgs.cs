// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran.Inputs
{

    public sealed class TransformationTransformationConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("connectionIds")]
        private InputList<string>? _connectionIds;

        /// <summary>
        /// The list of the connection identifiers to be used for the integrated schedule. Also used to identify package*name automatically if package*name was not specified
        /// </summary>
        public InputList<string> ConnectionIds
        {
            get => _connectionIds ?? (_connectionIds = new InputList<string>());
            set => _connectionIds = value;
        }

        [Input("excludedModels")]
        private InputList<string>? _excludedModels;

        /// <summary>
        /// The list of excluded output model names
        /// </summary>
        public InputList<string> ExcludedModels
        {
            get => _excludedModels ?? (_excludedModels = new InputList<string>());
            set => _excludedModels = value;
        }

        /// <summary>
        /// The transformation name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Quickstart transformation package name
        /// </summary>
        [Input("packageName")]
        public Input<string>? PackageName { get; set; }

        /// <summary>
        /// The unique identifier for the dbt Core project within the Fivetran system
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("steps")]
        private InputList<Inputs.TransformationTransformationConfigStepArgs>? _steps;
        public InputList<Inputs.TransformationTransformationConfigStepArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.TransformationTransformationConfigStepArgs>());
            set => _steps = value;
        }

        /// <summary>
        /// The boolean flag indicating that a newer version is available for the transformation package
        /// </summary>
        [Input("upgradeAvailable")]
        public Input<bool>? UpgradeAvailable { get; set; }

        public TransformationTransformationConfigArgs()
        {
        }
        public static new TransformationTransformationConfigArgs Empty => new TransformationTransformationConfigArgs();
    }
}
