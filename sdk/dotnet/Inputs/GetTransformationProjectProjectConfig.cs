// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran.Inputs
{

    public sealed class GetTransformationProjectProjectConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The version of transformation that should run the project
        /// </summary>
        [Input("dbtVersion", required: true)]
        public string DbtVersion { get; set; } = null!;

        /// <summary>
        /// Default schema in destination. This production schema will contain your transformed data.
        /// </summary>
        [Input("defaultSchema", required: true)]
        public string DefaultSchema { get; set; } = null!;

        [Input("environmentVars", required: true)]
        private List<string>? _environmentVars;

        /// <summary>
        /// List of environment variables defined as key-value pairs in the raw string format using = as a separator. The variable name should have the DBT_ prefix and can contain A-Z, 0-9, dash, underscore, or dot characters. Example: "DBT*VARIABLE=variable*value"
        /// </summary>
        public List<string> EnvironmentVars
        {
            get => _environmentVars ?? (_environmentVars = new List<string>());
            set => _environmentVars = value;
        }

        /// <summary>
        /// Folder in Git repo with your transformation project
        /// </summary>
        [Input("folderPath", required: true)]
        public string FolderPath { get; set; } = null!;

        /// <summary>
        /// Git branch
        /// </summary>
        [Input("gitBranch", required: true)]
        public string GitBranch { get; set; } = null!;

        /// <summary>
        /// Git remote URL with your transformation project
        /// </summary>
        [Input("gitRemoteUrl", required: true)]
        public string GitRemoteUrl { get; set; } = null!;

        /// <summary>
        /// Public key to grant Fivetran SSH access to git repository.
        /// </summary>
        [Input("publicKey", required: true)]
        public string PublicKey { get; set; } = null!;

        /// <summary>
        /// Target name to set or override the value from the deployment.yaml
        /// </summary>
        [Input("targetName", required: true)]
        public string TargetName { get; set; } = null!;

        /// <summary>
        /// The number of threads transformation will use (from 1 to 32). Make sure this value is compatible with your destination type. For example, Snowflake supports only 8 concurrent queries on an X-Small warehouse.
        /// </summary>
        [Input("threads", required: true)]
        public int Threads { get; set; }

        public GetTransformationProjectProjectConfigArgs()
        {
        }
        public static new GetTransformationProjectProjectConfigArgs Empty => new GetTransformationProjectProjectConfigArgs();
    }
}
