// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Footholdtech.Fivetran
{
    public static class GetDestinationCertificates
    {
        public static Task<GetDestinationCertificatesResult> InvokeAsync(GetDestinationCertificatesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDestinationCertificatesResult>("fivetran:index/getDestinationCertificates:getDestinationCertificates", args ?? new GetDestinationCertificatesArgs(), options.WithDefaults());

        public static Output<GetDestinationCertificatesResult> Invoke(GetDestinationCertificatesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDestinationCertificatesResult>("fivetran:index/getDestinationCertificates:getDestinationCertificates", args ?? new GetDestinationCertificatesInvokeArgs(), options.WithDefaults());

        public static Output<GetDestinationCertificatesResult> Invoke(GetDestinationCertificatesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDestinationCertificatesResult>("fivetran:index/getDestinationCertificates:getDestinationCertificates", args ?? new GetDestinationCertificatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDestinationCertificatesArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificates")]
        private List<Inputs.GetDestinationCertificatesCertificateArgs>? _certificates;
        public List<Inputs.GetDestinationCertificatesCertificateArgs> Certificates
        {
            get => _certificates ?? (_certificates = new List<Inputs.GetDestinationCertificatesCertificateArgs>());
            set => _certificates = value;
        }

        /// <summary>
        /// The unique identifier for the resource. Equal to target destination id.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDestinationCertificatesArgs()
        {
        }
        public static new GetDestinationCertificatesArgs Empty => new GetDestinationCertificatesArgs();
    }

    public sealed class GetDestinationCertificatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificates")]
        private InputList<Inputs.GetDestinationCertificatesCertificateInputArgs>? _certificates;
        public InputList<Inputs.GetDestinationCertificatesCertificateInputArgs> Certificates
        {
            get => _certificates ?? (_certificates = new InputList<Inputs.GetDestinationCertificatesCertificateInputArgs>());
            set => _certificates = value;
        }

        /// <summary>
        /// The unique identifier for the resource. Equal to target destination id.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDestinationCertificatesInvokeArgs()
        {
        }
        public static new GetDestinationCertificatesInvokeArgs Empty => new GetDestinationCertificatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDestinationCertificatesResult
    {
        public readonly ImmutableArray<Outputs.GetDestinationCertificatesCertificateResult> Certificates;
        /// <summary>
        /// The unique identifier for the target destination within the Fivetran system.
        /// </summary>
        public readonly string DestinationId;
        /// <summary>
        /// The unique identifier for the resource. Equal to target destination id.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetDestinationCertificatesResult(
            ImmutableArray<Outputs.GetDestinationCertificatesCertificateResult> certificates,

            string destinationId,

            string id)
        {
            Certificates = certificates;
            DestinationId = destinationId;
            Id = id;
        }
    }
}
