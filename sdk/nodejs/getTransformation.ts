// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Returns transformation details if a valid identifier was provided
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const test = fivetran.getTransformation({
 *     id: "id",
 * });
 * ```
 */
export function getTransformation(args: GetTransformationArgs, opts?: pulumi.InvokeOptions): Promise<GetTransformationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getTransformation:getTransformation", {
        "id": args.id,
        "schedule": args.schedule,
        "transformationConfig": args.transformationConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getTransformation.
 */
export interface GetTransformationArgs {
    /**
     * The unique identifier for the Transformation within the Fivetran system.
     */
    id: string;
    schedule?: inputs.GetTransformationSchedule;
    transformationConfig?: inputs.GetTransformationTransformationConfig;
}

/**
 * A collection of values returned by getTransformation.
 */
export interface GetTransformationResult {
    /**
     * The timestamp of when the transformation was created in your account.
     */
    readonly createdAt: string;
    /**
     * The unique identifier for the User within the Fivetran system who created the transformation.
     */
    readonly createdById: string;
    /**
     * The unique identifier for the Transformation within the Fivetran system.
     */
    readonly id: string;
    /**
     * Identifiers of related models.
     */
    readonly outputModelNames: string[];
    /**
     * The field indicating whether the transformation will be set into the paused state. By default, the value is false.
     */
    readonly paused: boolean;
    readonly schedule?: outputs.GetTransformationSchedule;
    /**
     * Status of transformation Project (NOT_READY, READY, ERROR).
     */
    readonly status: string;
    readonly transformationConfig?: outputs.GetTransformationTransformationConfig;
    /**
     * Transformation type. The following values are supported: DBT_CORE, QUICKSTART.
     */
    readonly type: string;
}
/**
 * Returns transformation details if a valid identifier was provided
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const test = fivetran.getTransformation({
 *     id: "id",
 * });
 * ```
 */
export function getTransformationOutput(args: GetTransformationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTransformationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("fivetran:index/getTransformation:getTransformation", {
        "id": args.id,
        "schedule": args.schedule,
        "transformationConfig": args.transformationConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getTransformation.
 */
export interface GetTransformationOutputArgs {
    /**
     * The unique identifier for the Transformation within the Fivetran system.
     */
    id: pulumi.Input<string>;
    schedule?: pulumi.Input<inputs.GetTransformationScheduleArgs>;
    transformationConfig?: pulumi.Input<inputs.GetTransformationTransformationConfigArgs>;
}
