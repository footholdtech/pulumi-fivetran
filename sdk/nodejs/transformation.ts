// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Resource is in ALPHA state.
 *
 * This resource allows you to add, manage and delete transformation projects in your account.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * 1. To import an existing `fivetran_transformation` resource into your Terraform state, you need to get **Transformation ID** via API call `GET https://api.fivetran.com/v1/transformations` to retrieve available projects.
 *
 * 2. Fetch transformation details for particular `transformation-id` using `GET https://api.fivetran.com/v1/transformations/{transformation-id}` to ensure that this is the transformation you want to import.
 *
 * 3. Define an empty resource in your `.tf` configuration:
 *
 * hcl
 *
 * resource "fivetran_transformation" "my_imported_fivetran_transformation" {
 *
 * }
 *
 * 4. Run the `pulumi import` command:
 *
 * ```sh
 * $ pulumi import fivetran:index/transformation:Transformation my_imported_fivetran_transformation {Transformation ID}
 * ```
 *
 * 4. Use the `terraform state show` command to get the values from the state:
 *
 * terraform state show 'fivetran_transformation.my_imported_fivetran_transformation'
 *
 * 5. Copy the values and paste them to your `.tf` configuration.
 */
export class Transformation extends pulumi.CustomResource {
    /**
     * Get an existing Transformation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransformationState, opts?: pulumi.CustomResourceOptions): Transformation {
        return new Transformation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fivetran:index/transformation:Transformation';

    /**
     * Returns true if the given object is an instance of Transformation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Transformation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Transformation.__pulumiType;
    }

    /**
     * The timestamp of when the transformation was created in your account.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The unique identifier for the User within the Fivetran system who created the transformation.
     */
    public /*out*/ readonly createdById!: pulumi.Output<string>;
    /**
     * Identifiers of related models.
     */
    public /*out*/ readonly outputModelNames!: pulumi.Output<string[]>;
    /**
     * The field indicating whether the transformation will be set into the paused state. By default, the value is false.
     */
    public readonly paused!: pulumi.Output<boolean>;
    public readonly schedule!: pulumi.Output<outputs.TransformationSchedule | undefined>;
    /**
     * Status of transformation Project (NOT_READY, READY, ERROR).
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly transformationConfig!: pulumi.Output<outputs.TransformationTransformationConfig | undefined>;
    /**
     * Transformation type. The following values are supported: DBT_CORE, QUICKSTART.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a Transformation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TransformationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransformationArgs | TransformationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransformationState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdById"] = state ? state.createdById : undefined;
            resourceInputs["outputModelNames"] = state ? state.outputModelNames : undefined;
            resourceInputs["paused"] = state ? state.paused : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transformationConfig"] = state ? state.transformationConfig : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as TransformationArgs | undefined;
            resourceInputs["paused"] = args ? args.paused : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["transformationConfig"] = args ? args.transformationConfig : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdById"] = undefined /*out*/;
            resourceInputs["outputModelNames"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Transformation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Transformation resources.
 */
export interface TransformationState {
    /**
     * The timestamp of when the transformation was created in your account.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The unique identifier for the User within the Fivetran system who created the transformation.
     */
    createdById?: pulumi.Input<string>;
    /**
     * Identifiers of related models.
     */
    outputModelNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The field indicating whether the transformation will be set into the paused state. By default, the value is false.
     */
    paused?: pulumi.Input<boolean>;
    schedule?: pulumi.Input<inputs.TransformationSchedule>;
    /**
     * Status of transformation Project (NOT_READY, READY, ERROR).
     */
    status?: pulumi.Input<string>;
    transformationConfig?: pulumi.Input<inputs.TransformationTransformationConfig>;
    /**
     * Transformation type. The following values are supported: DBT_CORE, QUICKSTART.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Transformation resource.
 */
export interface TransformationArgs {
    /**
     * The field indicating whether the transformation will be set into the paused state. By default, the value is false.
     */
    paused?: pulumi.Input<boolean>;
    schedule?: pulumi.Input<inputs.TransformationSchedule>;
    transformationConfig?: pulumi.Input<inputs.TransformationTransformationConfig>;
    /**
     * Transformation type. The following values are supported: DBT_CORE, QUICKSTART.
     */
    type?: pulumi.Input<string>;
}
