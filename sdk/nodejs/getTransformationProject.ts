// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Returns transformation project details if a valid identifier was provided
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const test = fivetran.getTransformationProject({
 *     id: "id",
 * });
 * ```
 */
export function getTransformationProject(args: GetTransformationProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetTransformationProjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getTransformationProject:getTransformationProject", {
        "id": args.id,
        "projectConfig": args.projectConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getTransformationProject.
 */
export interface GetTransformationProjectArgs {
    /**
     * The unique identifier for the transformation Project within the Fivetran system.
     */
    id: string;
    projectConfig?: inputs.GetTransformationProjectProjectConfig;
}

/**
 * A collection of values returned by getTransformationProject.
 */
export interface GetTransformationProjectResult {
    /**
     * The timestamp of the transformation Project creation.
     */
    readonly createdAt: string;
    /**
     * The unique identifier for the User within the Fivetran system who created the dbt Project.
     */
    readonly createdById: string;
    /**
     * List of environment variables defined as key-value pairs in the raw string format using = as a separator. The variable name should have the DBT_ prefix and can contain A-Z, 0-9, dash, underscore, or dot characters. Example: "DBT*VARIABLE=variable*value"
     */
    readonly errors: string[];
    /**
     * The unique identifier for the group within the Fivetran system.
     */
    readonly groupId: string;
    /**
     * The unique identifier for the transformation Project within the Fivetran system.
     */
    readonly id: string;
    readonly projectConfig?: outputs.GetTransformationProjectProjectConfig;
    /**
     * Status of transformation Project (NOT_READY, READY, ERROR).
     */
    readonly status: string;
    /**
     * Transformation project type.
     */
    readonly type: string;
}
/**
 * Returns transformation project details if a valid identifier was provided
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const test = fivetran.getTransformationProject({
 *     id: "id",
 * });
 * ```
 */
export function getTransformationProjectOutput(args: GetTransformationProjectOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTransformationProjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("fivetran:index/getTransformationProject:getTransformationProject", {
        "id": args.id,
        "projectConfig": args.projectConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getTransformationProject.
 */
export interface GetTransformationProjectOutputArgs {
    /**
     * The unique identifier for the transformation Project within the Fivetran system.
     */
    id: pulumi.Input<string>;
    projectConfig?: pulumi.Input<inputs.GetTransformationProjectProjectConfigArgs>;
}
