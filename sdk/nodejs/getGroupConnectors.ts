// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source returns a list of information about all connectors within a group in your Fivetran account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const groupConnectors = fivetran.getGroupConnectors({
 *     id: "anonymous_mystery",
 *     schema: "connector_schema_name",
 * });
 * ```
 */
export function getGroupConnectors(args: GetGroupConnectorsArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupConnectorsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getGroupConnectors:getGroupConnectors", {
        "connectors": args.connectors,
        "id": args.id,
        "schema": args.schema,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroupConnectors.
 */
export interface GetGroupConnectorsArgs {
    connectors?: inputs.GetGroupConnectorsConnector[];
    /**
     * The ID of this resource.
     */
    id: string;
    /**
     * Optional filter. When defined, the data source will only contain information for the connector with the specified schema name.
     */
    schema?: string;
}

/**
 * A collection of values returned by getGroupConnectors.
 */
export interface GetGroupConnectorsResult {
    readonly connectors?: outputs.GetGroupConnectorsConnector[];
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * Optional filter. When defined, the data source will only contain information for the connector with the specified schema name.
     */
    readonly schema?: string;
}
/**
 * This data source returns a list of information about all connectors within a group in your Fivetran account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const groupConnectors = fivetran.getGroupConnectors({
 *     id: "anonymous_mystery",
 *     schema: "connector_schema_name",
 * });
 * ```
 */
export function getGroupConnectorsOutput(args: GetGroupConnectorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupConnectorsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("fivetran:index/getGroupConnectors:getGroupConnectors", {
        "connectors": args.connectors,
        "id": args.id,
        "schema": args.schema,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroupConnectors.
 */
export interface GetGroupConnectorsOutputArgs {
    connectors?: pulumi.Input<pulumi.Input<inputs.GetGroupConnectorsConnectorArgs>[]>;
    /**
     * The ID of this resource.
     */
    id: pulumi.Input<string>;
    /**
     * Optional filter. When defined, the data source will only contain information for the connector with the specified schema name.
     */
    schema?: pulumi.Input<string>;
}
