// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source returns a connector object.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const connector = fivetran.getConnector({
 *     id: "anonymous_mystery",
 * });
 * ```
 */
export function getConnector(args: GetConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getConnector:getConnector", {
        "configs": args.configs,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnector.
 */
export interface GetConnectorArgs {
    configs?: inputs.GetConnectorConfig[];
    id: string;
}

/**
 * A collection of values returned by getConnector.
 */
export interface GetConnectorResult {
    readonly configs: outputs.GetConnectorConfig[];
    readonly connectedBy: string;
    readonly createdAt: string;
    readonly dailySyncTime: string;
    readonly destinationSchemas: outputs.GetConnectorDestinationSchema[];
    readonly failedAt: string;
    readonly groupId: string;
    readonly id: string;
    readonly name: string;
    readonly pauseAfterTrial: string;
    readonly paused: string;
    readonly scheduleType: string;
    readonly service: string;
    readonly serviceVersion: string;
    readonly statuses: outputs.GetConnectorStatus[];
    readonly succeededAt: string;
    readonly syncFrequency: string;
}
/**
 * This data source returns a connector object.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const connector = fivetran.getConnector({
 *     id: "anonymous_mystery",
 * });
 * ```
 */
export function getConnectorOutput(args: GetConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectorResult> {
    return pulumi.output(args).apply((a: any) => getConnector(a, opts))
}

/**
 * A collection of arguments for invoking getConnector.
 */
export interface GetConnectorOutputArgs {
    configs?: pulumi.Input<pulumi.Input<inputs.GetConnectorConfigArgs>[]>;
    id: pulumi.Input<string>;
}
