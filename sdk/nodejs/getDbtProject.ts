// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source returns a dbt Project object.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const project = fivetran.getDbtProject({
 *     id: "project_id",
 * });
 * ```
 */
export function getDbtProject(args: GetDbtProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetDbtProjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getDbtProject:getDbtProject", {
        "id": args.id,
        "projectConfig": args.projectConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbtProject.
 */
export interface GetDbtProjectArgs {
    /**
     * The unique identifier for the dbt Project within the Fivetran system.
     */
    id: string;
    projectConfig?: inputs.GetDbtProjectProjectConfig;
}

/**
 * A collection of values returned by getDbtProject.
 */
export interface GetDbtProjectResult {
    /**
     * The timestamp of the dbt Project creation.
     */
    readonly createdAt: string;
    /**
     * The unique identifier for the User within the Fivetran system who created the dbt Project.
     */
    readonly createdById: string;
    /**
     * The version of dbt that should run the project. We support the following versions: 0.18.0 - 0.18.2, 0.19.0 - 0.19.2, 0.20.0 - 0.20.2, 0.21.0 - 0.21.1, 1.0.0, 1.0.1, 1.0.3 - 1.0.9, 1.1.0 - 1.1.3, 1.2.0 - 1.2.4, 1.3.0 - 1.3.2, 1.4.1.
     */
    readonly dbtVersion: string;
    /**
     * Default schema in destination. This production schema will contain your transformed data.
     */
    readonly defaultSchema: string;
    /**
     * Should resource wait for project to finish initialization. Default value: true.
     */
    readonly ensureReadiness: boolean;
    /**
     * List of environment variables defined as key-value pairs in the raw string format using = as a separator. The variable name should have the DBT_ prefix and can contain A-Z, 0-9, dash, underscore, or dot characters. Example: "DBT*VARIABLE=variable*value"
     */
    readonly environmentVars: string[];
    /**
     * The unique identifier for the group within the Fivetran system.
     */
    readonly groupId: string;
    /**
     * The unique identifier for the dbt Project within the Fivetran system.
     */
    readonly id: string;
    readonly models: outputs.GetDbtProjectModel[];
    readonly projectConfig?: outputs.GetDbtProjectProjectConfig;
    /**
     * Public key to grant Fivetran SSH access to git repository.
     */
    readonly publicKey: string;
    /**
     * Status of dbt Project (NOT_READY, READY, ERROR).
     */
    readonly status: string;
    /**
     * Target name to set or override the value from the deployment.yaml
     */
    readonly targetName: string;
    /**
     * The number of threads dbt will use (from 1 to 32). Make sure this value is compatible with your destination type. For example, Snowflake supports only 8 concurrent queries on an X-Small warehouse.
     */
    readonly threads: number;
    /**
     * Type of dbt Project. Currently only `GIT` supported. Empty value will be considered as default (GIT).
     */
    readonly type: string;
}
/**
 * This data source returns a dbt Project object.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fivetran from "@pulumi/fivetran";
 *
 * const project = fivetran.getDbtProject({
 *     id: "project_id",
 * });
 * ```
 */
export function getDbtProjectOutput(args: GetDbtProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbtProjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("fivetran:index/getDbtProject:getDbtProject", {
        "id": args.id,
        "projectConfig": args.projectConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbtProject.
 */
export interface GetDbtProjectOutputArgs {
    /**
     * The unique identifier for the dbt Project within the Fivetran system.
     */
    id: pulumi.Input<string>;
    projectConfig?: pulumi.Input<inputs.GetDbtProjectProjectConfigArgs>;
}
