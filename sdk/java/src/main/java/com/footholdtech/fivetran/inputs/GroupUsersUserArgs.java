// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupUsersUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupUsersUserArgs Empty = new GroupUsersUserArgs();

    /**
     * The email address that the user has associated with their user profile.
     * 
     */
    @Import(name="email", required=true)
    private Output<String> email;

    /**
     * @return The email address that the user has associated with their user profile.
     * 
     */
    public Output<String> email() {
        return this.email;
    }

    /**
     * The unique identifier for the user within the account.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The unique identifier for the user within the account.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The group role that you would like to assign this new user to. Supported group roles: ‘Destination Administrator‘, ‘Destination Reviewer‘, ‘Destination Analyst‘, ‘Connector Creator‘, or a custom destination role
     * 
     */
    @Import(name="role", required=true)
    private Output<String> role;

    /**
     * @return The group role that you would like to assign this new user to. Supported group roles: ‘Destination Administrator‘, ‘Destination Reviewer‘, ‘Destination Analyst‘, ‘Connector Creator‘, or a custom destination role
     * 
     */
    public Output<String> role() {
        return this.role;
    }

    private GroupUsersUserArgs() {}

    private GroupUsersUserArgs(GroupUsersUserArgs $) {
        this.email = $.email;
        this.id = $.id;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupUsersUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupUsersUserArgs $;

        public Builder() {
            $ = new GroupUsersUserArgs();
        }

        public Builder(GroupUsersUserArgs defaults) {
            $ = new GroupUsersUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param email The email address that the user has associated with their user profile.
         * 
         * @return builder
         * 
         */
        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The email address that the user has associated with their user profile.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param id The unique identifier for the user within the account.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for the user within the account.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param role The group role that you would like to assign this new user to. Supported group roles: ‘Destination Administrator‘, ‘Destination Reviewer‘, ‘Destination Analyst‘, ‘Connector Creator‘, or a custom destination role
         * 
         * @return builder
         * 
         */
        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The group role that you would like to assign this new user to. Supported group roles: ‘Destination Administrator‘, ‘Destination Reviewer‘, ‘Destination Analyst‘, ‘Connector Creator‘, or a custom destination role
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        public GroupUsersUserArgs build() {
            $.email = Objects.requireNonNull($.email, "expected parameter 'email' to be non-null");
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            return $;
        }
    }

}
