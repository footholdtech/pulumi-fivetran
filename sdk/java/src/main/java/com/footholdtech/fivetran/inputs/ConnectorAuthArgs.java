// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.footholdtech.fivetran.inputs.ConnectorAuthClientAccessArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorAuthArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorAuthArgs Empty = new ConnectorAuthArgs();

    @Import(name="accessToken")
    private @Nullable Output<String> accessToken;

    public Optional<Output<String>> accessToken() {
        return Optional.ofNullable(this.accessToken);
    }

    @Import(name="awsAccessKey")
    private @Nullable Output<String> awsAccessKey;

    public Optional<Output<String>> awsAccessKey() {
        return Optional.ofNullable(this.awsAccessKey);
    }

    @Import(name="awsSecretKey")
    private @Nullable Output<String> awsSecretKey;

    public Optional<Output<String>> awsSecretKey() {
        return Optional.ofNullable(this.awsSecretKey);
    }

    @Import(name="clientAccess")
    private @Nullable Output<ConnectorAuthClientAccessArgs> clientAccess;

    public Optional<Output<ConnectorAuthClientAccessArgs>> clientAccess() {
        return Optional.ofNullable(this.clientAccess);
    }

    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    @Import(name="consumerKey")
    private @Nullable Output<String> consumerKey;

    public Optional<Output<String>> consumerKey() {
        return Optional.ofNullable(this.consumerKey);
    }

    @Import(name="consumerSecret")
    private @Nullable Output<String> consumerSecret;

    public Optional<Output<String>> consumerSecret() {
        return Optional.ofNullable(this.consumerSecret);
    }

    @Import(name="keyId")
    private @Nullable Output<String> keyId;

    public Optional<Output<String>> keyId() {
        return Optional.ofNullable(this.keyId);
    }

    @Import(name="oauthToken")
    private @Nullable Output<String> oauthToken;

    public Optional<Output<String>> oauthToken() {
        return Optional.ofNullable(this.oauthToken);
    }

    @Import(name="oauthTokenSecret")
    private @Nullable Output<String> oauthTokenSecret;

    public Optional<Output<String>> oauthTokenSecret() {
        return Optional.ofNullable(this.oauthTokenSecret);
    }

    @Import(name="previousRefreshToken")
    private @Nullable Output<String> previousRefreshToken;

    public Optional<Output<String>> previousRefreshToken() {
        return Optional.ofNullable(this.previousRefreshToken);
    }

    @Import(name="realmId")
    private @Nullable Output<String> realmId;

    public Optional<Output<String>> realmId() {
        return Optional.ofNullable(this.realmId);
    }

    @Import(name="refreshToken")
    private @Nullable Output<String> refreshToken;

    public Optional<Output<String>> refreshToken() {
        return Optional.ofNullable(this.refreshToken);
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="teamId")
    private @Nullable Output<String> teamId;

    public Optional<Output<String>> teamId() {
        return Optional.ofNullable(this.teamId);
    }

    @Import(name="userAccessToken")
    private @Nullable Output<String> userAccessToken;

    public Optional<Output<String>> userAccessToken() {
        return Optional.ofNullable(this.userAccessToken);
    }

    private ConnectorAuthArgs() {}

    private ConnectorAuthArgs(ConnectorAuthArgs $) {
        this.accessToken = $.accessToken;
        this.awsAccessKey = $.awsAccessKey;
        this.awsSecretKey = $.awsSecretKey;
        this.clientAccess = $.clientAccess;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.consumerKey = $.consumerKey;
        this.consumerSecret = $.consumerSecret;
        this.keyId = $.keyId;
        this.oauthToken = $.oauthToken;
        this.oauthTokenSecret = $.oauthTokenSecret;
        this.previousRefreshToken = $.previousRefreshToken;
        this.realmId = $.realmId;
        this.refreshToken = $.refreshToken;
        this.roleArn = $.roleArn;
        this.teamId = $.teamId;
        this.userAccessToken = $.userAccessToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorAuthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorAuthArgs $;

        public Builder() {
            $ = new ConnectorAuthArgs();
        }

        public Builder(ConnectorAuthArgs defaults) {
            $ = new ConnectorAuthArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessToken(@Nullable Output<String> accessToken) {
            $.accessToken = accessToken;
            return this;
        }

        public Builder accessToken(String accessToken) {
            return accessToken(Output.of(accessToken));
        }

        public Builder awsAccessKey(@Nullable Output<String> awsAccessKey) {
            $.awsAccessKey = awsAccessKey;
            return this;
        }

        public Builder awsAccessKey(String awsAccessKey) {
            return awsAccessKey(Output.of(awsAccessKey));
        }

        public Builder awsSecretKey(@Nullable Output<String> awsSecretKey) {
            $.awsSecretKey = awsSecretKey;
            return this;
        }

        public Builder awsSecretKey(String awsSecretKey) {
            return awsSecretKey(Output.of(awsSecretKey));
        }

        public Builder clientAccess(@Nullable Output<ConnectorAuthClientAccessArgs> clientAccess) {
            $.clientAccess = clientAccess;
            return this;
        }

        public Builder clientAccess(ConnectorAuthClientAccessArgs clientAccess) {
            return clientAccess(Output.of(clientAccess));
        }

        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public Builder consumerKey(@Nullable Output<String> consumerKey) {
            $.consumerKey = consumerKey;
            return this;
        }

        public Builder consumerKey(String consumerKey) {
            return consumerKey(Output.of(consumerKey));
        }

        public Builder consumerSecret(@Nullable Output<String> consumerSecret) {
            $.consumerSecret = consumerSecret;
            return this;
        }

        public Builder consumerSecret(String consumerSecret) {
            return consumerSecret(Output.of(consumerSecret));
        }

        public Builder keyId(@Nullable Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        public Builder oauthToken(@Nullable Output<String> oauthToken) {
            $.oauthToken = oauthToken;
            return this;
        }

        public Builder oauthToken(String oauthToken) {
            return oauthToken(Output.of(oauthToken));
        }

        public Builder oauthTokenSecret(@Nullable Output<String> oauthTokenSecret) {
            $.oauthTokenSecret = oauthTokenSecret;
            return this;
        }

        public Builder oauthTokenSecret(String oauthTokenSecret) {
            return oauthTokenSecret(Output.of(oauthTokenSecret));
        }

        public Builder previousRefreshToken(@Nullable Output<String> previousRefreshToken) {
            $.previousRefreshToken = previousRefreshToken;
            return this;
        }

        public Builder previousRefreshToken(String previousRefreshToken) {
            return previousRefreshToken(Output.of(previousRefreshToken));
        }

        public Builder realmId(@Nullable Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        public Builder refreshToken(@Nullable Output<String> refreshToken) {
            $.refreshToken = refreshToken;
            return this;
        }

        public Builder refreshToken(String refreshToken) {
            return refreshToken(Output.of(refreshToken));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder teamId(@Nullable Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        public Builder userAccessToken(@Nullable Output<String> userAccessToken) {
            $.userAccessToken = userAccessToken;
            return this;
        }

        public Builder userAccessToken(String userAccessToken) {
            return userAccessToken(Output.of(userAccessToken));
        }

        public ConnectorAuthArgs build() {
            return $;
        }
    }

}
