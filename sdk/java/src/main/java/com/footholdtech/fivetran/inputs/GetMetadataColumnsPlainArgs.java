// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.footholdtech.fivetran.inputs.GetMetadataColumnsMetadataColumn;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMetadataColumnsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMetadataColumnsPlainArgs Empty = new GetMetadataColumnsPlainArgs();

    /**
     * The unique column identifier
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The unique column identifier
     * 
     */
    public String id() {
        return this.id;
    }

    @Import(name="metadataColumns")
    private @Nullable List<GetMetadataColumnsMetadataColumn> metadataColumns;

    public Optional<List<GetMetadataColumnsMetadataColumn>> metadataColumns() {
        return Optional.ofNullable(this.metadataColumns);
    }

    private GetMetadataColumnsPlainArgs() {}

    private GetMetadataColumnsPlainArgs(GetMetadataColumnsPlainArgs $) {
        this.id = $.id;
        this.metadataColumns = $.metadataColumns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMetadataColumnsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMetadataColumnsPlainArgs $;

        public Builder() {
            $ = new GetMetadataColumnsPlainArgs();
        }

        public Builder(GetMetadataColumnsPlainArgs defaults) {
            $ = new GetMetadataColumnsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The unique column identifier
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder metadataColumns(@Nullable List<GetMetadataColumnsMetadataColumn> metadataColumns) {
            $.metadataColumns = metadataColumns;
            return this;
        }

        public Builder metadataColumns(GetMetadataColumnsMetadataColumn... metadataColumns) {
            return metadataColumns(List.of(metadataColumns));
        }

        public GetMetadataColumnsPlainArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
