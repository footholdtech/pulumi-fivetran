// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorConfigProjectCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorConfigProjectCredentialArgs Empty = new ConnectorConfigProjectCredentialArgs();

    @Import(name="apiKey")
    private @Nullable Output<String> apiKey;

    public Optional<Output<String>> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="secretKey")
    private @Nullable Output<String> secretKey;

    public Optional<Output<String>> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    private ConnectorConfigProjectCredentialArgs() {}

    private ConnectorConfigProjectCredentialArgs(ConnectorConfigProjectCredentialArgs $) {
        this.apiKey = $.apiKey;
        this.project = $.project;
        this.secretKey = $.secretKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorConfigProjectCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorConfigProjectCredentialArgs $;

        public Builder() {
            $ = new ConnectorConfigProjectCredentialArgs();
        }

        public Builder(ConnectorConfigProjectCredentialArgs defaults) {
            $ = new ConnectorConfigProjectCredentialArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiKey(@Nullable Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder secretKey(@Nullable Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        public ConnectorConfigProjectCredentialArgs build() {
            return $;
        }
    }

}
