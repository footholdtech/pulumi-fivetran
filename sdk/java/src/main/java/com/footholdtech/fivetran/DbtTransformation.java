// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran;

import com.footholdtech.fivetran.DbtTransformationArgs;
import com.footholdtech.fivetran.Utilities;
import com.footholdtech.fivetran.inputs.DbtTransformationState;
import com.footholdtech.fivetran.outputs.DbtTransformationSchedule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Resource is in ALPHA state.
 * 
 * This resource allows you to add, manage and delete dbt Transformations for existing dbt Model.
 * To retrieve available dbt Models use this [Retrieve dbt Project models](https://fivetran.com/docs/rest-api/dbt-transformation-management#retrievedbtprojectmodels) endpoint.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.fivetran.DbtTransformation;
 * import com.pulumi.fivetran.DbtTransformationArgs;
 * import com.pulumi.fivetran.inputs.DbtTransformationScheduleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var transformation = new DbtTransformation(&#34;transformation&#34;, DbtTransformationArgs.builder()        
 *             .dbtModelName(&#34;dbt_model_name&#34;)
 *             .dbtProjectId(&#34;dbt_project_id&#34;)
 *             .paused(&#34;false&#34;)
 *             .runTests(&#34;false&#34;)
 *             .schedule(DbtTransformationScheduleArgs.builder()
 *                 .daysOfWeeks(                
 *                     &#34;MONDAY&#34;,
 *                     &#34;SATURDAY&#34;)
 *                 .scheduleType(&#34;TIME_OF_DAY&#34;)
 *                 .timeOfDay(&#34;12:00&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * 1. To import an existing `fivetran_dbt_transformation` resource into your Terraform state, you need to get **Transformation ID** on the transformation page in your Fivetran dashboard. 2. Define an empty resource in your `.tf` configurationhcl resource &#34;fivetran_dbt_transformation&#34; &#34;my_imported_fivetran_dbt_transformation&#34; { }
 * 
 * ```sh
 *  $ pulumi import fivetran:index/dbtTransformation:DbtTransformation
 * 
 * Run the `terraform import` command
 * ```
 * 
 * ```sh
 *  $ pulumi import fivetran:index/dbtTransformation:DbtTransformation my_imported_fivetran_dbt_transformation {Transformation ID}
 * ```
 * 
 *  4. Use the `terraform state show` command to get the values from the stateterraform state show &#39;fivetran_dbt_transformation.my_imported_fivetran_dbt_transformation&#39; 5. Copy the values and paste them to your `.tf` configuration.
 * 
 */
@ResourceType(type="fivetran:index/dbtTransformation:DbtTransformation")
public class DbtTransformation extends com.pulumi.resources.CustomResource {
    /**
     * Identifiers of related connectors.
     * 
     */
    @Export(name="connectorIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> connectorIds;

    /**
     * @return Identifiers of related connectors.
     * 
     */
    public Output<List<String>> connectorIds() {
        return this.connectorIds;
    }
    /**
     * The timestamp of the dbt Transformation creation.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The timestamp of the dbt Transformation creation.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The unique identifier for the dbt Model within the Fivetran system.
     * 
     */
    @Export(name="dbtModelId", refs={String.class}, tree="[0]")
    private Output<String> dbtModelId;

    /**
     * @return The unique identifier for the dbt Model within the Fivetran system.
     * 
     */
    public Output<String> dbtModelId() {
        return this.dbtModelId;
    }
    /**
     * Target dbt Model name.
     * 
     */
    @Export(name="dbtModelName", refs={String.class}, tree="[0]")
    private Output<String> dbtModelName;

    /**
     * @return Target dbt Model name.
     * 
     */
    public Output<String> dbtModelName() {
        return this.dbtModelName;
    }
    /**
     * The unique identifier for the dbt Project within the Fivetran system.
     * 
     */
    @Export(name="dbtProjectId", refs={String.class}, tree="[0]")
    private Output<String> dbtProjectId;

    /**
     * @return The unique identifier for the dbt Project within the Fivetran system.
     * 
     */
    public Output<String> dbtProjectId() {
        return this.dbtProjectId;
    }
    /**
     * Identifiers of related models.
     * 
     */
    @Export(name="modelIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> modelIds;

    /**
     * @return Identifiers of related models.
     * 
     */
    public Output<List<String>> modelIds() {
        return this.modelIds;
    }
    /**
     * The dbt Model name.
     * 
     */
    @Export(name="outputModelName", refs={String.class}, tree="[0]")
    private Output<String> outputModelName;

    /**
     * @return The dbt Model name.
     * 
     */
    public Output<String> outputModelName() {
        return this.outputModelName;
    }
    /**
     * The field indicating whether the transformation will be created in paused state. By default, the value is false.
     * 
     */
    @Export(name="paused", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> paused;

    /**
     * @return The field indicating whether the transformation will be created in paused state. By default, the value is false.
     * 
     */
    public Output<Boolean> paused() {
        return this.paused;
    }
    /**
     * The field indicating whether the tests have been configured for dbt Transformation. By default, the value is false.
     * 
     */
    @Export(name="runTests", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> runTests;

    /**
     * @return The field indicating whether the tests have been configured for dbt Transformation. By default, the value is false.
     * 
     */
    public Output<Boolean> runTests() {
        return this.runTests;
    }
    /**
     * dbt Transformation schedule parameters.
     * 
     */
    @Export(name="schedule", refs={DbtTransformationSchedule.class}, tree="[0]")
    private Output<DbtTransformationSchedule> schedule;

    /**
     * @return dbt Transformation schedule parameters.
     * 
     */
    public Output<DbtTransformationSchedule> schedule() {
        return this.schedule;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DbtTransformation(String name) {
        this(name, DbtTransformationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DbtTransformation(String name, DbtTransformationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DbtTransformation(String name, DbtTransformationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fivetran:index/dbtTransformation:DbtTransformation", name, args == null ? DbtTransformationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DbtTransformation(String name, Output<String> id, @Nullable DbtTransformationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fivetran:index/dbtTransformation:DbtTransformation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DbtTransformation get(String name, Output<String> id, @Nullable DbtTransformationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DbtTransformation(name, id, state, options);
    }
}
