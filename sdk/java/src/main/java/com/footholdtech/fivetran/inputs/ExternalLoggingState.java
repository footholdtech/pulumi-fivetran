// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.footholdtech.fivetran.inputs.ExternalLoggingConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExternalLoggingState extends com.pulumi.resources.ResourceArgs {

    public static final ExternalLoggingState Empty = new ExternalLoggingState();

    @Import(name="config")
    private @Nullable Output<ExternalLoggingConfigArgs> config;

    public Optional<Output<ExternalLoggingConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The boolean value specifying whether the log service is enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return The boolean value specifying whether the log service is enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The unique identifier for the log service within the Fivetran system.
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    /**
     * @return The unique identifier for the log service within the Fivetran system.
     * 
     */
    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * Specifies whether the setup tests should be run automatically. The default value is TRUE.
     * 
     */
    @Import(name="runSetupTests")
    private @Nullable Output<Boolean> runSetupTests;

    /**
     * @return Specifies whether the setup tests should be run automatically. The default value is TRUE.
     * 
     */
    public Optional<Output<Boolean>> runSetupTests() {
        return Optional.ofNullable(this.runSetupTests);
    }

    /**
     * The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    /**
     * @return The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
     * 
     */
    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    private ExternalLoggingState() {}

    private ExternalLoggingState(ExternalLoggingState $) {
        this.config = $.config;
        this.enabled = $.enabled;
        this.groupId = $.groupId;
        this.runSetupTests = $.runSetupTests;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalLoggingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalLoggingState $;

        public Builder() {
            $ = new ExternalLoggingState();
        }

        public Builder(ExternalLoggingState defaults) {
            $ = new ExternalLoggingState(Objects.requireNonNull(defaults));
        }

        public Builder config(@Nullable Output<ExternalLoggingConfigArgs> config) {
            $.config = config;
            return this;
        }

        public Builder config(ExternalLoggingConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param enabled The boolean value specifying whether the log service is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled The boolean value specifying whether the log service is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param groupId The unique identifier for the log service within the Fivetran system.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The unique identifier for the log service within the Fivetran system.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param runSetupTests Specifies whether the setup tests should be run automatically. The default value is TRUE.
         * 
         * @return builder
         * 
         */
        public Builder runSetupTests(@Nullable Output<Boolean> runSetupTests) {
            $.runSetupTests = runSetupTests;
            return this;
        }

        /**
         * @param runSetupTests Specifies whether the setup tests should be run automatically. The default value is TRUE.
         * 
         * @return builder
         * 
         */
        public Builder runSetupTests(Boolean runSetupTests) {
            return runSetupTests(Output.of(runSetupTests));
        }

        /**
         * @param service The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        public ExternalLoggingState build() {
            return $;
        }
    }

}
