// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetConnectorConfigCustomTable extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectorConfigCustomTable Empty = new GetConnectorConfigCustomTable();

    @Import(name="actionBreakdowns", required=true)
    private List<String> actionBreakdowns;

    public List<String> actionBreakdowns() {
        return this.actionBreakdowns;
    }

    @Import(name="actionReportTime", required=true)
    private String actionReportTime;

    public String actionReportTime() {
        return this.actionReportTime;
    }

    @Import(name="aggregation", required=true)
    private String aggregation;

    public String aggregation() {
        return this.aggregation;
    }

    @Import(name="breakdowns", required=true)
    private List<String> breakdowns;

    public List<String> breakdowns() {
        return this.breakdowns;
    }

    @Import(name="clickAttributionWindow", required=true)
    private String clickAttributionWindow;

    public String clickAttributionWindow() {
        return this.clickAttributionWindow;
    }

    @Import(name="configType", required=true)
    private String configType;

    public String configType() {
        return this.configType;
    }

    @Import(name="fields", required=true)
    private List<String> fields;

    public List<String> fields() {
        return this.fields;
    }

    @Import(name="level", required=true)
    private String level;

    public String level() {
        return this.level;
    }

    @Import(name="prebuiltReportName", required=true)
    private String prebuiltReportName;

    public String prebuiltReportName() {
        return this.prebuiltReportName;
    }

    @Import(name="tableName", required=true)
    private String tableName;

    public String tableName() {
        return this.tableName;
    }

    @Import(name="useUnifiedAttributionSetting", required=true)
    private String useUnifiedAttributionSetting;

    public String useUnifiedAttributionSetting() {
        return this.useUnifiedAttributionSetting;
    }

    @Import(name="viewAttributionWindow", required=true)
    private String viewAttributionWindow;

    public String viewAttributionWindow() {
        return this.viewAttributionWindow;
    }

    private GetConnectorConfigCustomTable() {}

    private GetConnectorConfigCustomTable(GetConnectorConfigCustomTable $) {
        this.actionBreakdowns = $.actionBreakdowns;
        this.actionReportTime = $.actionReportTime;
        this.aggregation = $.aggregation;
        this.breakdowns = $.breakdowns;
        this.clickAttributionWindow = $.clickAttributionWindow;
        this.configType = $.configType;
        this.fields = $.fields;
        this.level = $.level;
        this.prebuiltReportName = $.prebuiltReportName;
        this.tableName = $.tableName;
        this.useUnifiedAttributionSetting = $.useUnifiedAttributionSetting;
        this.viewAttributionWindow = $.viewAttributionWindow;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectorConfigCustomTable defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectorConfigCustomTable $;

        public Builder() {
            $ = new GetConnectorConfigCustomTable();
        }

        public Builder(GetConnectorConfigCustomTable defaults) {
            $ = new GetConnectorConfigCustomTable(Objects.requireNonNull(defaults));
        }

        public Builder actionBreakdowns(List<String> actionBreakdowns) {
            $.actionBreakdowns = actionBreakdowns;
            return this;
        }

        public Builder actionBreakdowns(String... actionBreakdowns) {
            return actionBreakdowns(List.of(actionBreakdowns));
        }

        public Builder actionReportTime(String actionReportTime) {
            $.actionReportTime = actionReportTime;
            return this;
        }

        public Builder aggregation(String aggregation) {
            $.aggregation = aggregation;
            return this;
        }

        public Builder breakdowns(List<String> breakdowns) {
            $.breakdowns = breakdowns;
            return this;
        }

        public Builder breakdowns(String... breakdowns) {
            return breakdowns(List.of(breakdowns));
        }

        public Builder clickAttributionWindow(String clickAttributionWindow) {
            $.clickAttributionWindow = clickAttributionWindow;
            return this;
        }

        public Builder configType(String configType) {
            $.configType = configType;
            return this;
        }

        public Builder fields(List<String> fields) {
            $.fields = fields;
            return this;
        }

        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }

        public Builder level(String level) {
            $.level = level;
            return this;
        }

        public Builder prebuiltReportName(String prebuiltReportName) {
            $.prebuiltReportName = prebuiltReportName;
            return this;
        }

        public Builder tableName(String tableName) {
            $.tableName = tableName;
            return this;
        }

        public Builder useUnifiedAttributionSetting(String useUnifiedAttributionSetting) {
            $.useUnifiedAttributionSetting = useUnifiedAttributionSetting;
            return this;
        }

        public Builder viewAttributionWindow(String viewAttributionWindow) {
            $.viewAttributionWindow = viewAttributionWindow;
            return this;
        }

        public GetConnectorConfigCustomTable build() {
            $.actionBreakdowns = Objects.requireNonNull($.actionBreakdowns, "expected parameter 'actionBreakdowns' to be non-null");
            $.actionReportTime = Objects.requireNonNull($.actionReportTime, "expected parameter 'actionReportTime' to be non-null");
            $.aggregation = Objects.requireNonNull($.aggregation, "expected parameter 'aggregation' to be non-null");
            $.breakdowns = Objects.requireNonNull($.breakdowns, "expected parameter 'breakdowns' to be non-null");
            $.clickAttributionWindow = Objects.requireNonNull($.clickAttributionWindow, "expected parameter 'clickAttributionWindow' to be non-null");
            $.configType = Objects.requireNonNull($.configType, "expected parameter 'configType' to be non-null");
            $.fields = Objects.requireNonNull($.fields, "expected parameter 'fields' to be non-null");
            $.level = Objects.requireNonNull($.level, "expected parameter 'level' to be non-null");
            $.prebuiltReportName = Objects.requireNonNull($.prebuiltReportName, "expected parameter 'prebuiltReportName' to be non-null");
            $.tableName = Objects.requireNonNull($.tableName, "expected parameter 'tableName' to be non-null");
            $.useUnifiedAttributionSetting = Objects.requireNonNull($.useUnifiedAttributionSetting, "expected parameter 'useUnifiedAttributionSetting' to be non-null");
            $.viewAttributionWindow = Objects.requireNonNull($.viewAttributionWindow, "expected parameter 'viewAttributionWindow' to be non-null");
            return $;
        }
    }

}
