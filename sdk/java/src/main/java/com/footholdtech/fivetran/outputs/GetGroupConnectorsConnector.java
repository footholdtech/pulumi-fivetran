// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.outputs;

import com.footholdtech.fivetran.outputs.GetGroupConnectorsConnectorStatus;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGroupConnectorsConnector {
    /**
     * @return The unique identifier of the user who has created the connector in your account
     * 
     */
    private String connectedBy;
    /**
     * @return The timestamp of the time the connector was created in your account
     * 
     */
    private String createdAt;
    /**
     * @return The optional parameter that defines the sync start time when the sync frequency is already set or being set by the current request to 1440. It can be specified in one hour increments starting from 00:00 to 23:00. If not specified, we will use [the baseline sync start time](https://fivetran.com/docs/getting-started/syncoverview#syncfrequencyandscheduling). This parameter has no effect on the [0 to 60 minutes offset](https://fivetran.com/docs/getting-started/syncoverview#syncstarttimesandoffsets) used to determine the actual sync start time
     * 
     */
    private String dailySyncTime;
    /**
     * @return The timestamp of the time the connector sync failed last time
     * 
     */
    private String failedAt;
    /**
     * @return The unique identifier for the Group within the Fivetran system.
     * 
     */
    private String groupId;
    /**
     * @return The unique identifier for the Connector within the Fivetran system.
     * 
     */
    private String id;
    /**
     * @return The connector schedule configuration type. Supported values: auto, manual
     * 
     */
    private String scheduleType;
    /**
     * @return The name used both as the connector&#39;s name within the Fivetran system and as the source schema&#39;s name within your destination
     * 
     */
    private String schema;
    /**
     * @return The connector type name within the Fivetran system
     * 
     */
    private String service;
    /**
     * @return The connector type version within the Fivetran system
     * 
     */
    private Integer serviceVersion;
    private List<GetGroupConnectorsConnectorStatus> statuses;
    /**
     * @return The timestamp of the time the connector sync succeeded last time
     * 
     */
    private String succeededAt;
    /**
     * @return The connector sync frequency in minutes
     * 
     */
    private Integer syncFrequency;

    private GetGroupConnectorsConnector() {}
    /**
     * @return The unique identifier of the user who has created the connector in your account
     * 
     */
    public String connectedBy() {
        return this.connectedBy;
    }
    /**
     * @return The timestamp of the time the connector was created in your account
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The optional parameter that defines the sync start time when the sync frequency is already set or being set by the current request to 1440. It can be specified in one hour increments starting from 00:00 to 23:00. If not specified, we will use [the baseline sync start time](https://fivetran.com/docs/getting-started/syncoverview#syncfrequencyandscheduling). This parameter has no effect on the [0 to 60 minutes offset](https://fivetran.com/docs/getting-started/syncoverview#syncstarttimesandoffsets) used to determine the actual sync start time
     * 
     */
    public String dailySyncTime() {
        return this.dailySyncTime;
    }
    /**
     * @return The timestamp of the time the connector sync failed last time
     * 
     */
    public String failedAt() {
        return this.failedAt;
    }
    /**
     * @return The unique identifier for the Group within the Fivetran system.
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The unique identifier for the Connector within the Fivetran system.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The connector schedule configuration type. Supported values: auto, manual
     * 
     */
    public String scheduleType() {
        return this.scheduleType;
    }
    /**
     * @return The name used both as the connector&#39;s name within the Fivetran system and as the source schema&#39;s name within your destination
     * 
     */
    public String schema() {
        return this.schema;
    }
    /**
     * @return The connector type name within the Fivetran system
     * 
     */
    public String service() {
        return this.service;
    }
    /**
     * @return The connector type version within the Fivetran system
     * 
     */
    public Integer serviceVersion() {
        return this.serviceVersion;
    }
    public List<GetGroupConnectorsConnectorStatus> statuses() {
        return this.statuses;
    }
    /**
     * @return The timestamp of the time the connector sync succeeded last time
     * 
     */
    public String succeededAt() {
        return this.succeededAt;
    }
    /**
     * @return The connector sync frequency in minutes
     * 
     */
    public Integer syncFrequency() {
        return this.syncFrequency;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupConnectorsConnector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectedBy;
        private String createdAt;
        private String dailySyncTime;
        private String failedAt;
        private String groupId;
        private String id;
        private String scheduleType;
        private String schema;
        private String service;
        private Integer serviceVersion;
        private List<GetGroupConnectorsConnectorStatus> statuses;
        private String succeededAt;
        private Integer syncFrequency;
        public Builder() {}
        public Builder(GetGroupConnectorsConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectedBy = defaults.connectedBy;
    	      this.createdAt = defaults.createdAt;
    	      this.dailySyncTime = defaults.dailySyncTime;
    	      this.failedAt = defaults.failedAt;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.scheduleType = defaults.scheduleType;
    	      this.schema = defaults.schema;
    	      this.service = defaults.service;
    	      this.serviceVersion = defaults.serviceVersion;
    	      this.statuses = defaults.statuses;
    	      this.succeededAt = defaults.succeededAt;
    	      this.syncFrequency = defaults.syncFrequency;
        }

        @CustomType.Setter
        public Builder connectedBy(String connectedBy) {
            this.connectedBy = Objects.requireNonNull(connectedBy);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder dailySyncTime(String dailySyncTime) {
            this.dailySyncTime = Objects.requireNonNull(dailySyncTime);
            return this;
        }
        @CustomType.Setter
        public Builder failedAt(String failedAt) {
            this.failedAt = Objects.requireNonNull(failedAt);
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            this.groupId = Objects.requireNonNull(groupId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder scheduleType(String scheduleType) {
            this.scheduleType = Objects.requireNonNull(scheduleType);
            return this;
        }
        @CustomType.Setter
        public Builder schema(String schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }
        @CustomType.Setter
        public Builder service(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }
        @CustomType.Setter
        public Builder serviceVersion(Integer serviceVersion) {
            this.serviceVersion = Objects.requireNonNull(serviceVersion);
            return this;
        }
        @CustomType.Setter
        public Builder statuses(List<GetGroupConnectorsConnectorStatus> statuses) {
            this.statuses = Objects.requireNonNull(statuses);
            return this;
        }
        public Builder statuses(GetGroupConnectorsConnectorStatus... statuses) {
            return statuses(List.of(statuses));
        }
        @CustomType.Setter
        public Builder succeededAt(String succeededAt) {
            this.succeededAt = Objects.requireNonNull(succeededAt);
            return this;
        }
        @CustomType.Setter
        public Builder syncFrequency(Integer syncFrequency) {
            this.syncFrequency = Objects.requireNonNull(syncFrequency);
            return this;
        }
        public GetGroupConnectorsConnector build() {
            final var o = new GetGroupConnectorsConnector();
            o.connectedBy = connectedBy;
            o.createdAt = createdAt;
            o.dailySyncTime = dailySyncTime;
            o.failedAt = failedAt;
            o.groupId = groupId;
            o.id = id;
            o.scheduleType = scheduleType;
            o.schema = schema;
            o.service = service;
            o.serviceVersion = serviceVersion;
            o.statuses = statuses;
            o.succeededAt = succeededAt;
            o.syncFrequency = syncFrequency;
            return o;
        }
    }
}
