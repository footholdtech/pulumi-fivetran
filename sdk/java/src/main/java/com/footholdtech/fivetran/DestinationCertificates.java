// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran;

import com.footholdtech.fivetran.DestinationCertificatesArgs;
import com.footholdtech.fivetran.Utilities;
import com.footholdtech.fivetran.inputs.DestinationCertificatesState;
import com.footholdtech.fivetran.outputs.DestinationCertificatesCertificate;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="fivetran:index/destinationCertificates:DestinationCertificates")
public class DestinationCertificates extends com.pulumi.resources.CustomResource {
    @Export(name="certificates", refs={List.class,DestinationCertificatesCertificate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DestinationCertificatesCertificate>> certificates;

    public Output<Optional<List<DestinationCertificatesCertificate>>> certificates() {
        return Codegen.optional(this.certificates);
    }
    /**
     * The unique identifier for the target destination within the Fivetran system.
     * 
     */
    @Export(name="destinationId", refs={String.class}, tree="[0]")
    private Output<String> destinationId;

    /**
     * @return The unique identifier for the target destination within the Fivetran system.
     * 
     */
    public Output<String> destinationId() {
        return this.destinationId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DestinationCertificates(String name) {
        this(name, DestinationCertificatesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DestinationCertificates(String name, DestinationCertificatesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DestinationCertificates(String name, DestinationCertificatesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fivetran:index/destinationCertificates:DestinationCertificates", name, args == null ? DestinationCertificatesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DestinationCertificates(String name, Output<String> id, @Nullable DestinationCertificatesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("fivetran:index/destinationCertificates:DestinationCertificates", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DestinationCertificates get(String name, Output<String> id, @Nullable DestinationCertificatesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DestinationCertificates(name, id, state, options);
    }
}
