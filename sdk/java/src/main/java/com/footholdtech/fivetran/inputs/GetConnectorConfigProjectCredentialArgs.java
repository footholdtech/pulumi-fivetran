// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetConnectorConfigProjectCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetConnectorConfigProjectCredentialArgs Empty = new GetConnectorConfigProjectCredentialArgs();

    @Import(name="apiKey", required=true)
    private Output<String> apiKey;

    public Output<String> apiKey() {
        return this.apiKey;
    }

    @Import(name="project", required=true)
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }

    @Import(name="secretKey", required=true)
    private Output<String> secretKey;

    public Output<String> secretKey() {
        return this.secretKey;
    }

    private GetConnectorConfigProjectCredentialArgs() {}

    private GetConnectorConfigProjectCredentialArgs(GetConnectorConfigProjectCredentialArgs $) {
        this.apiKey = $.apiKey;
        this.project = $.project;
        this.secretKey = $.secretKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectorConfigProjectCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectorConfigProjectCredentialArgs $;

        public Builder() {
            $ = new GetConnectorConfigProjectCredentialArgs();
        }

        public Builder(GetConnectorConfigProjectCredentialArgs defaults) {
            $ = new GetConnectorConfigProjectCredentialArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiKey(Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder secretKey(Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        public GetConnectorConfigProjectCredentialArgs build() {
            $.apiKey = Objects.requireNonNull($.apiKey, "expected parameter 'apiKey' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.secretKey = Objects.requireNonNull($.secretKey, "expected parameter 'secretKey' to be non-null");
            return $;
        }
    }

}
