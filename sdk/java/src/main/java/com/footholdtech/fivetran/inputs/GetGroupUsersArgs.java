// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.footholdtech.fivetran.inputs.GetGroupUsersUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGroupUsersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupUsersArgs Empty = new GetGroupUsersArgs();

    /**
     * The unique identifier for the user within the account.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique identifier for the user within the account.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    @Import(name="users")
    private @Nullable Output<List<GetGroupUsersUserArgs>> users;

    public Optional<Output<List<GetGroupUsersUserArgs>>> users() {
        return Optional.ofNullable(this.users);
    }

    private GetGroupUsersArgs() {}

    private GetGroupUsersArgs(GetGroupUsersArgs $) {
        this.id = $.id;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupUsersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupUsersArgs $;

        public Builder() {
            $ = new GetGroupUsersArgs();
        }

        public Builder(GetGroupUsersArgs defaults) {
            $ = new GetGroupUsersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The unique identifier for the user within the account.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for the user within the account.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder users(@Nullable Output<List<GetGroupUsersUserArgs>> users) {
            $.users = users;
            return this;
        }

        public Builder users(List<GetGroupUsersUserArgs> users) {
            return users(Output.of(users));
        }

        public Builder users(GetGroupUsersUserArgs... users) {
            return users(List.of(users));
        }

        public GetGroupUsersArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
