// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.outputs;

import com.footholdtech.fivetran.outputs.GetConnectorConfig;
import com.footholdtech.fivetran.outputs.GetConnectorDestinationSchema;
import com.footholdtech.fivetran.outputs.GetConnectorStatus;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectorResult {
    private List<GetConnectorConfig> configs;
    private String connectedBy;
    private String createdAt;
    private String dailySyncTime;
    private List<GetConnectorDestinationSchema> destinationSchemas;
    private String failedAt;
    private String groupId;
    private String id;
    private String name;
    private String pauseAfterTrial;
    private String paused;
    private String scheduleType;
    private String service;
    private String serviceVersion;
    private List<GetConnectorStatus> statuses;
    private String succeededAt;
    private String syncFrequency;

    private GetConnectorResult() {}
    public List<GetConnectorConfig> configs() {
        return this.configs;
    }
    public String connectedBy() {
        return this.connectedBy;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public String dailySyncTime() {
        return this.dailySyncTime;
    }
    public List<GetConnectorDestinationSchema> destinationSchemas() {
        return this.destinationSchemas;
    }
    public String failedAt() {
        return this.failedAt;
    }
    public String groupId() {
        return this.groupId;
    }
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String pauseAfterTrial() {
        return this.pauseAfterTrial;
    }
    public String paused() {
        return this.paused;
    }
    public String scheduleType() {
        return this.scheduleType;
    }
    public String service() {
        return this.service;
    }
    public String serviceVersion() {
        return this.serviceVersion;
    }
    public List<GetConnectorStatus> statuses() {
        return this.statuses;
    }
    public String succeededAt() {
        return this.succeededAt;
    }
    public String syncFrequency() {
        return this.syncFrequency;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetConnectorConfig> configs;
        private String connectedBy;
        private String createdAt;
        private String dailySyncTime;
        private List<GetConnectorDestinationSchema> destinationSchemas;
        private String failedAt;
        private String groupId;
        private String id;
        private String name;
        private String pauseAfterTrial;
        private String paused;
        private String scheduleType;
        private String service;
        private String serviceVersion;
        private List<GetConnectorStatus> statuses;
        private String succeededAt;
        private String syncFrequency;
        public Builder() {}
        public Builder(GetConnectorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configs = defaults.configs;
    	      this.connectedBy = defaults.connectedBy;
    	      this.createdAt = defaults.createdAt;
    	      this.dailySyncTime = defaults.dailySyncTime;
    	      this.destinationSchemas = defaults.destinationSchemas;
    	      this.failedAt = defaults.failedAt;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.pauseAfterTrial = defaults.pauseAfterTrial;
    	      this.paused = defaults.paused;
    	      this.scheduleType = defaults.scheduleType;
    	      this.service = defaults.service;
    	      this.serviceVersion = defaults.serviceVersion;
    	      this.statuses = defaults.statuses;
    	      this.succeededAt = defaults.succeededAt;
    	      this.syncFrequency = defaults.syncFrequency;
        }

        @CustomType.Setter
        public Builder configs(List<GetConnectorConfig> configs) {
            this.configs = Objects.requireNonNull(configs);
            return this;
        }
        public Builder configs(GetConnectorConfig... configs) {
            return configs(List.of(configs));
        }
        @CustomType.Setter
        public Builder connectedBy(String connectedBy) {
            this.connectedBy = Objects.requireNonNull(connectedBy);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder dailySyncTime(String dailySyncTime) {
            this.dailySyncTime = Objects.requireNonNull(dailySyncTime);
            return this;
        }
        @CustomType.Setter
        public Builder destinationSchemas(List<GetConnectorDestinationSchema> destinationSchemas) {
            this.destinationSchemas = Objects.requireNonNull(destinationSchemas);
            return this;
        }
        public Builder destinationSchemas(GetConnectorDestinationSchema... destinationSchemas) {
            return destinationSchemas(List.of(destinationSchemas));
        }
        @CustomType.Setter
        public Builder failedAt(String failedAt) {
            this.failedAt = Objects.requireNonNull(failedAt);
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            this.groupId = Objects.requireNonNull(groupId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder pauseAfterTrial(String pauseAfterTrial) {
            this.pauseAfterTrial = Objects.requireNonNull(pauseAfterTrial);
            return this;
        }
        @CustomType.Setter
        public Builder paused(String paused) {
            this.paused = Objects.requireNonNull(paused);
            return this;
        }
        @CustomType.Setter
        public Builder scheduleType(String scheduleType) {
            this.scheduleType = Objects.requireNonNull(scheduleType);
            return this;
        }
        @CustomType.Setter
        public Builder service(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }
        @CustomType.Setter
        public Builder serviceVersion(String serviceVersion) {
            this.serviceVersion = Objects.requireNonNull(serviceVersion);
            return this;
        }
        @CustomType.Setter
        public Builder statuses(List<GetConnectorStatus> statuses) {
            this.statuses = Objects.requireNonNull(statuses);
            return this;
        }
        public Builder statuses(GetConnectorStatus... statuses) {
            return statuses(List.of(statuses));
        }
        @CustomType.Setter
        public Builder succeededAt(String succeededAt) {
            this.succeededAt = Objects.requireNonNull(succeededAt);
            return this;
        }
        @CustomType.Setter
        public Builder syncFrequency(String syncFrequency) {
            this.syncFrequency = Objects.requireNonNull(syncFrequency);
            return this;
        }
        public GetConnectorResult build() {
            final var o = new GetConnectorResult();
            o.configs = configs;
            o.connectedBy = connectedBy;
            o.createdAt = createdAt;
            o.dailySyncTime = dailySyncTime;
            o.destinationSchemas = destinationSchemas;
            o.failedAt = failedAt;
            o.groupId = groupId;
            o.id = id;
            o.name = name;
            o.pauseAfterTrial = pauseAfterTrial;
            o.paused = paused;
            o.scheduleType = scheduleType;
            o.service = service;
            o.serviceVersion = serviceVersion;
            o.statuses = statuses;
            o.succeededAt = succeededAt;
            o.syncFrequency = syncFrequency;
            return o;
        }
    }
}
