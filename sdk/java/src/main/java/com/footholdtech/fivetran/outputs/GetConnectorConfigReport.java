// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectorConfigReport {
    private String aggregation;
    private List<String> attributes;
    private String configType;
    private List<String> dimensions;
    private List<String> fields;
    private String filter;
    private String filterFieldName;
    private String filterType;
    private String filterValue;
    private List<String> metrics;
    private String prebuiltReport;
    private String reportType;
    private String rollbackWindow;
    private List<String> searchTypes;
    private List<String> segmentIds;
    private List<String> segments;
    private String table;

    private GetConnectorConfigReport() {}
    public String aggregation() {
        return this.aggregation;
    }
    public List<String> attributes() {
        return this.attributes;
    }
    public String configType() {
        return this.configType;
    }
    public List<String> dimensions() {
        return this.dimensions;
    }
    public List<String> fields() {
        return this.fields;
    }
    public String filter() {
        return this.filter;
    }
    public String filterFieldName() {
        return this.filterFieldName;
    }
    public String filterType() {
        return this.filterType;
    }
    public String filterValue() {
        return this.filterValue;
    }
    public List<String> metrics() {
        return this.metrics;
    }
    public String prebuiltReport() {
        return this.prebuiltReport;
    }
    public String reportType() {
        return this.reportType;
    }
    public String rollbackWindow() {
        return this.rollbackWindow;
    }
    public List<String> searchTypes() {
        return this.searchTypes;
    }
    public List<String> segmentIds() {
        return this.segmentIds;
    }
    public List<String> segments() {
        return this.segments;
    }
    public String table() {
        return this.table;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectorConfigReport defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String aggregation;
        private List<String> attributes;
        private String configType;
        private List<String> dimensions;
        private List<String> fields;
        private String filter;
        private String filterFieldName;
        private String filterType;
        private String filterValue;
        private List<String> metrics;
        private String prebuiltReport;
        private String reportType;
        private String rollbackWindow;
        private List<String> searchTypes;
        private List<String> segmentIds;
        private List<String> segments;
        private String table;
        public Builder() {}
        public Builder(GetConnectorConfigReport defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregation = defaults.aggregation;
    	      this.attributes = defaults.attributes;
    	      this.configType = defaults.configType;
    	      this.dimensions = defaults.dimensions;
    	      this.fields = defaults.fields;
    	      this.filter = defaults.filter;
    	      this.filterFieldName = defaults.filterFieldName;
    	      this.filterType = defaults.filterType;
    	      this.filterValue = defaults.filterValue;
    	      this.metrics = defaults.metrics;
    	      this.prebuiltReport = defaults.prebuiltReport;
    	      this.reportType = defaults.reportType;
    	      this.rollbackWindow = defaults.rollbackWindow;
    	      this.searchTypes = defaults.searchTypes;
    	      this.segmentIds = defaults.segmentIds;
    	      this.segments = defaults.segments;
    	      this.table = defaults.table;
        }

        @CustomType.Setter
        public Builder aggregation(String aggregation) {
            this.aggregation = Objects.requireNonNull(aggregation);
            return this;
        }
        @CustomType.Setter
        public Builder attributes(List<String> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }
        public Builder attributes(String... attributes) {
            return attributes(List.of(attributes));
        }
        @CustomType.Setter
        public Builder configType(String configType) {
            this.configType = Objects.requireNonNull(configType);
            return this;
        }
        @CustomType.Setter
        public Builder dimensions(List<String> dimensions) {
            this.dimensions = Objects.requireNonNull(dimensions);
            return this;
        }
        public Builder dimensions(String... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder fields(List<String> fields) {
            this.fields = Objects.requireNonNull(fields);
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        @CustomType.Setter
        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        @CustomType.Setter
        public Builder filterFieldName(String filterFieldName) {
            this.filterFieldName = Objects.requireNonNull(filterFieldName);
            return this;
        }
        @CustomType.Setter
        public Builder filterType(String filterType) {
            this.filterType = Objects.requireNonNull(filterType);
            return this;
        }
        @CustomType.Setter
        public Builder filterValue(String filterValue) {
            this.filterValue = Objects.requireNonNull(filterValue);
            return this;
        }
        @CustomType.Setter
        public Builder metrics(List<String> metrics) {
            this.metrics = Objects.requireNonNull(metrics);
            return this;
        }
        public Builder metrics(String... metrics) {
            return metrics(List.of(metrics));
        }
        @CustomType.Setter
        public Builder prebuiltReport(String prebuiltReport) {
            this.prebuiltReport = Objects.requireNonNull(prebuiltReport);
            return this;
        }
        @CustomType.Setter
        public Builder reportType(String reportType) {
            this.reportType = Objects.requireNonNull(reportType);
            return this;
        }
        @CustomType.Setter
        public Builder rollbackWindow(String rollbackWindow) {
            this.rollbackWindow = Objects.requireNonNull(rollbackWindow);
            return this;
        }
        @CustomType.Setter
        public Builder searchTypes(List<String> searchTypes) {
            this.searchTypes = Objects.requireNonNull(searchTypes);
            return this;
        }
        public Builder searchTypes(String... searchTypes) {
            return searchTypes(List.of(searchTypes));
        }
        @CustomType.Setter
        public Builder segmentIds(List<String> segmentIds) {
            this.segmentIds = Objects.requireNonNull(segmentIds);
            return this;
        }
        public Builder segmentIds(String... segmentIds) {
            return segmentIds(List.of(segmentIds));
        }
        @CustomType.Setter
        public Builder segments(List<String> segments) {
            this.segments = Objects.requireNonNull(segments);
            return this;
        }
        public Builder segments(String... segments) {
            return segments(List.of(segments));
        }
        @CustomType.Setter
        public Builder table(String table) {
            this.table = Objects.requireNonNull(table);
            return this;
        }
        public GetConnectorConfigReport build() {
            final var o = new GetConnectorConfigReport();
            o.aggregation = aggregation;
            o.attributes = attributes;
            o.configType = configType;
            o.dimensions = dimensions;
            o.fields = fields;
            o.filter = filter;
            o.filterFieldName = filterFieldName;
            o.filterType = filterType;
            o.filterValue = filterValue;
            o.metrics = metrics;
            o.prebuiltReport = prebuiltReport;
            o.reportType = reportType;
            o.rollbackWindow = rollbackWindow;
            o.searchTypes = searchTypes;
            o.segmentIds = segmentIds;
            o.segments = segments;
            o.table = table;
            return o;
        }
    }
}
