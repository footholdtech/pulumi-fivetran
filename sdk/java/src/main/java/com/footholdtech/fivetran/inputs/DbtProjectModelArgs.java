// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbtProjectModelArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbtProjectModelArgs Empty = new DbtProjectModelArgs();

    /**
     * The unique identifier for the dbt Model within the Fivetran system.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The unique identifier for the dbt Model within the Fivetran system.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The dbt Model name.
     * 
     */
    @Import(name="modelName")
    private @Nullable Output<String> modelName;

    /**
     * @return The dbt Model name.
     * 
     */
    public Optional<Output<String>> modelName() {
        return Optional.ofNullable(this.modelName);
    }

    /**
     * Boolean specifying whether the model is selected for execution.
     * 
     */
    @Import(name="scheduled")
    private @Nullable Output<Boolean> scheduled;

    /**
     * @return Boolean specifying whether the model is selected for execution.
     * 
     */
    public Optional<Output<Boolean>> scheduled() {
        return Optional.ofNullable(this.scheduled);
    }

    private DbtProjectModelArgs() {}

    private DbtProjectModelArgs(DbtProjectModelArgs $) {
        this.id = $.id;
        this.modelName = $.modelName;
        this.scheduled = $.scheduled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbtProjectModelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbtProjectModelArgs $;

        public Builder() {
            $ = new DbtProjectModelArgs();
        }

        public Builder(DbtProjectModelArgs defaults) {
            $ = new DbtProjectModelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The unique identifier for the dbt Model within the Fivetran system.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for the dbt Model within the Fivetran system.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param modelName The dbt Model name.
         * 
         * @return builder
         * 
         */
        public Builder modelName(@Nullable Output<String> modelName) {
            $.modelName = modelName;
            return this;
        }

        /**
         * @param modelName The dbt Model name.
         * 
         * @return builder
         * 
         */
        public Builder modelName(String modelName) {
            return modelName(Output.of(modelName));
        }

        /**
         * @param scheduled Boolean specifying whether the model is selected for execution.
         * 
         * @return builder
         * 
         */
        public Builder scheduled(@Nullable Output<Boolean> scheduled) {
            $.scheduled = scheduled;
            return this;
        }

        /**
         * @param scheduled Boolean specifying whether the model is selected for execution.
         * 
         * @return builder
         * 
         */
        public Builder scheduled(Boolean scheduled) {
            return scheduled(Output.of(scheduled));
        }

        public DbtProjectModelArgs build() {
            return $;
        }
    }

}
