// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DbtProjectProjectConfig {
    /**
     * @return Folder in Git repo with your dbt project.
     * 
     */
    private @Nullable String folderPath;
    /**
     * @return Git branch.
     * 
     */
    private @Nullable String gitBranch;
    /**
     * @return Git remote URL with your dbt project.
     * 
     */
    private @Nullable String gitRemoteUrl;

    private DbtProjectProjectConfig() {}
    /**
     * @return Folder in Git repo with your dbt project.
     * 
     */
    public Optional<String> folderPath() {
        return Optional.ofNullable(this.folderPath);
    }
    /**
     * @return Git branch.
     * 
     */
    public Optional<String> gitBranch() {
        return Optional.ofNullable(this.gitBranch);
    }
    /**
     * @return Git remote URL with your dbt project.
     * 
     */
    public Optional<String> gitRemoteUrl() {
        return Optional.ofNullable(this.gitRemoteUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DbtProjectProjectConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String folderPath;
        private @Nullable String gitBranch;
        private @Nullable String gitRemoteUrl;
        public Builder() {}
        public Builder(DbtProjectProjectConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.folderPath = defaults.folderPath;
    	      this.gitBranch = defaults.gitBranch;
    	      this.gitRemoteUrl = defaults.gitRemoteUrl;
        }

        @CustomType.Setter
        public Builder folderPath(@Nullable String folderPath) {
            this.folderPath = folderPath;
            return this;
        }
        @CustomType.Setter
        public Builder gitBranch(@Nullable String gitBranch) {
            this.gitBranch = gitBranch;
            return this;
        }
        @CustomType.Setter
        public Builder gitRemoteUrl(@Nullable String gitRemoteUrl) {
            this.gitRemoteUrl = gitRemoteUrl;
            return this;
        }
        public DbtProjectProjectConfig build() {
            final var o = new DbtProjectProjectConfig();
            o.folderPath = folderPath;
            o.gitBranch = gitBranch;
            o.gitRemoteUrl = gitRemoteUrl;
            return o;
        }
    }
}
