// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DbtTransformationSchedule {
    /**
     * @return The set of the days of the week the transformation should be launched on. The following values are supported: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
     * 
     */
    private @Nullable List<String> daysOfWeeks;
    /**
     * @return The time interval in minutes between subsequent transformation runs.
     * 
     */
    private @Nullable Integer interval;
    /**
     * @return The type of the schedule to run the dbt Transformation on. The following values are supported: INTEGRATED, TIME*OF*DAY, INTERVAL. For INTEGRATED schedule type, interval and time*of*day values are ignored and only the days*of*week parameter values are taken into account (but may be empty or null). For TIME*OF*DAY schedule type, the interval parameter value is ignored and the time*of*day values is taken into account along with days*of*week value. For INTERVAL schedule type, time*of*day value is ignored and the interval parameter value is taken into account along with days*of*week value.
     * 
     */
    private String scheduleType;
    /**
     * @return The time of the day the transformation should be launched at. Supported values are: &#34;00:00&#34;, &#34;01:00&#34;, &#34;02:00&#34;, &#34;03:00&#34;, &#34;04:00&#34;, &#34;05:00&#34;, &#34;06:00&#34;, &#34;07:00&#34;, &#34;08:00&#34;, &#34;09:00&#34;, &#34;10:00&#34;, &#34;11:00&#34;, &#34;12:00&#34;, &#34;13:00&#34;, &#34;14:00&#34;, &#34;15:00&#34;, &#34;16:00&#34;, &#34;17:00&#34;, &#34;18:00&#34;, &#34;19:00&#34;, &#34;20:00&#34;, &#34;21:00&#34;, &#34;22:00&#34;, &#34;23:00&#34;
     * 
     */
    private @Nullable String timeOfDay;

    private DbtTransformationSchedule() {}
    /**
     * @return The set of the days of the week the transformation should be launched on. The following values are supported: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
     * 
     */
    public List<String> daysOfWeeks() {
        return this.daysOfWeeks == null ? List.of() : this.daysOfWeeks;
    }
    /**
     * @return The time interval in minutes between subsequent transformation runs.
     * 
     */
    public Optional<Integer> interval() {
        return Optional.ofNullable(this.interval);
    }
    /**
     * @return The type of the schedule to run the dbt Transformation on. The following values are supported: INTEGRATED, TIME*OF*DAY, INTERVAL. For INTEGRATED schedule type, interval and time*of*day values are ignored and only the days*of*week parameter values are taken into account (but may be empty or null). For TIME*OF*DAY schedule type, the interval parameter value is ignored and the time*of*day values is taken into account along with days*of*week value. For INTERVAL schedule type, time*of*day value is ignored and the interval parameter value is taken into account along with days*of*week value.
     * 
     */
    public String scheduleType() {
        return this.scheduleType;
    }
    /**
     * @return The time of the day the transformation should be launched at. Supported values are: &#34;00:00&#34;, &#34;01:00&#34;, &#34;02:00&#34;, &#34;03:00&#34;, &#34;04:00&#34;, &#34;05:00&#34;, &#34;06:00&#34;, &#34;07:00&#34;, &#34;08:00&#34;, &#34;09:00&#34;, &#34;10:00&#34;, &#34;11:00&#34;, &#34;12:00&#34;, &#34;13:00&#34;, &#34;14:00&#34;, &#34;15:00&#34;, &#34;16:00&#34;, &#34;17:00&#34;, &#34;18:00&#34;, &#34;19:00&#34;, &#34;20:00&#34;, &#34;21:00&#34;, &#34;22:00&#34;, &#34;23:00&#34;
     * 
     */
    public Optional<String> timeOfDay() {
        return Optional.ofNullable(this.timeOfDay);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DbtTransformationSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> daysOfWeeks;
        private @Nullable Integer interval;
        private String scheduleType;
        private @Nullable String timeOfDay;
        public Builder() {}
        public Builder(DbtTransformationSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.daysOfWeeks = defaults.daysOfWeeks;
    	      this.interval = defaults.interval;
    	      this.scheduleType = defaults.scheduleType;
    	      this.timeOfDay = defaults.timeOfDay;
        }

        @CustomType.Setter
        public Builder daysOfWeeks(@Nullable List<String> daysOfWeeks) {
            this.daysOfWeeks = daysOfWeeks;
            return this;
        }
        public Builder daysOfWeeks(String... daysOfWeeks) {
            return daysOfWeeks(List.of(daysOfWeeks));
        }
        @CustomType.Setter
        public Builder interval(@Nullable Integer interval) {
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleType(String scheduleType) {
            this.scheduleType = Objects.requireNonNull(scheduleType);
            return this;
        }
        @CustomType.Setter
        public Builder timeOfDay(@Nullable String timeOfDay) {
            this.timeOfDay = timeOfDay;
            return this;
        }
        public DbtTransformationSchedule build() {
            final var o = new DbtTransformationSchedule();
            o.daysOfWeeks = daysOfWeeks;
            o.interval = interval;
            o.scheduleType = scheduleType;
            o.timeOfDay = timeOfDay;
            return o;
        }
    }
}
