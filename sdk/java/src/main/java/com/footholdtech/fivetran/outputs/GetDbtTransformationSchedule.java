// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDbtTransformationSchedule {
    private List<String> daysOfWeeks;
    private Integer interval;
    private String scheduleType;
    private String timeOfDay;

    private GetDbtTransformationSchedule() {}
    public List<String> daysOfWeeks() {
        return this.daysOfWeeks;
    }
    public Integer interval() {
        return this.interval;
    }
    public String scheduleType() {
        return this.scheduleType;
    }
    public String timeOfDay() {
        return this.timeOfDay;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbtTransformationSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> daysOfWeeks;
        private Integer interval;
        private String scheduleType;
        private String timeOfDay;
        public Builder() {}
        public Builder(GetDbtTransformationSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.daysOfWeeks = defaults.daysOfWeeks;
    	      this.interval = defaults.interval;
    	      this.scheduleType = defaults.scheduleType;
    	      this.timeOfDay = defaults.timeOfDay;
        }

        @CustomType.Setter
        public Builder daysOfWeeks(List<String> daysOfWeeks) {
            this.daysOfWeeks = Objects.requireNonNull(daysOfWeeks);
            return this;
        }
        public Builder daysOfWeeks(String... daysOfWeeks) {
            return daysOfWeeks(List.of(daysOfWeeks));
        }
        @CustomType.Setter
        public Builder interval(Integer interval) {
            this.interval = Objects.requireNonNull(interval);
            return this;
        }
        @CustomType.Setter
        public Builder scheduleType(String scheduleType) {
            this.scheduleType = Objects.requireNonNull(scheduleType);
            return this;
        }
        @CustomType.Setter
        public Builder timeOfDay(String timeOfDay) {
            this.timeOfDay = Objects.requireNonNull(timeOfDay);
            return this;
        }
        public GetDbtTransformationSchedule build() {
            final var o = new GetDbtTransformationSchedule();
            o.daysOfWeeks = daysOfWeeks;
            o.interval = interval;
            o.scheduleType = scheduleType;
            o.timeOfDay = timeOfDay;
            return o;
        }
    }
}
