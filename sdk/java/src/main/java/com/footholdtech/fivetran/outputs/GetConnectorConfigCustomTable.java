// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectorConfigCustomTable {
    private List<String> actionBreakdowns;
    private String actionReportTime;
    private String aggregation;
    private List<String> breakdowns;
    private String clickAttributionWindow;
    private String configType;
    private List<String> fields;
    private String level;
    private String prebuiltReportName;
    private String tableName;
    private String useUnifiedAttributionSetting;
    private String viewAttributionWindow;

    private GetConnectorConfigCustomTable() {}
    public List<String> actionBreakdowns() {
        return this.actionBreakdowns;
    }
    public String actionReportTime() {
        return this.actionReportTime;
    }
    public String aggregation() {
        return this.aggregation;
    }
    public List<String> breakdowns() {
        return this.breakdowns;
    }
    public String clickAttributionWindow() {
        return this.clickAttributionWindow;
    }
    public String configType() {
        return this.configType;
    }
    public List<String> fields() {
        return this.fields;
    }
    public String level() {
        return this.level;
    }
    public String prebuiltReportName() {
        return this.prebuiltReportName;
    }
    public String tableName() {
        return this.tableName;
    }
    public String useUnifiedAttributionSetting() {
        return this.useUnifiedAttributionSetting;
    }
    public String viewAttributionWindow() {
        return this.viewAttributionWindow;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectorConfigCustomTable defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> actionBreakdowns;
        private String actionReportTime;
        private String aggregation;
        private List<String> breakdowns;
        private String clickAttributionWindow;
        private String configType;
        private List<String> fields;
        private String level;
        private String prebuiltReportName;
        private String tableName;
        private String useUnifiedAttributionSetting;
        private String viewAttributionWindow;
        public Builder() {}
        public Builder(GetConnectorConfigCustomTable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionBreakdowns = defaults.actionBreakdowns;
    	      this.actionReportTime = defaults.actionReportTime;
    	      this.aggregation = defaults.aggregation;
    	      this.breakdowns = defaults.breakdowns;
    	      this.clickAttributionWindow = defaults.clickAttributionWindow;
    	      this.configType = defaults.configType;
    	      this.fields = defaults.fields;
    	      this.level = defaults.level;
    	      this.prebuiltReportName = defaults.prebuiltReportName;
    	      this.tableName = defaults.tableName;
    	      this.useUnifiedAttributionSetting = defaults.useUnifiedAttributionSetting;
    	      this.viewAttributionWindow = defaults.viewAttributionWindow;
        }

        @CustomType.Setter
        public Builder actionBreakdowns(List<String> actionBreakdowns) {
            this.actionBreakdowns = Objects.requireNonNull(actionBreakdowns);
            return this;
        }
        public Builder actionBreakdowns(String... actionBreakdowns) {
            return actionBreakdowns(List.of(actionBreakdowns));
        }
        @CustomType.Setter
        public Builder actionReportTime(String actionReportTime) {
            this.actionReportTime = Objects.requireNonNull(actionReportTime);
            return this;
        }
        @CustomType.Setter
        public Builder aggregation(String aggregation) {
            this.aggregation = Objects.requireNonNull(aggregation);
            return this;
        }
        @CustomType.Setter
        public Builder breakdowns(List<String> breakdowns) {
            this.breakdowns = Objects.requireNonNull(breakdowns);
            return this;
        }
        public Builder breakdowns(String... breakdowns) {
            return breakdowns(List.of(breakdowns));
        }
        @CustomType.Setter
        public Builder clickAttributionWindow(String clickAttributionWindow) {
            this.clickAttributionWindow = Objects.requireNonNull(clickAttributionWindow);
            return this;
        }
        @CustomType.Setter
        public Builder configType(String configType) {
            this.configType = Objects.requireNonNull(configType);
            return this;
        }
        @CustomType.Setter
        public Builder fields(List<String> fields) {
            this.fields = Objects.requireNonNull(fields);
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        @CustomType.Setter
        public Builder level(String level) {
            this.level = Objects.requireNonNull(level);
            return this;
        }
        @CustomType.Setter
        public Builder prebuiltReportName(String prebuiltReportName) {
            this.prebuiltReportName = Objects.requireNonNull(prebuiltReportName);
            return this;
        }
        @CustomType.Setter
        public Builder tableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }
        @CustomType.Setter
        public Builder useUnifiedAttributionSetting(String useUnifiedAttributionSetting) {
            this.useUnifiedAttributionSetting = Objects.requireNonNull(useUnifiedAttributionSetting);
            return this;
        }
        @CustomType.Setter
        public Builder viewAttributionWindow(String viewAttributionWindow) {
            this.viewAttributionWindow = Objects.requireNonNull(viewAttributionWindow);
            return this;
        }
        public GetConnectorConfigCustomTable build() {
            final var o = new GetConnectorConfigCustomTable();
            o.actionBreakdowns = actionBreakdowns;
            o.actionReportTime = actionReportTime;
            o.aggregation = aggregation;
            o.breakdowns = breakdowns;
            o.clickAttributionWindow = clickAttributionWindow;
            o.configType = configType;
            o.fields = fields;
            o.level = level;
            o.prebuiltReportName = prebuiltReportName;
            o.tableName = tableName;
            o.useUnifiedAttributionSetting = useUnifiedAttributionSetting;
            o.viewAttributionWindow = viewAttributionWindow;
            return o;
        }
    }
}
