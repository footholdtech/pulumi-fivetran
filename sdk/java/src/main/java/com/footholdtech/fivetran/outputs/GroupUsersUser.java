// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GroupUsersUser {
    /**
     * @return The email address that the user has associated with their user profile.
     * 
     */
    private String email;
    /**
     * @return The unique identifier for the user within the account.
     * 
     */
    private @Nullable String id;
    /**
     * @return The group role that you would like to assign this new user to. Supported group roles: ‘Destination Administrator‘, ‘Destination Reviewer‘, ‘Destination Analyst‘, ‘Connector Creator‘, or a custom destination role
     * 
     */
    private String role;

    private GroupUsersUser() {}
    /**
     * @return The email address that the user has associated with their user profile.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The unique identifier for the user within the account.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The group role that you would like to assign this new user to. Supported group roles: ‘Destination Administrator‘, ‘Destination Reviewer‘, ‘Destination Analyst‘, ‘Connector Creator‘, or a custom destination role
     * 
     */
    public String role() {
        return this.role;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupUsersUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String email;
        private @Nullable String id;
        private String role;
        public Builder() {}
        public Builder(GroupUsersUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.id = defaults.id;
    	      this.role = defaults.role;
        }

        @CustomType.Setter
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        public GroupUsersUser build() {
            final var o = new GroupUsersUser();
            o.email = email;
            o.id = id;
            o.role = role;
            return o;
        }
    }
}
