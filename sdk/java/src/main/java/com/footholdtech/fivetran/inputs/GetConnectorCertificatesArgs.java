// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.footholdtech.fivetran.inputs.GetConnectorCertificatesCertificateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConnectorCertificatesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectorCertificatesArgs Empty = new GetConnectorCertificatesArgs();

    @Import(name="certificates")
    private @Nullable Output<List<GetConnectorCertificatesCertificateArgs>> certificates;

    public Optional<Output<List<GetConnectorCertificatesCertificateArgs>>> certificates() {
        return Optional.ofNullable(this.certificates);
    }

    /**
     * The unique identifier for the resource. Equal to target connector id.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique identifier for the resource. Equal to target connector id.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    private GetConnectorCertificatesArgs() {}

    private GetConnectorCertificatesArgs(GetConnectorCertificatesArgs $) {
        this.certificates = $.certificates;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectorCertificatesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectorCertificatesArgs $;

        public Builder() {
            $ = new GetConnectorCertificatesArgs();
        }

        public Builder(GetConnectorCertificatesArgs defaults) {
            $ = new GetConnectorCertificatesArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificates(@Nullable Output<List<GetConnectorCertificatesCertificateArgs>> certificates) {
            $.certificates = certificates;
            return this;
        }

        public Builder certificates(List<GetConnectorCertificatesCertificateArgs> certificates) {
            return certificates(Output.of(certificates));
        }

        public Builder certificates(GetConnectorCertificatesCertificateArgs... certificates) {
            return certificates(List.of(certificates));
        }

        /**
         * @param id The unique identifier for the resource. Equal to target connector id.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for the resource. Equal to target connector id.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public GetConnectorCertificatesArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
