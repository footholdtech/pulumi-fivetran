// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetRolesRole extends com.pulumi.resources.InvokeArgs {

    public static final GetRolesRole Empty = new GetRolesRole();

    /**
     * The role description
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return The role description
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * TypeBool
     * 
     */
    @Import(name="isCustom", required=true)
    private Boolean isCustom;

    /**
     * @return TypeBool
     * 
     */
    public Boolean isCustom() {
        return this.isCustom;
    }

    /**
     * The role name
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The role name
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Defines the list of resources the role manages. Supported values: ACCOUNT, DESTINATION, CONNECTOR, and TEAM
     * 
     */
    @Import(name="scopes", required=true)
    private List<String> scopes;

    /**
     * @return Defines the list of resources the role manages. Supported values: ACCOUNT, DESTINATION, CONNECTOR, and TEAM
     * 
     */
    public List<String> scopes() {
        return this.scopes;
    }

    private GetRolesRole() {}

    private GetRolesRole(GetRolesRole $) {
        this.description = $.description;
        this.isCustom = $.isCustom;
        this.name = $.name;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRolesRole defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRolesRole $;

        public Builder() {
            $ = new GetRolesRole();
        }

        public Builder(GetRolesRole defaults) {
            $ = new GetRolesRole(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The role description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param isCustom TypeBool
         * 
         * @return builder
         * 
         */
        public Builder isCustom(Boolean isCustom) {
            $.isCustom = isCustom;
            return this;
        }

        /**
         * @param name The role name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param scopes Defines the list of resources the role manages. Supported values: ACCOUNT, DESTINATION, CONNECTOR, and TEAM
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Defines the list of resources the role manages. Supported values: ACCOUNT, DESTINATION, CONNECTOR, and TEAM
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public GetRolesRole build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.isCustom = Objects.requireNonNull($.isCustom, "expected parameter 'isCustom' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.scopes = Objects.requireNonNull($.scopes, "expected parameter 'scopes' to be non-null");
            return $;
        }
    }

}
