// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.footholdtech.fivetran.inputs.GetConnectorsMetadataSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConnectorsMetadataArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectorsMetadataArgs Empty = new GetConnectorsMetadataArgs();

    @Import(name="sources")
    private @Nullable Output<List<GetConnectorsMetadataSourceArgs>> sources;

    public Optional<Output<List<GetConnectorsMetadataSourceArgs>>> sources() {
        return Optional.ofNullable(this.sources);
    }

    private GetConnectorsMetadataArgs() {}

    private GetConnectorsMetadataArgs(GetConnectorsMetadataArgs $) {
        this.sources = $.sources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectorsMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectorsMetadataArgs $;

        public Builder() {
            $ = new GetConnectorsMetadataArgs();
        }

        public Builder(GetConnectorsMetadataArgs defaults) {
            $ = new GetConnectorsMetadataArgs(Objects.requireNonNull(defaults));
        }

        public Builder sources(@Nullable Output<List<GetConnectorsMetadataSourceArgs>> sources) {
            $.sources = sources;
            return this;
        }

        public Builder sources(List<GetConnectorsMetadataSourceArgs> sources) {
            return sources(Output.of(sources));
        }

        public Builder sources(GetConnectorsMetadataSourceArgs... sources) {
            return sources(List.of(sources));
        }

        public GetConnectorsMetadataArgs build() {
            return $;
        }
    }

}
