// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.footholdtech.fivetran.inputs.GetTeamUserMembershipsUser;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTeamUserMembershipsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTeamUserMembershipsPlainArgs Empty = new GetTeamUserMembershipsPlainArgs();

    /**
     * The unique identifier for the team within your account.
     * 
     */
    @Import(name="teamId", required=true)
    private String teamId;

    /**
     * @return The unique identifier for the team within your account.
     * 
     */
    public String teamId() {
        return this.teamId;
    }

    @Import(name="users")
    private @Nullable List<GetTeamUserMembershipsUser> users;

    public Optional<List<GetTeamUserMembershipsUser>> users() {
        return Optional.ofNullable(this.users);
    }

    private GetTeamUserMembershipsPlainArgs() {}

    private GetTeamUserMembershipsPlainArgs(GetTeamUserMembershipsPlainArgs $) {
        this.teamId = $.teamId;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTeamUserMembershipsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTeamUserMembershipsPlainArgs $;

        public Builder() {
            $ = new GetTeamUserMembershipsPlainArgs();
        }

        public Builder(GetTeamUserMembershipsPlainArgs defaults) {
            $ = new GetTeamUserMembershipsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param teamId The unique identifier for the team within your account.
         * 
         * @return builder
         * 
         */
        public Builder teamId(String teamId) {
            $.teamId = teamId;
            return this;
        }

        public Builder users(@Nullable List<GetTeamUserMembershipsUser> users) {
            $.users = users;
            return this;
        }

        public Builder users(GetTeamUserMembershipsUser... users) {
            return users(List.of(users));
        }

        public GetTeamUserMembershipsPlainArgs build() {
            $.teamId = Objects.requireNonNull($.teamId, "expected parameter 'teamId' to be non-null");
            return $;
        }
    }

}
