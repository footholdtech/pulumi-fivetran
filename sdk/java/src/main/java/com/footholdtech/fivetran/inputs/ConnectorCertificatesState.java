// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.footholdtech.fivetran.inputs.ConnectorCertificatesCertificateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorCertificatesState extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorCertificatesState Empty = new ConnectorCertificatesState();

    @Import(name="certificates")
    private @Nullable Output<List<ConnectorCertificatesCertificateArgs>> certificates;

    public Optional<Output<List<ConnectorCertificatesCertificateArgs>>> certificates() {
        return Optional.ofNullable(this.certificates);
    }

    /**
     * The unique identifier for the target connector within the Fivetran system.
     * 
     */
    @Import(name="connectorId")
    private @Nullable Output<String> connectorId;

    /**
     * @return The unique identifier for the target connector within the Fivetran system.
     * 
     */
    public Optional<Output<String>> connectorId() {
        return Optional.ofNullable(this.connectorId);
    }

    private ConnectorCertificatesState() {}

    private ConnectorCertificatesState(ConnectorCertificatesState $) {
        this.certificates = $.certificates;
        this.connectorId = $.connectorId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorCertificatesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorCertificatesState $;

        public Builder() {
            $ = new ConnectorCertificatesState();
        }

        public Builder(ConnectorCertificatesState defaults) {
            $ = new ConnectorCertificatesState(Objects.requireNonNull(defaults));
        }

        public Builder certificates(@Nullable Output<List<ConnectorCertificatesCertificateArgs>> certificates) {
            $.certificates = certificates;
            return this;
        }

        public Builder certificates(List<ConnectorCertificatesCertificateArgs> certificates) {
            return certificates(Output.of(certificates));
        }

        public Builder certificates(ConnectorCertificatesCertificateArgs... certificates) {
            return certificates(List.of(certificates));
        }

        /**
         * @param connectorId The unique identifier for the target connector within the Fivetran system.
         * 
         * @return builder
         * 
         */
        public Builder connectorId(@Nullable Output<String> connectorId) {
            $.connectorId = connectorId;
            return this;
        }

        /**
         * @param connectorId The unique identifier for the target connector within the Fivetran system.
         * 
         * @return builder
         * 
         */
        public Builder connectorId(String connectorId) {
            return connectorId(Output.of(connectorId));
        }

        public ConnectorCertificatesState build() {
            return $;
        }
    }

}
