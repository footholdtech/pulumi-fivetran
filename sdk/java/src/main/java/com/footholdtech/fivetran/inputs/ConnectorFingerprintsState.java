// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.footholdtech.fivetran.inputs.ConnectorFingerprintsFingerprintArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorFingerprintsState extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorFingerprintsState Empty = new ConnectorFingerprintsState();

    /**
     * The unique identifier for the target connector within the Fivetran system.
     * 
     */
    @Import(name="connectorId")
    private @Nullable Output<String> connectorId;

    /**
     * @return The unique identifier for the target connector within the Fivetran system.
     * 
     */
    public Optional<Output<String>> connectorId() {
        return Optional.ofNullable(this.connectorId);
    }

    @Import(name="fingerprints")
    private @Nullable Output<List<ConnectorFingerprintsFingerprintArgs>> fingerprints;

    public Optional<Output<List<ConnectorFingerprintsFingerprintArgs>>> fingerprints() {
        return Optional.ofNullable(this.fingerprints);
    }

    private ConnectorFingerprintsState() {}

    private ConnectorFingerprintsState(ConnectorFingerprintsState $) {
        this.connectorId = $.connectorId;
        this.fingerprints = $.fingerprints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorFingerprintsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorFingerprintsState $;

        public Builder() {
            $ = new ConnectorFingerprintsState();
        }

        public Builder(ConnectorFingerprintsState defaults) {
            $ = new ConnectorFingerprintsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectorId The unique identifier for the target connector within the Fivetran system.
         * 
         * @return builder
         * 
         */
        public Builder connectorId(@Nullable Output<String> connectorId) {
            $.connectorId = connectorId;
            return this;
        }

        /**
         * @param connectorId The unique identifier for the target connector within the Fivetran system.
         * 
         * @return builder
         * 
         */
        public Builder connectorId(String connectorId) {
            return connectorId(Output.of(connectorId));
        }

        public Builder fingerprints(@Nullable Output<List<ConnectorFingerprintsFingerprintArgs>> fingerprints) {
            $.fingerprints = fingerprints;
            return this;
        }

        public Builder fingerprints(List<ConnectorFingerprintsFingerprintArgs> fingerprints) {
            return fingerprints(Output.of(fingerprints));
        }

        public Builder fingerprints(ConnectorFingerprintsFingerprintArgs... fingerprints) {
            return fingerprints(List.of(fingerprints));
        }

        public ConnectorFingerprintsState build() {
            return $;
        }
    }

}
