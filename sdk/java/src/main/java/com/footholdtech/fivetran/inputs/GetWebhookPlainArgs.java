// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWebhookPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWebhookPlainArgs Empty = new GetWebhookPlainArgs();

    /**
     * The webhook ID
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The webhook ID
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * Specifies whether the setup tests should be run
     * 
     */
    @Import(name="runTests")
    private @Nullable Boolean runTests;

    /**
     * @return Specifies whether the setup tests should be run
     * 
     */
    public Optional<Boolean> runTests() {
        return Optional.ofNullable(this.runTests);
    }

    private GetWebhookPlainArgs() {}

    private GetWebhookPlainArgs(GetWebhookPlainArgs $) {
        this.id = $.id;
        this.runTests = $.runTests;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWebhookPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWebhookPlainArgs $;

        public Builder() {
            $ = new GetWebhookPlainArgs();
        }

        public Builder(GetWebhookPlainArgs defaults) {
            $ = new GetWebhookPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The webhook ID
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param runTests Specifies whether the setup tests should be run
         * 
         * @return builder
         * 
         */
        public Builder runTests(@Nullable Boolean runTests) {
            $.runTests = runTests;
            return this;
        }

        public GetWebhookPlainArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
