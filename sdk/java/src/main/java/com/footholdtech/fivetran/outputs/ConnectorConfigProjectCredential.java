// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.footholdtech.fivetran.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorConfigProjectCredential {
    private @Nullable String apiKey;
    private @Nullable String project;
    private @Nullable String secretKey;

    private ConnectorConfigProjectCredential() {}
    public Optional<String> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorConfigProjectCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiKey;
        private @Nullable String project;
        private @Nullable String secretKey;
        public Builder() {}
        public Builder(ConnectorConfigProjectCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.project = defaults.project;
    	      this.secretKey = defaults.secretKey;
        }

        @CustomType.Setter
        public Builder apiKey(@Nullable String apiKey) {
            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(@Nullable String secretKey) {
            this.secretKey = secretKey;
            return this;
        }
        public ConnectorConfigProjectCredential build() {
            final var o = new ConnectorConfigProjectCredential();
            o.apiKey = apiKey;
            o.project = project;
            o.secretKey = secretKey;
            return o;
        }
    }
}
