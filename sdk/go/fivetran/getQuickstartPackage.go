// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns the metadata details of the Quickstart transformation package if a valid identifier is provided
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetQuickstartPackage(ctx, &fivetran.GetQuickstartPackageArgs{
//				Id: "id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetQuickstartPackage(ctx *pulumi.Context, args *GetQuickstartPackageArgs, opts ...pulumi.InvokeOption) (*GetQuickstartPackageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQuickstartPackageResult
	err := ctx.Invoke("fivetran:index/getQuickstartPackage:getQuickstartPackage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQuickstartPackage.
type GetQuickstartPackageArgs struct {
	// The unique identifier for the Quickstart transformation package definition within the Fivetran system
	Id string `pulumi:"id"`
}

// A collection of values returned by getQuickstartPackage.
type GetQuickstartPackageResult struct {
	// The set of connector types
	ConnectorTypes []string `pulumi:"connectorTypes"`
	// The unique identifier for the Quickstart transformation package definition within the Fivetran system
	Id string `pulumi:"id"`
	// The Quickstart transformation package name
	Name string `pulumi:"name"`
	// The list of transformation output models
	OutputModelNames []string `pulumi:"outputModelNames"`
	// The Quickstart package definition version
	Version string `pulumi:"version"`
}

func GetQuickstartPackageOutput(ctx *pulumi.Context, args GetQuickstartPackageOutputArgs, opts ...pulumi.InvokeOption) GetQuickstartPackageResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetQuickstartPackageResultOutput, error) {
			args := v.(GetQuickstartPackageArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fivetran:index/getQuickstartPackage:getQuickstartPackage", args, GetQuickstartPackageResultOutput{}, options).(GetQuickstartPackageResultOutput), nil
		}).(GetQuickstartPackageResultOutput)
}

// A collection of arguments for invoking getQuickstartPackage.
type GetQuickstartPackageOutputArgs struct {
	// The unique identifier for the Quickstart transformation package definition within the Fivetran system
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetQuickstartPackageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickstartPackageArgs)(nil)).Elem()
}

// A collection of values returned by getQuickstartPackage.
type GetQuickstartPackageResultOutput struct{ *pulumi.OutputState }

func (GetQuickstartPackageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickstartPackageResult)(nil)).Elem()
}

func (o GetQuickstartPackageResultOutput) ToGetQuickstartPackageResultOutput() GetQuickstartPackageResultOutput {
	return o
}

func (o GetQuickstartPackageResultOutput) ToGetQuickstartPackageResultOutputWithContext(ctx context.Context) GetQuickstartPackageResultOutput {
	return o
}

// The set of connector types
func (o GetQuickstartPackageResultOutput) ConnectorTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQuickstartPackageResult) []string { return v.ConnectorTypes }).(pulumi.StringArrayOutput)
}

// The unique identifier for the Quickstart transformation package definition within the Fivetran system
func (o GetQuickstartPackageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickstartPackageResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Quickstart transformation package name
func (o GetQuickstartPackageResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickstartPackageResult) string { return v.Name }).(pulumi.StringOutput)
}

// The list of transformation output models
func (o GetQuickstartPackageResultOutput) OutputModelNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQuickstartPackageResult) []string { return v.OutputModelNames }).(pulumi.StringArrayOutput)
}

// The Quickstart package definition version
func (o GetQuickstartPackageResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickstartPackageResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQuickstartPackageResultOutput{})
}
