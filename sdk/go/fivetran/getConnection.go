// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns a connection object.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetConnection(ctx, &fivetran.GetConnectionArgs{
//				Id: "anonymous_mystery",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConnection(ctx *pulumi.Context, args *GetConnectionArgs, opts ...pulumi.InvokeOption) (*GetConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectionResult
	err := ctx.Invoke("fivetran:index/getConnection:getConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnection.
type GetConnectionArgs struct {
	DestinationSchema *GetConnectionDestinationSchema `pulumi:"destinationSchema"`
	// The unique identifier for the connection within the Fivetran system.
	Id     string               `pulumi:"id"`
	Status *GetConnectionStatus `pulumi:"status"`
}

// A collection of values returned by getConnection.
type GetConnectionResult struct {
	// The unique identifier of the user who has created the connection in your account.
	ConnectedBy string `pulumi:"connectedBy"`
	// The timestamp of the time the connection was created in your account.
	CreatedAt string `pulumi:"createdAt"`
	// The optional parameter that defines the sync start time when the sync frequency is already set or being set by the current request to 1440. It can be specified in one hour increments starting from 00:00 to 23:00. If not specified, we will use [the baseline sync start time](https://fivetran.com/docs/getting-started/syncoverview#syncfrequencyandscheduling). This parameter has no effect on the [0 to 60 minutes offset](https://fivetran.com/docs/getting-started/syncoverview#syncstarttimesandoffsets) used to determine the actual sync start time.
	DailySyncTime string `pulumi:"dailySyncTime"`
	// The level of data delay notification threshold. Possible values: LOW, NORMAL, HIGH, CUSTOM. The default value NORMAL. CUSTOM is only available for customers using the Enterprise plan or above.
	DataDelaySensitivity string `pulumi:"dataDelaySensitivity"`
	// Custom sync delay notification threshold in minutes. The default value is 0. This parameter is only used when data*delay*sensitivity set to CUSTOM.
	DataDelayThreshold int                             `pulumi:"dataDelayThreshold"`
	DestinationSchema  *GetConnectionDestinationSchema `pulumi:"destinationSchema"`
	// The timestamp of the time the connection sync failed last time.
	FailedAt string `pulumi:"failedAt"`
	// The unique identifier for the Group (Destination) within the Fivetran system.
	GroupId string `pulumi:"groupId"`
	// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the value is specified, the system will try to associate the connection with an existing agent.
	HybridDeploymentAgentId string `pulumi:"hybridDeploymentAgentId"`
	// The unique identifier for the connection within the Fivetran system.
	Id string `pulumi:"id"`
	// The name used both as the connection's name within the Fivetran system and as the source schema's name within your destination.
	Name string `pulumi:"name"`
	// Possible values: Directly, SshTunnel, ProxyAgent.
	NetworkingMethod string `pulumi:"networkingMethod"`
	// Specifies whether the connection should be paused after the free trial period has ended.
	PauseAfterTrial bool `pulumi:"pauseAfterTrial"`
	// Specifies whether the connection is paused.
	Paused bool `pulumi:"paused"`
	// The private link ID.
	PrivateLinkId string `pulumi:"privateLinkId"`
	// The proxy agent ID.
	ProxyAgentId string `pulumi:"proxyAgentId"`
	// The connection schedule configuration type. Supported values: auto, manual.
	ScheduleType string `pulumi:"scheduleType"`
	// The connector type id within the Fivetran system.
	Service string `pulumi:"service"`
	// The connector type version within the Fivetran system.
	ServiceVersion string               `pulumi:"serviceVersion"`
	Status         *GetConnectionStatus `pulumi:"status"`
	// The timestamp of the time the connection sync succeeded last time.
	SucceededAt string `pulumi:"succeededAt"`
	// The connection sync frequency in minutes.
	SyncFrequency int `pulumi:"syncFrequency"`
}

func GetConnectionOutput(ctx *pulumi.Context, args GetConnectionOutputArgs, opts ...pulumi.InvokeOption) GetConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetConnectionResultOutput, error) {
			args := v.(GetConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fivetran:index/getConnection:getConnection", args, GetConnectionResultOutput{}, options).(GetConnectionResultOutput), nil
		}).(GetConnectionResultOutput)
}

// A collection of arguments for invoking getConnection.
type GetConnectionOutputArgs struct {
	DestinationSchema GetConnectionDestinationSchemaPtrInput `pulumi:"destinationSchema"`
	// The unique identifier for the connection within the Fivetran system.
	Id     pulumi.StringInput          `pulumi:"id"`
	Status GetConnectionStatusPtrInput `pulumi:"status"`
}

func (GetConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getConnection.
type GetConnectionResultOutput struct{ *pulumi.OutputState }

func (GetConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionResult)(nil)).Elem()
}

func (o GetConnectionResultOutput) ToGetConnectionResultOutput() GetConnectionResultOutput {
	return o
}

func (o GetConnectionResultOutput) ToGetConnectionResultOutputWithContext(ctx context.Context) GetConnectionResultOutput {
	return o
}

// The unique identifier of the user who has created the connection in your account.
func (o GetConnectionResultOutput) ConnectedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.ConnectedBy }).(pulumi.StringOutput)
}

// The timestamp of the time the connection was created in your account.
func (o GetConnectionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The optional parameter that defines the sync start time when the sync frequency is already set or being set by the current request to 1440. It can be specified in one hour increments starting from 00:00 to 23:00. If not specified, we will use [the baseline sync start time](https://fivetran.com/docs/getting-started/syncoverview#syncfrequencyandscheduling). This parameter has no effect on the [0 to 60 minutes offset](https://fivetran.com/docs/getting-started/syncoverview#syncstarttimesandoffsets) used to determine the actual sync start time.
func (o GetConnectionResultOutput) DailySyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.DailySyncTime }).(pulumi.StringOutput)
}

// The level of data delay notification threshold. Possible values: LOW, NORMAL, HIGH, CUSTOM. The default value NORMAL. CUSTOM is only available for customers using the Enterprise plan or above.
func (o GetConnectionResultOutput) DataDelaySensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.DataDelaySensitivity }).(pulumi.StringOutput)
}

// Custom sync delay notification threshold in minutes. The default value is 0. This parameter is only used when data*delay*sensitivity set to CUSTOM.
func (o GetConnectionResultOutput) DataDelayThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionResult) int { return v.DataDelayThreshold }).(pulumi.IntOutput)
}

func (o GetConnectionResultOutput) DestinationSchema() GetConnectionDestinationSchemaPtrOutput {
	return o.ApplyT(func(v GetConnectionResult) *GetConnectionDestinationSchema { return v.DestinationSchema }).(GetConnectionDestinationSchemaPtrOutput)
}

// The timestamp of the time the connection sync failed last time.
func (o GetConnectionResultOutput) FailedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.FailedAt }).(pulumi.StringOutput)
}

// The unique identifier for the Group (Destination) within the Fivetran system.
func (o GetConnectionResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the value is specified, the system will try to associate the connection with an existing agent.
func (o GetConnectionResultOutput) HybridDeploymentAgentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.HybridDeploymentAgentId }).(pulumi.StringOutput)
}

// The unique identifier for the connection within the Fivetran system.
func (o GetConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name used both as the connection's name within the Fivetran system and as the source schema's name within your destination.
func (o GetConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Possible values: Directly, SshTunnel, ProxyAgent.
func (o GetConnectionResultOutput) NetworkingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.NetworkingMethod }).(pulumi.StringOutput)
}

// Specifies whether the connection should be paused after the free trial period has ended.
func (o GetConnectionResultOutput) PauseAfterTrial() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionResult) bool { return v.PauseAfterTrial }).(pulumi.BoolOutput)
}

// Specifies whether the connection is paused.
func (o GetConnectionResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// The private link ID.
func (o GetConnectionResultOutput) PrivateLinkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.PrivateLinkId }).(pulumi.StringOutput)
}

// The proxy agent ID.
func (o GetConnectionResultOutput) ProxyAgentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.ProxyAgentId }).(pulumi.StringOutput)
}

// The connection schedule configuration type. Supported values: auto, manual.
func (o GetConnectionResultOutput) ScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.ScheduleType }).(pulumi.StringOutput)
}

// The connector type id within the Fivetran system.
func (o GetConnectionResultOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.Service }).(pulumi.StringOutput)
}

// The connector type version within the Fivetran system.
func (o GetConnectionResultOutput) ServiceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.ServiceVersion }).(pulumi.StringOutput)
}

func (o GetConnectionResultOutput) Status() GetConnectionStatusPtrOutput {
	return o.ApplyT(func(v GetConnectionResult) *GetConnectionStatus { return v.Status }).(GetConnectionStatusPtrOutput)
}

// The timestamp of the time the connection sync succeeded last time.
func (o GetConnectionResultOutput) SucceededAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionResult) string { return v.SucceededAt }).(pulumi.StringOutput)
}

// The connection sync frequency in minutes.
func (o GetConnectionResultOutput) SyncFrequency() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionResult) int { return v.SyncFrequency }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionResultOutput{})
}
