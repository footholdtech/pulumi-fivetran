// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Returns schema-level metadata for an existing connector within your Fivetran account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetMetadataSchemas(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMetadataSchemas(ctx *pulumi.Context, args *GetMetadataSchemasArgs, opts ...pulumi.InvokeOption) (*GetMetadataSchemasResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMetadataSchemasResult
	err := ctx.Invoke("fivetran:index/getMetadataSchemas:getMetadataSchemas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetadataSchemas.
type GetMetadataSchemasArgs struct {
	// The unique schema identifier
	Id              string                             `pulumi:"id"`
	MetadataSchemas []GetMetadataSchemasMetadataSchema `pulumi:"metadataSchemas"`
}

// A collection of values returned by getMetadataSchemas.
type GetMetadataSchemasResult struct {
	// The unique identifier for the connector within the Fivetran system. Data-source will represent a set of schemas of connector.
	Id              string                             `pulumi:"id"`
	MetadataSchemas []GetMetadataSchemasMetadataSchema `pulumi:"metadataSchemas"`
}

func GetMetadataSchemasOutput(ctx *pulumi.Context, args GetMetadataSchemasOutputArgs, opts ...pulumi.InvokeOption) GetMetadataSchemasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMetadataSchemasResult, error) {
			args := v.(GetMetadataSchemasArgs)
			r, err := GetMetadataSchemas(ctx, &args, opts...)
			var s GetMetadataSchemasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMetadataSchemasResultOutput)
}

// A collection of arguments for invoking getMetadataSchemas.
type GetMetadataSchemasOutputArgs struct {
	// The unique schema identifier
	Id              pulumi.StringInput                         `pulumi:"id"`
	MetadataSchemas GetMetadataSchemasMetadataSchemaArrayInput `pulumi:"metadataSchemas"`
}

func (GetMetadataSchemasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetadataSchemasArgs)(nil)).Elem()
}

// A collection of values returned by getMetadataSchemas.
type GetMetadataSchemasResultOutput struct{ *pulumi.OutputState }

func (GetMetadataSchemasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetadataSchemasResult)(nil)).Elem()
}

func (o GetMetadataSchemasResultOutput) ToGetMetadataSchemasResultOutput() GetMetadataSchemasResultOutput {
	return o
}

func (o GetMetadataSchemasResultOutput) ToGetMetadataSchemasResultOutputWithContext(ctx context.Context) GetMetadataSchemasResultOutput {
	return o
}

func (o GetMetadataSchemasResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetMetadataSchemasResult] {
	return pulumix.Output[GetMetadataSchemasResult]{
		OutputState: o.OutputState,
	}
}

// The unique identifier for the connector within the Fivetran system. Data-source will represent a set of schemas of connector.
func (o GetMetadataSchemasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetadataSchemasResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMetadataSchemasResultOutput) MetadataSchemas() GetMetadataSchemasMetadataSchemaArrayOutput {
	return o.ApplyT(func(v GetMetadataSchemasResult) []GetMetadataSchemasMetadataSchema { return v.MetadataSchemas }).(GetMetadataSchemasMetadataSchemaArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMetadataSchemasResultOutput{})
}
