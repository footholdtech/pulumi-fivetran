// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns a connector membership for user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetUserConnectorMemberships(ctx, &fivetran.GetUserConnectorMembershipsArgs{
//				UserId: "user_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserConnectorMemberships(ctx *pulumi.Context, args *GetUserConnectorMembershipsArgs, opts ...pulumi.InvokeOption) (*GetUserConnectorMembershipsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserConnectorMembershipsResult
	err := ctx.Invoke("fivetran:index/getUserConnectorMemberships:getUserConnectorMemberships", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserConnectorMemberships.
type GetUserConnectorMembershipsArgs struct {
	Connectors []GetUserConnectorMembershipsConnector `pulumi:"connectors"`
	// The unique identifier for the user within your account.
	UserId string `pulumi:"userId"`
}

// A collection of values returned by getUserConnectorMemberships.
type GetUserConnectorMembershipsResult struct {
	Connectors []GetUserConnectorMembershipsConnector `pulumi:"connectors"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The unique identifier for the user within your account.
	UserId string `pulumi:"userId"`
}

func GetUserConnectorMembershipsOutput(ctx *pulumi.Context, args GetUserConnectorMembershipsOutputArgs, opts ...pulumi.InvokeOption) GetUserConnectorMembershipsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUserConnectorMembershipsResultOutput, error) {
			args := v.(GetUserConnectorMembershipsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fivetran:index/getUserConnectorMemberships:getUserConnectorMemberships", args, GetUserConnectorMembershipsResultOutput{}, options).(GetUserConnectorMembershipsResultOutput), nil
		}).(GetUserConnectorMembershipsResultOutput)
}

// A collection of arguments for invoking getUserConnectorMemberships.
type GetUserConnectorMembershipsOutputArgs struct {
	Connectors GetUserConnectorMembershipsConnectorArrayInput `pulumi:"connectors"`
	// The unique identifier for the user within your account.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetUserConnectorMembershipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserConnectorMembershipsArgs)(nil)).Elem()
}

// A collection of values returned by getUserConnectorMemberships.
type GetUserConnectorMembershipsResultOutput struct{ *pulumi.OutputState }

func (GetUserConnectorMembershipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserConnectorMembershipsResult)(nil)).Elem()
}

func (o GetUserConnectorMembershipsResultOutput) ToGetUserConnectorMembershipsResultOutput() GetUserConnectorMembershipsResultOutput {
	return o
}

func (o GetUserConnectorMembershipsResultOutput) ToGetUserConnectorMembershipsResultOutputWithContext(ctx context.Context) GetUserConnectorMembershipsResultOutput {
	return o
}

func (o GetUserConnectorMembershipsResultOutput) Connectors() GetUserConnectorMembershipsConnectorArrayOutput {
	return o.ApplyT(func(v GetUserConnectorMembershipsResult) []GetUserConnectorMembershipsConnector { return v.Connectors }).(GetUserConnectorMembershipsConnectorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserConnectorMembershipsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserConnectorMembershipsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique identifier for the user within your account.
func (o GetUserConnectorMembershipsResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserConnectorMembershipsResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserConnectorMembershipsResultOutput{})
}
