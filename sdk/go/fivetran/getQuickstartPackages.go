// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns a list of available Quickstart transformation package metadata details
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetQuickstartPackages(ctx, &fivetran.GetQuickstartPackagesArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetQuickstartPackages(ctx *pulumi.Context, args *GetQuickstartPackagesArgs, opts ...pulumi.InvokeOption) (*GetQuickstartPackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQuickstartPackagesResult
	err := ctx.Invoke("fivetran:index/getQuickstartPackages:getQuickstartPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQuickstartPackages.
type GetQuickstartPackagesArgs struct {
	Packages []GetQuickstartPackagesPackage `pulumi:"packages"`
}

// A collection of values returned by getQuickstartPackages.
type GetQuickstartPackagesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string                         `pulumi:"id"`
	Packages []GetQuickstartPackagesPackage `pulumi:"packages"`
}

func GetQuickstartPackagesOutput(ctx *pulumi.Context, args GetQuickstartPackagesOutputArgs, opts ...pulumi.InvokeOption) GetQuickstartPackagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetQuickstartPackagesResultOutput, error) {
			args := v.(GetQuickstartPackagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fivetran:index/getQuickstartPackages:getQuickstartPackages", args, GetQuickstartPackagesResultOutput{}, options).(GetQuickstartPackagesResultOutput), nil
		}).(GetQuickstartPackagesResultOutput)
}

// A collection of arguments for invoking getQuickstartPackages.
type GetQuickstartPackagesOutputArgs struct {
	Packages GetQuickstartPackagesPackageArrayInput `pulumi:"packages"`
}

func (GetQuickstartPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickstartPackagesArgs)(nil)).Elem()
}

// A collection of values returned by getQuickstartPackages.
type GetQuickstartPackagesResultOutput struct{ *pulumi.OutputState }

func (GetQuickstartPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickstartPackagesResult)(nil)).Elem()
}

func (o GetQuickstartPackagesResultOutput) ToGetQuickstartPackagesResultOutput() GetQuickstartPackagesResultOutput {
	return o
}

func (o GetQuickstartPackagesResultOutput) ToGetQuickstartPackagesResultOutputWithContext(ctx context.Context) GetQuickstartPackagesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetQuickstartPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickstartPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetQuickstartPackagesResultOutput) Packages() GetQuickstartPackagesPackageArrayOutput {
	return o.ApplyT(func(v GetQuickstartPackagesResult) []GetQuickstartPackagesPackage { return v.Packages }).(GetQuickstartPackagesPackageArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQuickstartPackagesResultOutput{})
}
