// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns public key from SSH key pair associated with the group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetGroupSshKey(ctx, &fivetran.GetGroupSshKeyArgs{
//				Id: "group_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroupSshKey(ctx *pulumi.Context, args *GetGroupSshKeyArgs, opts ...pulumi.InvokeOption) (*GetGroupSshKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGroupSshKeyResult
	err := ctx.Invoke("fivetran:index/getGroupSshKey:getGroupSshKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroupSshKey.
type GetGroupSshKeyArgs struct {
	// The unique identifier for the group within the Fivetran system.
	Id string `pulumi:"id"`
}

// A collection of values returned by getGroupSshKey.
type GetGroupSshKeyResult struct {
	// The unique identifier for the group within the Fivetran system.
	Id string `pulumi:"id"`
	// Public key from SSH key pair associated with the group.
	PublicKey string `pulumi:"publicKey"`
}

func GetGroupSshKeyOutput(ctx *pulumi.Context, args GetGroupSshKeyOutputArgs, opts ...pulumi.InvokeOption) GetGroupSshKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupSshKeyResultOutput, error) {
			args := v.(GetGroupSshKeyArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetGroupSshKeyResult
			secret, err := ctx.InvokePackageRaw("fivetran:index/getGroupSshKey:getGroupSshKey", args, &rv, "", opts...)
			if err != nil {
				return GetGroupSshKeyResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetGroupSshKeyResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetGroupSshKeyResultOutput), nil
			}
			return output, nil
		}).(GetGroupSshKeyResultOutput)
}

// A collection of arguments for invoking getGroupSshKey.
type GetGroupSshKeyOutputArgs struct {
	// The unique identifier for the group within the Fivetran system.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetGroupSshKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupSshKeyArgs)(nil)).Elem()
}

// A collection of values returned by getGroupSshKey.
type GetGroupSshKeyResultOutput struct{ *pulumi.OutputState }

func (GetGroupSshKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupSshKeyResult)(nil)).Elem()
}

func (o GetGroupSshKeyResultOutput) ToGetGroupSshKeyResultOutput() GetGroupSshKeyResultOutput {
	return o
}

func (o GetGroupSshKeyResultOutput) ToGetGroupSshKeyResultOutputWithContext(ctx context.Context) GetGroupSshKeyResultOutput {
	return o
}

// The unique identifier for the group within the Fivetran system.
func (o GetGroupSshKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupSshKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Public key from SSH key pair associated with the group.
func (o GetGroupSshKeyResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupSshKeyResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupSshKeyResultOutput{})
}
