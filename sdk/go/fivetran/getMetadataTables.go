// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source returns table-level metadata for an existing connector within your Fivetran account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetMetadataTables(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMetadataTables(ctx *pulumi.Context, args *GetMetadataTablesArgs, opts ...pulumi.InvokeOption) (*GetMetadataTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMetadataTablesResult
	err := ctx.Invoke("fivetran:index/getMetadataTables:getMetadataTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetadataTables.
type GetMetadataTablesArgs struct {
	// The unique table identifier
	Id             string                           `pulumi:"id"`
	MetadataTables []GetMetadataTablesMetadataTable `pulumi:"metadataTables"`
}

// A collection of values returned by getMetadataTables.
type GetMetadataTablesResult struct {
	// The unique identifier for the connector within the Fivetran system. Data-source will represent a set of tables of connector.
	Id             string                           `pulumi:"id"`
	MetadataTables []GetMetadataTablesMetadataTable `pulumi:"metadataTables"`
}

func GetMetadataTablesOutput(ctx *pulumi.Context, args GetMetadataTablesOutputArgs, opts ...pulumi.InvokeOption) GetMetadataTablesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMetadataTablesResult, error) {
			args := v.(GetMetadataTablesArgs)
			r, err := GetMetadataTables(ctx, &args, opts...)
			var s GetMetadataTablesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMetadataTablesResultOutput)
}

// A collection of arguments for invoking getMetadataTables.
type GetMetadataTablesOutputArgs struct {
	// The unique table identifier
	Id             pulumi.StringInput                       `pulumi:"id"`
	MetadataTables GetMetadataTablesMetadataTableArrayInput `pulumi:"metadataTables"`
}

func (GetMetadataTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetadataTablesArgs)(nil)).Elem()
}

// A collection of values returned by getMetadataTables.
type GetMetadataTablesResultOutput struct{ *pulumi.OutputState }

func (GetMetadataTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetadataTablesResult)(nil)).Elem()
}

func (o GetMetadataTablesResultOutput) ToGetMetadataTablesResultOutput() GetMetadataTablesResultOutput {
	return o
}

func (o GetMetadataTablesResultOutput) ToGetMetadataTablesResultOutputWithContext(ctx context.Context) GetMetadataTablesResultOutput {
	return o
}

func (o GetMetadataTablesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetMetadataTablesResult] {
	return pulumix.Output[GetMetadataTablesResult]{
		OutputState: o.OutputState,
	}
}

// The unique identifier for the connector within the Fivetran system. Data-source will represent a set of tables of connector.
func (o GetMetadataTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetadataTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMetadataTablesResultOutput) MetadataTables() GetMetadataTablesMetadataTableArrayOutput {
	return o.ApplyT(func(v GetMetadataTablesResult) []GetMetadataTablesMetadataTable { return v.MetadataTables }).(GetMetadataTablesMetadataTableArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMetadataTablesResultOutput{})
}
