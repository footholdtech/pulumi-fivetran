// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source returns a logging service object.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.LookupExternalLogging(ctx, &fivetran.LookupExternalLoggingArgs{
//				Id: "anonymous_mystery",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupExternalLogging(ctx *pulumi.Context, args *LookupExternalLoggingArgs, opts ...pulumi.InvokeOption) (*LookupExternalLoggingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupExternalLoggingResult
	err := ctx.Invoke("fivetran:index/getExternalLogging:getExternalLogging", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExternalLogging.
type LookupExternalLoggingArgs struct {
	Configs []GetExternalLoggingConfig `pulumi:"configs"`
	// The unique identifier for the log service within the Fivetran system.
	Id string `pulumi:"id"`
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests *bool `pulumi:"runSetupTests"`
}

// A collection of values returned by getExternalLogging.
type LookupExternalLoggingResult struct {
	Configs []GetExternalLoggingConfig `pulumi:"configs"`
	// The boolean value specifying whether the log service is enabled.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier for the log service within the Fivetran system.
	GroupId string `pulumi:"groupId"`
	// The unique identifier for the log service within the Fivetran system.
	Id string `pulumi:"id"`
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests *bool `pulumi:"runSetupTests"`
	// The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
	Service string `pulumi:"service"`
}

func LookupExternalLoggingOutput(ctx *pulumi.Context, args LookupExternalLoggingOutputArgs, opts ...pulumi.InvokeOption) LookupExternalLoggingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupExternalLoggingResult, error) {
			args := v.(LookupExternalLoggingArgs)
			r, err := LookupExternalLogging(ctx, &args, opts...)
			var s LookupExternalLoggingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupExternalLoggingResultOutput)
}

// A collection of arguments for invoking getExternalLogging.
type LookupExternalLoggingOutputArgs struct {
	Configs GetExternalLoggingConfigArrayInput `pulumi:"configs"`
	// The unique identifier for the log service within the Fivetran system.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests pulumi.BoolPtrInput `pulumi:"runSetupTests"`
}

func (LookupExternalLoggingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExternalLoggingArgs)(nil)).Elem()
}

// A collection of values returned by getExternalLogging.
type LookupExternalLoggingResultOutput struct{ *pulumi.OutputState }

func (LookupExternalLoggingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExternalLoggingResult)(nil)).Elem()
}

func (o LookupExternalLoggingResultOutput) ToLookupExternalLoggingResultOutput() LookupExternalLoggingResultOutput {
	return o
}

func (o LookupExternalLoggingResultOutput) ToLookupExternalLoggingResultOutputWithContext(ctx context.Context) LookupExternalLoggingResultOutput {
	return o
}

func (o LookupExternalLoggingResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupExternalLoggingResult] {
	return pulumix.Output[LookupExternalLoggingResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupExternalLoggingResultOutput) Configs() GetExternalLoggingConfigArrayOutput {
	return o.ApplyT(func(v LookupExternalLoggingResult) []GetExternalLoggingConfig { return v.Configs }).(GetExternalLoggingConfigArrayOutput)
}

// The boolean value specifying whether the log service is enabled.
func (o LookupExternalLoggingResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupExternalLoggingResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier for the log service within the Fivetran system.
func (o LookupExternalLoggingResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalLoggingResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The unique identifier for the log service within the Fivetran system.
func (o LookupExternalLoggingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalLoggingResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether the setup tests should be run automatically. The default value is TRUE.
func (o LookupExternalLoggingResultOutput) RunSetupTests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupExternalLoggingResult) *bool { return v.RunSetupTests }).(pulumi.BoolPtrOutput)
}

// The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
func (o LookupExternalLoggingResultOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalLoggingResult) string { return v.Service }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExternalLoggingResultOutput{})
}
