// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"errors"
	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// 1. To import an existing `fivetran_external_logging` resource into your Terraform state, you need to get **External Logging Group ID** on the external logging page in your Fivetran dashboard.
//
// 2. To retrieve existing destinations, use the [fivetran_destinations data source](/docs/data-sources/destinations).
//
// 3. Define an empty resource in your `.tf` configuration:
//
// hcl
//
// resource "fivetran_external_logging" "my_imported_external_logging" {
//
// }
//
// 4. Run the `pulumi import` command with the following parameters:
//
// ```sh
// $ pulumi import fivetran:index/externalLogging:ExternalLogging my_imported_external_logging {your External Logging Group ID}
// ```
//
// 5. Use the `terraform state show` command to get the values from the state:
//
// terraform state show 'fivetran_external_logging.my_imported_external_logging'
//
// 6. Copy the values and paste them to your `.tf` configuration.
//
// -> The `config` object in the state contains all properties defined in the schema. You need to remove properties from the `config` that are not related to destinations. See the [Fivetran REST API documentation](https://fivetran.com/docs/rest-api/log-service-management#logservicesetupconfigurations) for reference to find the properties you need to keep in the `config` section.
type ExternalLogging struct {
	pulumi.CustomResourceState

	Config ExternalLoggingConfigPtrOutput `pulumi:"config"`
	// The boolean value specifying whether the log service is enabled.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The unique identifier for the log service within the Fivetran system.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests pulumi.BoolPtrOutput `pulumi:"runSetupTests"`
	// The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
	Service pulumi.StringOutput `pulumi:"service"`
}

// NewExternalLogging registers a new resource with the given unique name, arguments, and options.
func NewExternalLogging(ctx *pulumi.Context,
	name string, args *ExternalLoggingArgs, opts ...pulumi.ResourceOption) (*ExternalLogging, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalLogging
	err := ctx.RegisterResource("fivetran:index/externalLogging:ExternalLogging", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalLogging gets an existing ExternalLogging resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalLogging(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalLoggingState, opts ...pulumi.ResourceOption) (*ExternalLogging, error) {
	var resource ExternalLogging
	err := ctx.ReadResource("fivetran:index/externalLogging:ExternalLogging", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalLogging resources.
type externalLoggingState struct {
	Config *ExternalLoggingConfig `pulumi:"config"`
	// The boolean value specifying whether the log service is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The unique identifier for the log service within the Fivetran system.
	GroupId *string `pulumi:"groupId"`
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests *bool `pulumi:"runSetupTests"`
	// The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
	Service *string `pulumi:"service"`
}

type ExternalLoggingState struct {
	Config ExternalLoggingConfigPtrInput
	// The boolean value specifying whether the log service is enabled.
	Enabled pulumi.BoolPtrInput
	// The unique identifier for the log service within the Fivetran system.
	GroupId pulumi.StringPtrInput
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests pulumi.BoolPtrInput
	// The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
	Service pulumi.StringPtrInput
}

func (ExternalLoggingState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalLoggingState)(nil)).Elem()
}

type externalLoggingArgs struct {
	Config *ExternalLoggingConfig `pulumi:"config"`
	// The boolean value specifying whether the log service is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The unique identifier for the log service within the Fivetran system.
	GroupId string `pulumi:"groupId"`
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests *bool `pulumi:"runSetupTests"`
	// The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
	Service string `pulumi:"service"`
}

// The set of arguments for constructing a ExternalLogging resource.
type ExternalLoggingArgs struct {
	Config ExternalLoggingConfigPtrInput
	// The boolean value specifying whether the log service is enabled.
	Enabled pulumi.BoolPtrInput
	// The unique identifier for the log service within the Fivetran system.
	GroupId pulumi.StringInput
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests pulumi.BoolPtrInput
	// The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
	Service pulumi.StringInput
}

func (ExternalLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalLoggingArgs)(nil)).Elem()
}

type ExternalLoggingInput interface {
	pulumi.Input

	ToExternalLoggingOutput() ExternalLoggingOutput
	ToExternalLoggingOutputWithContext(ctx context.Context) ExternalLoggingOutput
}

func (*ExternalLogging) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalLogging)(nil)).Elem()
}

func (i *ExternalLogging) ToExternalLoggingOutput() ExternalLoggingOutput {
	return i.ToExternalLoggingOutputWithContext(context.Background())
}

func (i *ExternalLogging) ToExternalLoggingOutputWithContext(ctx context.Context) ExternalLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalLoggingOutput)
}

// ExternalLoggingArrayInput is an input type that accepts ExternalLoggingArray and ExternalLoggingArrayOutput values.
// You can construct a concrete instance of `ExternalLoggingArrayInput` via:
//
//	ExternalLoggingArray{ ExternalLoggingArgs{...} }
type ExternalLoggingArrayInput interface {
	pulumi.Input

	ToExternalLoggingArrayOutput() ExternalLoggingArrayOutput
	ToExternalLoggingArrayOutputWithContext(context.Context) ExternalLoggingArrayOutput
}

type ExternalLoggingArray []ExternalLoggingInput

func (ExternalLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalLogging)(nil)).Elem()
}

func (i ExternalLoggingArray) ToExternalLoggingArrayOutput() ExternalLoggingArrayOutput {
	return i.ToExternalLoggingArrayOutputWithContext(context.Background())
}

func (i ExternalLoggingArray) ToExternalLoggingArrayOutputWithContext(ctx context.Context) ExternalLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalLoggingArrayOutput)
}

// ExternalLoggingMapInput is an input type that accepts ExternalLoggingMap and ExternalLoggingMapOutput values.
// You can construct a concrete instance of `ExternalLoggingMapInput` via:
//
//	ExternalLoggingMap{ "key": ExternalLoggingArgs{...} }
type ExternalLoggingMapInput interface {
	pulumi.Input

	ToExternalLoggingMapOutput() ExternalLoggingMapOutput
	ToExternalLoggingMapOutputWithContext(context.Context) ExternalLoggingMapOutput
}

type ExternalLoggingMap map[string]ExternalLoggingInput

func (ExternalLoggingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalLogging)(nil)).Elem()
}

func (i ExternalLoggingMap) ToExternalLoggingMapOutput() ExternalLoggingMapOutput {
	return i.ToExternalLoggingMapOutputWithContext(context.Background())
}

func (i ExternalLoggingMap) ToExternalLoggingMapOutputWithContext(ctx context.Context) ExternalLoggingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalLoggingMapOutput)
}

type ExternalLoggingOutput struct{ *pulumi.OutputState }

func (ExternalLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalLogging)(nil)).Elem()
}

func (o ExternalLoggingOutput) ToExternalLoggingOutput() ExternalLoggingOutput {
	return o
}

func (o ExternalLoggingOutput) ToExternalLoggingOutputWithContext(ctx context.Context) ExternalLoggingOutput {
	return o
}

func (o ExternalLoggingOutput) Config() ExternalLoggingConfigPtrOutput {
	return o.ApplyT(func(v *ExternalLogging) ExternalLoggingConfigPtrOutput { return v.Config }).(ExternalLoggingConfigPtrOutput)
}

// The boolean value specifying whether the log service is enabled.
func (o ExternalLoggingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalLogging) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The unique identifier for the log service within the Fivetran system.
func (o ExternalLoggingOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalLogging) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// Specifies whether the setup tests should be run automatically. The default value is TRUE.
func (o ExternalLoggingOutput) RunSetupTests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalLogging) pulumi.BoolPtrOutput { return v.RunSetupTests }).(pulumi.BoolPtrOutput)
}

// The name for the log service type within the Fivetran system. We support the following log services: azure*monitor*log, cloudwatch, datadog*log, new*relic_log, splunkLog, stackdriver.
func (o ExternalLoggingOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalLogging) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

type ExternalLoggingArrayOutput struct{ *pulumi.OutputState }

func (ExternalLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalLogging)(nil)).Elem()
}

func (o ExternalLoggingArrayOutput) ToExternalLoggingArrayOutput() ExternalLoggingArrayOutput {
	return o
}

func (o ExternalLoggingArrayOutput) ToExternalLoggingArrayOutputWithContext(ctx context.Context) ExternalLoggingArrayOutput {
	return o
}

func (o ExternalLoggingArrayOutput) Index(i pulumi.IntInput) ExternalLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalLogging {
		return vs[0].([]*ExternalLogging)[vs[1].(int)]
	}).(ExternalLoggingOutput)
}

type ExternalLoggingMapOutput struct{ *pulumi.OutputState }

func (ExternalLoggingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalLogging)(nil)).Elem()
}

func (o ExternalLoggingMapOutput) ToExternalLoggingMapOutput() ExternalLoggingMapOutput {
	return o
}

func (o ExternalLoggingMapOutput) ToExternalLoggingMapOutputWithContext(ctx context.Context) ExternalLoggingMapOutput {
	return o
}

func (o ExternalLoggingMapOutput) MapIndex(k pulumi.StringInput) ExternalLoggingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalLogging {
		return vs[0].(map[string]*ExternalLogging)[vs[1].(string)]
	}).(ExternalLoggingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalLoggingInput)(nil)).Elem(), &ExternalLogging{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalLoggingArrayInput)(nil)).Elem(), ExternalLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalLoggingMapInput)(nil)).Elem(), ExternalLoggingMap{})
	pulumi.RegisterOutputType(ExternalLoggingOutput{})
	pulumi.RegisterOutputType(ExternalLoggingArrayOutput{})
	pulumi.RegisterOutputType(ExternalLoggingMapOutput{})
}
