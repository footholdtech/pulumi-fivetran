// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns a destination object.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.LookupDestination(ctx, &fivetran.LookupDestinationArgs{
//				Id: "anonymous_mystery",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDestination(ctx *pulumi.Context, args *LookupDestinationArgs, opts ...pulumi.InvokeOption) (*LookupDestinationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDestinationResult
	err := ctx.Invoke("fivetran:index/getDestination:getDestination", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDestination.
type LookupDestinationArgs struct {
	Configs []GetDestinationConfig `pulumi:"configs"`
	// The unique identifier for the destination within the Fivetran system
	Id string `pulumi:"id"`
}

// A collection of values returned by getDestination.
type LookupDestinationResult struct {
	Configs []GetDestinationConfig `pulumi:"configs"`
	// The unique identifier for the Group within the Fivetran system.
	GroupId string `pulumi:"groupId"`
	// The unique identifier for the destination within the Fivetran system
	Id string `pulumi:"id"`
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region string `pulumi:"region"`
	// The destination type name within the Fivetran system
	Service string `pulumi:"service"`
	// Destination setup status
	SetupStatus string `pulumi:"setupStatus"`
	// Determines the time zone for the Fivetran sync schedule.
	TimeZoneOffset string `pulumi:"timeZoneOffset"`
}

func LookupDestinationOutput(ctx *pulumi.Context, args LookupDestinationOutputArgs, opts ...pulumi.InvokeOption) LookupDestinationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDestinationResult, error) {
			args := v.(LookupDestinationArgs)
			r, err := LookupDestination(ctx, &args, opts...)
			var s LookupDestinationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDestinationResultOutput)
}

// A collection of arguments for invoking getDestination.
type LookupDestinationOutputArgs struct {
	Configs GetDestinationConfigArrayInput `pulumi:"configs"`
	// The unique identifier for the destination within the Fivetran system
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDestinationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationArgs)(nil)).Elem()
}

// A collection of values returned by getDestination.
type LookupDestinationResultOutput struct{ *pulumi.OutputState }

func (LookupDestinationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationResult)(nil)).Elem()
}

func (o LookupDestinationResultOutput) ToLookupDestinationResultOutput() LookupDestinationResultOutput {
	return o
}

func (o LookupDestinationResultOutput) ToLookupDestinationResultOutputWithContext(ctx context.Context) LookupDestinationResultOutput {
	return o
}

func (o LookupDestinationResultOutput) Configs() GetDestinationConfigArrayOutput {
	return o.ApplyT(func(v LookupDestinationResult) []GetDestinationConfig { return v.Configs }).(GetDestinationConfigArrayOutput)
}

// The unique identifier for the Group within the Fivetran system.
func (o LookupDestinationResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The unique identifier for the destination within the Fivetran system
func (o LookupDestinationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Data processing location. This is where Fivetran will operate and run computation on data.
func (o LookupDestinationResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationResult) string { return v.Region }).(pulumi.StringOutput)
}

// The destination type name within the Fivetran system
func (o LookupDestinationResultOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationResult) string { return v.Service }).(pulumi.StringOutput)
}

// Destination setup status
func (o LookupDestinationResultOutput) SetupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationResult) string { return v.SetupStatus }).(pulumi.StringOutput)
}

// Determines the time zone for the Fivetran sync schedule.
func (o LookupDestinationResultOutput) TimeZoneOffset() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationResult) string { return v.TimeZoneOffset }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDestinationResultOutput{})
}
