// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns a connection membership for user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetUserConnectionMemberships(ctx, &fivetran.GetUserConnectionMembershipsArgs{
//				Id: "user_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserConnectionMemberships(ctx *pulumi.Context, args *GetUserConnectionMembershipsArgs, opts ...pulumi.InvokeOption) (*GetUserConnectionMembershipsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserConnectionMembershipsResult
	err := ctx.Invoke("fivetran:index/getUserConnectionMemberships:getUserConnectionMemberships", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserConnectionMemberships.
type GetUserConnectionMembershipsArgs struct {
	Connections []GetUserConnectionMembershipsConnection `pulumi:"connections"`
	// The unique identifier for the user within your account.
	Id string `pulumi:"id"`
}

// A collection of values returned by getUserConnectionMemberships.
type GetUserConnectionMembershipsResult struct {
	Connections []GetUserConnectionMembershipsConnection `pulumi:"connections"`
	// The unique identifier for the user within your account.
	Id string `pulumi:"id"`
}

func GetUserConnectionMembershipsOutput(ctx *pulumi.Context, args GetUserConnectionMembershipsOutputArgs, opts ...pulumi.InvokeOption) GetUserConnectionMembershipsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUserConnectionMembershipsResultOutput, error) {
			args := v.(GetUserConnectionMembershipsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fivetran:index/getUserConnectionMemberships:getUserConnectionMemberships", args, GetUserConnectionMembershipsResultOutput{}, options).(GetUserConnectionMembershipsResultOutput), nil
		}).(GetUserConnectionMembershipsResultOutput)
}

// A collection of arguments for invoking getUserConnectionMemberships.
type GetUserConnectionMembershipsOutputArgs struct {
	Connections GetUserConnectionMembershipsConnectionArrayInput `pulumi:"connections"`
	// The unique identifier for the user within your account.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetUserConnectionMembershipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserConnectionMembershipsArgs)(nil)).Elem()
}

// A collection of values returned by getUserConnectionMemberships.
type GetUserConnectionMembershipsResultOutput struct{ *pulumi.OutputState }

func (GetUserConnectionMembershipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserConnectionMembershipsResult)(nil)).Elem()
}

func (o GetUserConnectionMembershipsResultOutput) ToGetUserConnectionMembershipsResultOutput() GetUserConnectionMembershipsResultOutput {
	return o
}

func (o GetUserConnectionMembershipsResultOutput) ToGetUserConnectionMembershipsResultOutputWithContext(ctx context.Context) GetUserConnectionMembershipsResultOutput {
	return o
}

func (o GetUserConnectionMembershipsResultOutput) Connections() GetUserConnectionMembershipsConnectionArrayOutput {
	return o.ApplyT(func(v GetUserConnectionMembershipsResult) []GetUserConnectionMembershipsConnection {
		return v.Connections
	}).(GetUserConnectionMembershipsConnectionArrayOutput)
}

// The unique identifier for the user within your account.
func (o GetUserConnectionMembershipsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserConnectionMembershipsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserConnectionMembershipsResultOutput{})
}
