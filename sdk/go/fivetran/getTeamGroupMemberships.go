// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source returns a list of group memberships within team object.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetTeamGroupMemberships(ctx, &fivetran.GetTeamGroupMembershipsArgs{
//				TeamId: "team_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTeamGroupMemberships(ctx *pulumi.Context, args *GetTeamGroupMembershipsArgs, opts ...pulumi.InvokeOption) (*GetTeamGroupMembershipsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTeamGroupMembershipsResult
	err := ctx.Invoke("fivetran:index/getTeamGroupMemberships:getTeamGroupMemberships", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTeamGroupMemberships.
type GetTeamGroupMembershipsArgs struct {
	Groups []GetTeamGroupMembershipsGroup `pulumi:"groups"`
	// The unique identifier for the team within your account.
	TeamId string `pulumi:"teamId"`
}

// A collection of values returned by getTeamGroupMemberships.
type GetTeamGroupMembershipsResult struct {
	Groups []GetTeamGroupMembershipsGroup `pulumi:"groups"`
	// The unique identifier for resource.
	Id string `pulumi:"id"`
	// The unique identifier for the team within your account.
	TeamId string `pulumi:"teamId"`
}

func GetTeamGroupMembershipsOutput(ctx *pulumi.Context, args GetTeamGroupMembershipsOutputArgs, opts ...pulumi.InvokeOption) GetTeamGroupMembershipsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTeamGroupMembershipsResult, error) {
			args := v.(GetTeamGroupMembershipsArgs)
			r, err := GetTeamGroupMemberships(ctx, &args, opts...)
			var s GetTeamGroupMembershipsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTeamGroupMembershipsResultOutput)
}

// A collection of arguments for invoking getTeamGroupMemberships.
type GetTeamGroupMembershipsOutputArgs struct {
	Groups GetTeamGroupMembershipsGroupArrayInput `pulumi:"groups"`
	// The unique identifier for the team within your account.
	TeamId pulumi.StringInput `pulumi:"teamId"`
}

func (GetTeamGroupMembershipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamGroupMembershipsArgs)(nil)).Elem()
}

// A collection of values returned by getTeamGroupMemberships.
type GetTeamGroupMembershipsResultOutput struct{ *pulumi.OutputState }

func (GetTeamGroupMembershipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamGroupMembershipsResult)(nil)).Elem()
}

func (o GetTeamGroupMembershipsResultOutput) ToGetTeamGroupMembershipsResultOutput() GetTeamGroupMembershipsResultOutput {
	return o
}

func (o GetTeamGroupMembershipsResultOutput) ToGetTeamGroupMembershipsResultOutputWithContext(ctx context.Context) GetTeamGroupMembershipsResultOutput {
	return o
}

func (o GetTeamGroupMembershipsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetTeamGroupMembershipsResult] {
	return pulumix.Output[GetTeamGroupMembershipsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetTeamGroupMembershipsResultOutput) Groups() GetTeamGroupMembershipsGroupArrayOutput {
	return o.ApplyT(func(v GetTeamGroupMembershipsResult) []GetTeamGroupMembershipsGroup { return v.Groups }).(GetTeamGroupMembershipsGroupArrayOutput)
}

// The unique identifier for resource.
func (o GetTeamGroupMembershipsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamGroupMembershipsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique identifier for the team within your account.
func (o GetTeamGroupMembershipsResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamGroupMembershipsResult) string { return v.TeamId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTeamGroupMembershipsResultOutput{})
}
