// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns a list of group memberships for user.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetUserGroupMemberships(ctx, &fivetran.GetUserGroupMembershipsArgs{
//				UserId: "user_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetUserGroupMemberships(ctx *pulumi.Context, args *GetUserGroupMembershipsArgs, opts ...pulumi.InvokeOption) (*GetUserGroupMembershipsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserGroupMembershipsResult
	err := ctx.Invoke("fivetran:index/getUserGroupMemberships:getUserGroupMemberships", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroupMemberships.
type GetUserGroupMembershipsArgs struct {
	Groups []GetUserGroupMembershipsGroup `pulumi:"groups"`
	// The unique identifier for the user within your account.
	UserId string `pulumi:"userId"`
}

// A collection of values returned by getUserGroupMemberships.
type GetUserGroupMembershipsResult struct {
	Groups []GetUserGroupMembershipsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The unique identifier for the user within your account.
	UserId string `pulumi:"userId"`
}

func GetUserGroupMembershipsOutput(ctx *pulumi.Context, args GetUserGroupMembershipsOutputArgs, opts ...pulumi.InvokeOption) GetUserGroupMembershipsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserGroupMembershipsResult, error) {
			args := v.(GetUserGroupMembershipsArgs)
			r, err := GetUserGroupMemberships(ctx, &args, opts...)
			var s GetUserGroupMembershipsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUserGroupMembershipsResultOutput)
}

// A collection of arguments for invoking getUserGroupMemberships.
type GetUserGroupMembershipsOutputArgs struct {
	Groups GetUserGroupMembershipsGroupArrayInput `pulumi:"groups"`
	// The unique identifier for the user within your account.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetUserGroupMembershipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipsArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroupMemberships.
type GetUserGroupMembershipsResultOutput struct{ *pulumi.OutputState }

func (GetUserGroupMembershipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipsResult)(nil)).Elem()
}

func (o GetUserGroupMembershipsResultOutput) ToGetUserGroupMembershipsResultOutput() GetUserGroupMembershipsResultOutput {
	return o
}

func (o GetUserGroupMembershipsResultOutput) ToGetUserGroupMembershipsResultOutputWithContext(ctx context.Context) GetUserGroupMembershipsResultOutput {
	return o
}

func (o GetUserGroupMembershipsResultOutput) Groups() GetUserGroupMembershipsGroupArrayOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsResult) []GetUserGroupMembershipsGroup { return v.Groups }).(GetUserGroupMembershipsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserGroupMembershipsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique identifier for the user within your account.
func (o GetUserGroupMembershipsResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipsResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserGroupMembershipsResultOutput{})
}
