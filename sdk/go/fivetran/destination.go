// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"errors"
	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// 1. To import an existing `fivetran_destination` resource into your Terraform state, you need to get **Destination Group ID** on the destination page in your Fivetran dashboard.
//
// To retrieve existing groups, use the [fivetran_groups data source](/providers/fivetran/fivetran/latest/docs/data-sources/groups).
//
// 2. Define an empty resource in your `.tf` configuration:
//
// hcl
//
// resource "fivetran_destination" "my_imported_destination" {
//
// }
//
// 3. Run the `pulumi import` command with the following parameters:
//
// ```sh
// $ pulumi import fivetran:index/destination:Destination my_imported_destination {your Destination Group ID}
// ```
//
// 4. Use the `terraform state show` command to get the values from the state:
//
// terraform state show 'fivetran_destination.my_imported_destination'
//
// 5. Copy the values and paste them to your `.tf` configuration.
//
// -> The `config` object in the state contains all properties defined in the schema. You need to remove properties from the `config` that are not related to destinations. See the [Fivetran REST API documentation](https://fivetran.com/docs/rest-api/destinations/config) for reference to find the properties you need to keep in the `config` section.
type Destination struct {
	pulumi.CustomResourceState

	Config DestinationConfigPtrOutput `pulumi:"config"`
	// Shift my UTC offset with daylight savings time (US Only)
	DaylightSavingTimeEnabled pulumi.BoolOutput `pulumi:"daylightSavingTimeEnabled"`
	// The unique identifier for the Group within the Fivetran system.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the
	// value is specified, the system will try to associate the connection with an existing agent.
	HybridDeploymentAgentId pulumi.StringPtrOutput `pulumi:"hybridDeploymentAgentId"`
	// Possible values: Directly, SshTunnel, ProxyAgent.
	NetworkingMethod pulumi.StringOutput `pulumi:"networkingMethod"`
	// The private link ID.
	PrivateLinkId pulumi.StringPtrOutput `pulumi:"privateLinkId"`
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests pulumi.BoolOutput `pulumi:"runSetupTests"`
	// The destination type id within the Fivetran system.
	Service pulumi.StringOutput `pulumi:"service"`
	// Destination setup status.
	SetupStatus pulumi.StringOutput `pulumi:"setupStatus"`
	// Determines the time zone for the Fivetran sync schedule.
	TimeZoneOffset pulumi.StringOutput          `pulumi:"timeZoneOffset"`
	Timeouts       DestinationTimeoutsPtrOutput `pulumi:"timeouts"`
	// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
	TrustCertificates pulumi.BoolOutput `pulumi:"trustCertificates"`
	// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
	TrustFingerprints pulumi.BoolOutput `pulumi:"trustFingerprints"`
}

// NewDestination registers a new resource with the given unique name, arguments, and options.
func NewDestination(ctx *pulumi.Context,
	name string, args *DestinationArgs, opts ...pulumi.ResourceOption) (*Destination, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.TimeZoneOffset == nil {
		return nil, errors.New("invalid value for required argument 'TimeZoneOffset'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Destination
	err := ctx.RegisterResource("fivetran:index/destination:Destination", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDestination gets an existing Destination resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDestination(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DestinationState, opts ...pulumi.ResourceOption) (*Destination, error) {
	var resource Destination
	err := ctx.ReadResource("fivetran:index/destination:Destination", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Destination resources.
type destinationState struct {
	Config *DestinationConfig `pulumi:"config"`
	// Shift my UTC offset with daylight savings time (US Only)
	DaylightSavingTimeEnabled *bool `pulumi:"daylightSavingTimeEnabled"`
	// The unique identifier for the Group within the Fivetran system.
	GroupId *string `pulumi:"groupId"`
	// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the
	// value is specified, the system will try to associate the connection with an existing agent.
	HybridDeploymentAgentId *string `pulumi:"hybridDeploymentAgentId"`
	// Possible values: Directly, SshTunnel, ProxyAgent.
	NetworkingMethod *string `pulumi:"networkingMethod"`
	// The private link ID.
	PrivateLinkId *string `pulumi:"privateLinkId"`
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region *string `pulumi:"region"`
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests *bool `pulumi:"runSetupTests"`
	// The destination type id within the Fivetran system.
	Service *string `pulumi:"service"`
	// Destination setup status.
	SetupStatus *string `pulumi:"setupStatus"`
	// Determines the time zone for the Fivetran sync schedule.
	TimeZoneOffset *string              `pulumi:"timeZoneOffset"`
	Timeouts       *DestinationTimeouts `pulumi:"timeouts"`
	// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
	TrustCertificates *bool `pulumi:"trustCertificates"`
	// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
	TrustFingerprints *bool `pulumi:"trustFingerprints"`
}

type DestinationState struct {
	Config DestinationConfigPtrInput
	// Shift my UTC offset with daylight savings time (US Only)
	DaylightSavingTimeEnabled pulumi.BoolPtrInput
	// The unique identifier for the Group within the Fivetran system.
	GroupId pulumi.StringPtrInput
	// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the
	// value is specified, the system will try to associate the connection with an existing agent.
	HybridDeploymentAgentId pulumi.StringPtrInput
	// Possible values: Directly, SshTunnel, ProxyAgent.
	NetworkingMethod pulumi.StringPtrInput
	// The private link ID.
	PrivateLinkId pulumi.StringPtrInput
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region pulumi.StringPtrInput
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests pulumi.BoolPtrInput
	// The destination type id within the Fivetran system.
	Service pulumi.StringPtrInput
	// Destination setup status.
	SetupStatus pulumi.StringPtrInput
	// Determines the time zone for the Fivetran sync schedule.
	TimeZoneOffset pulumi.StringPtrInput
	Timeouts       DestinationTimeoutsPtrInput
	// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
	TrustCertificates pulumi.BoolPtrInput
	// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
	TrustFingerprints pulumi.BoolPtrInput
}

func (DestinationState) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationState)(nil)).Elem()
}

type destinationArgs struct {
	Config *DestinationConfig `pulumi:"config"`
	// Shift my UTC offset with daylight savings time (US Only)
	DaylightSavingTimeEnabled *bool `pulumi:"daylightSavingTimeEnabled"`
	// The unique identifier for the Group within the Fivetran system.
	GroupId string `pulumi:"groupId"`
	// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the
	// value is specified, the system will try to associate the connection with an existing agent.
	HybridDeploymentAgentId *string `pulumi:"hybridDeploymentAgentId"`
	// Possible values: Directly, SshTunnel, ProxyAgent.
	NetworkingMethod *string `pulumi:"networkingMethod"`
	// The private link ID.
	PrivateLinkId *string `pulumi:"privateLinkId"`
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region string `pulumi:"region"`
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests *bool `pulumi:"runSetupTests"`
	// The destination type id within the Fivetran system.
	Service string `pulumi:"service"`
	// Determines the time zone for the Fivetran sync schedule.
	TimeZoneOffset string               `pulumi:"timeZoneOffset"`
	Timeouts       *DestinationTimeouts `pulumi:"timeouts"`
	// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
	TrustCertificates *bool `pulumi:"trustCertificates"`
	// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
	TrustFingerprints *bool `pulumi:"trustFingerprints"`
}

// The set of arguments for constructing a Destination resource.
type DestinationArgs struct {
	Config DestinationConfigPtrInput
	// Shift my UTC offset with daylight savings time (US Only)
	DaylightSavingTimeEnabled pulumi.BoolPtrInput
	// The unique identifier for the Group within the Fivetran system.
	GroupId pulumi.StringInput
	// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the
	// value is specified, the system will try to associate the connection with an existing agent.
	HybridDeploymentAgentId pulumi.StringPtrInput
	// Possible values: Directly, SshTunnel, ProxyAgent.
	NetworkingMethod pulumi.StringPtrInput
	// The private link ID.
	PrivateLinkId pulumi.StringPtrInput
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region pulumi.StringInput
	// Specifies whether the setup tests should be run automatically. The default value is TRUE.
	RunSetupTests pulumi.BoolPtrInput
	// The destination type id within the Fivetran system.
	Service pulumi.StringInput
	// Determines the time zone for the Fivetran sync schedule.
	TimeZoneOffset pulumi.StringInput
	Timeouts       DestinationTimeoutsPtrInput
	// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
	TrustCertificates pulumi.BoolPtrInput
	// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
	// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
	// fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
	TrustFingerprints pulumi.BoolPtrInput
}

func (DestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationArgs)(nil)).Elem()
}

type DestinationInput interface {
	pulumi.Input

	ToDestinationOutput() DestinationOutput
	ToDestinationOutputWithContext(ctx context.Context) DestinationOutput
}

func (*Destination) ElementType() reflect.Type {
	return reflect.TypeOf((**Destination)(nil)).Elem()
}

func (i *Destination) ToDestinationOutput() DestinationOutput {
	return i.ToDestinationOutputWithContext(context.Background())
}

func (i *Destination) ToDestinationOutputWithContext(ctx context.Context) DestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationOutput)
}

// DestinationArrayInput is an input type that accepts DestinationArray and DestinationArrayOutput values.
// You can construct a concrete instance of `DestinationArrayInput` via:
//
//	DestinationArray{ DestinationArgs{...} }
type DestinationArrayInput interface {
	pulumi.Input

	ToDestinationArrayOutput() DestinationArrayOutput
	ToDestinationArrayOutputWithContext(context.Context) DestinationArrayOutput
}

type DestinationArray []DestinationInput

func (DestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Destination)(nil)).Elem()
}

func (i DestinationArray) ToDestinationArrayOutput() DestinationArrayOutput {
	return i.ToDestinationArrayOutputWithContext(context.Background())
}

func (i DestinationArray) ToDestinationArrayOutputWithContext(ctx context.Context) DestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationArrayOutput)
}

// DestinationMapInput is an input type that accepts DestinationMap and DestinationMapOutput values.
// You can construct a concrete instance of `DestinationMapInput` via:
//
//	DestinationMap{ "key": DestinationArgs{...} }
type DestinationMapInput interface {
	pulumi.Input

	ToDestinationMapOutput() DestinationMapOutput
	ToDestinationMapOutputWithContext(context.Context) DestinationMapOutput
}

type DestinationMap map[string]DestinationInput

func (DestinationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Destination)(nil)).Elem()
}

func (i DestinationMap) ToDestinationMapOutput() DestinationMapOutput {
	return i.ToDestinationMapOutputWithContext(context.Background())
}

func (i DestinationMap) ToDestinationMapOutputWithContext(ctx context.Context) DestinationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationMapOutput)
}

type DestinationOutput struct{ *pulumi.OutputState }

func (DestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Destination)(nil)).Elem()
}

func (o DestinationOutput) ToDestinationOutput() DestinationOutput {
	return o
}

func (o DestinationOutput) ToDestinationOutputWithContext(ctx context.Context) DestinationOutput {
	return o
}

func (o DestinationOutput) Config() DestinationConfigPtrOutput {
	return o.ApplyT(func(v *Destination) DestinationConfigPtrOutput { return v.Config }).(DestinationConfigPtrOutput)
}

// Shift my UTC offset with daylight savings time (US Only)
func (o DestinationOutput) DaylightSavingTimeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Destination) pulumi.BoolOutput { return v.DaylightSavingTimeEnabled }).(pulumi.BoolOutput)
}

// The unique identifier for the Group within the Fivetran system.
func (o DestinationOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Destination) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// The hybrid deployment agent ID that refers to the controller created for the group the connection belongs to. If the
// value is specified, the system will try to associate the connection with an existing agent.
func (o DestinationOutput) HybridDeploymentAgentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Destination) pulumi.StringPtrOutput { return v.HybridDeploymentAgentId }).(pulumi.StringPtrOutput)
}

// Possible values: Directly, SshTunnel, ProxyAgent.
func (o DestinationOutput) NetworkingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Destination) pulumi.StringOutput { return v.NetworkingMethod }).(pulumi.StringOutput)
}

// The private link ID.
func (o DestinationOutput) PrivateLinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Destination) pulumi.StringPtrOutput { return v.PrivateLinkId }).(pulumi.StringPtrOutput)
}

// Data processing location. This is where Fivetran will operate and run computation on data.
func (o DestinationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Destination) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies whether the setup tests should be run automatically. The default value is TRUE.
func (o DestinationOutput) RunSetupTests() pulumi.BoolOutput {
	return o.ApplyT(func(v *Destination) pulumi.BoolOutput { return v.RunSetupTests }).(pulumi.BoolOutput)
}

// The destination type id within the Fivetran system.
func (o DestinationOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *Destination) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

// Destination setup status.
func (o DestinationOutput) SetupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Destination) pulumi.StringOutput { return v.SetupStatus }).(pulumi.StringOutput)
}

// Determines the time zone for the Fivetran sync schedule.
func (o DestinationOutput) TimeZoneOffset() pulumi.StringOutput {
	return o.ApplyT(func(v *Destination) pulumi.StringOutput { return v.TimeZoneOffset }).(pulumi.StringOutput)
}

func (o DestinationOutput) Timeouts() DestinationTimeoutsPtrOutput {
	return o.ApplyT(func(v *Destination) DestinationTimeoutsPtrOutput { return v.Timeouts }).(DestinationTimeoutsPtrOutput)
}

// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
// certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
func (o DestinationOutput) TrustCertificates() pulumi.BoolOutput {
	return o.ApplyT(func(v *Destination) pulumi.BoolOutput { return v.TrustCertificates }).(pulumi.BoolOutput)
}

// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
// trusted automatically, it has to be approved with [Certificates Management API Approve a destination
// fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
func (o DestinationOutput) TrustFingerprints() pulumi.BoolOutput {
	return o.ApplyT(func(v *Destination) pulumi.BoolOutput { return v.TrustFingerprints }).(pulumi.BoolOutput)
}

type DestinationArrayOutput struct{ *pulumi.OutputState }

func (DestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Destination)(nil)).Elem()
}

func (o DestinationArrayOutput) ToDestinationArrayOutput() DestinationArrayOutput {
	return o
}

func (o DestinationArrayOutput) ToDestinationArrayOutputWithContext(ctx context.Context) DestinationArrayOutput {
	return o
}

func (o DestinationArrayOutput) Index(i pulumi.IntInput) DestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Destination {
		return vs[0].([]*Destination)[vs[1].(int)]
	}).(DestinationOutput)
}

type DestinationMapOutput struct{ *pulumi.OutputState }

func (DestinationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Destination)(nil)).Elem()
}

func (o DestinationMapOutput) ToDestinationMapOutput() DestinationMapOutput {
	return o
}

func (o DestinationMapOutput) ToDestinationMapOutputWithContext(ctx context.Context) DestinationMapOutput {
	return o
}

func (o DestinationMapOutput) MapIndex(k pulumi.StringInput) DestinationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Destination {
		return vs[0].(map[string]*Destination)[vs[1].(string)]
	}).(DestinationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationInput)(nil)).Elem(), &Destination{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationArrayInput)(nil)).Elem(), DestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationMapInput)(nil)).Elem(), DestinationMap{})
	pulumi.RegisterOutputType(DestinationOutput{})
	pulumi.RegisterOutputType(DestinationArrayOutput{})
	pulumi.RegisterOutputType(DestinationMapOutput{})
}
