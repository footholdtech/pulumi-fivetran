// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns a connection membership within team object.
func GetTeamConnectionMemberships(ctx *pulumi.Context, args *GetTeamConnectionMembershipsArgs, opts ...pulumi.InvokeOption) (*GetTeamConnectionMembershipsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTeamConnectionMembershipsResult
	err := ctx.Invoke("fivetran:index/getTeamConnectionMemberships:getTeamConnectionMemberships", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTeamConnectionMemberships.
type GetTeamConnectionMembershipsArgs struct {
	Connections []GetTeamConnectionMembershipsConnection `pulumi:"connections"`
	// The unique identifier for the team within your account.
	Id string `pulumi:"id"`
}

// A collection of values returned by getTeamConnectionMemberships.
type GetTeamConnectionMembershipsResult struct {
	Connections []GetTeamConnectionMembershipsConnection `pulumi:"connections"`
	// The unique identifier for the team within your account.
	Id string `pulumi:"id"`
}

func GetTeamConnectionMembershipsOutput(ctx *pulumi.Context, args GetTeamConnectionMembershipsOutputArgs, opts ...pulumi.InvokeOption) GetTeamConnectionMembershipsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTeamConnectionMembershipsResultOutput, error) {
			args := v.(GetTeamConnectionMembershipsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fivetran:index/getTeamConnectionMemberships:getTeamConnectionMemberships", args, GetTeamConnectionMembershipsResultOutput{}, options).(GetTeamConnectionMembershipsResultOutput), nil
		}).(GetTeamConnectionMembershipsResultOutput)
}

// A collection of arguments for invoking getTeamConnectionMemberships.
type GetTeamConnectionMembershipsOutputArgs struct {
	Connections GetTeamConnectionMembershipsConnectionArrayInput `pulumi:"connections"`
	// The unique identifier for the team within your account.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetTeamConnectionMembershipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamConnectionMembershipsArgs)(nil)).Elem()
}

// A collection of values returned by getTeamConnectionMemberships.
type GetTeamConnectionMembershipsResultOutput struct{ *pulumi.OutputState }

func (GetTeamConnectionMembershipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamConnectionMembershipsResult)(nil)).Elem()
}

func (o GetTeamConnectionMembershipsResultOutput) ToGetTeamConnectionMembershipsResultOutput() GetTeamConnectionMembershipsResultOutput {
	return o
}

func (o GetTeamConnectionMembershipsResultOutput) ToGetTeamConnectionMembershipsResultOutputWithContext(ctx context.Context) GetTeamConnectionMembershipsResultOutput {
	return o
}

func (o GetTeamConnectionMembershipsResultOutput) Connections() GetTeamConnectionMembershipsConnectionArrayOutput {
	return o.ApplyT(func(v GetTeamConnectionMembershipsResult) []GetTeamConnectionMembershipsConnection {
		return v.Connections
	}).(GetTeamConnectionMembershipsConnectionArrayOutput)
}

// The unique identifier for the team within your account.
func (o GetTeamConnectionMembershipsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamConnectionMembershipsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTeamConnectionMembershipsResultOutput{})
}
