// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"errors"
	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows you to create, update, and delete private links.
type PrivateLink struct {
	pulumi.CustomResourceState

	// The cloud provider name.
	CloudProvider pulumi.StringOutput `pulumi:"cloudProvider"`
	// Configuration.
	ConfigMap pulumi.StringMapOutput `pulumi:"configMap"`
	// The date and time the membership was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The unique identifier for the User within the Fivetran system.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The private link name within the account. The name must start with a letter or underscore and can only contain letters,
	// numbers, or underscores. Maximum size of name is 23 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region pulumi.StringOutput `pulumi:"region"`
	// Service type.
	Service pulumi.StringOutput `pulumi:"service"`
	// The state of the private link.
	State pulumi.StringOutput `pulumi:"state"`
	// The state of the private link.
	StateSummary pulumi.StringOutput `pulumi:"stateSummary"`
}

// NewPrivateLink registers a new resource with the given unique name, arguments, and options.
func NewPrivateLink(ctx *pulumi.Context,
	name string, args *PrivateLinkArgs, opts ...pulumi.ResourceOption) (*PrivateLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigMap == nil {
		return nil, errors.New("invalid value for required argument 'ConfigMap'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateLink
	err := ctx.RegisterResource("fivetran:index/privateLink:PrivateLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateLink gets an existing PrivateLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateLinkState, opts ...pulumi.ResourceOption) (*PrivateLink, error) {
	var resource PrivateLink
	err := ctx.ReadResource("fivetran:index/privateLink:PrivateLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateLink resources.
type privateLinkState struct {
	// The cloud provider name.
	CloudProvider *string `pulumi:"cloudProvider"`
	// Configuration.
	ConfigMap map[string]string `pulumi:"configMap"`
	// The date and time the membership was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The unique identifier for the User within the Fivetran system.
	CreatedBy *string `pulumi:"createdBy"`
	// The private link name within the account. The name must start with a letter or underscore and can only contain letters,
	// numbers, or underscores. Maximum size of name is 23 characters.
	Name *string `pulumi:"name"`
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region *string `pulumi:"region"`
	// Service type.
	Service *string `pulumi:"service"`
	// The state of the private link.
	State *string `pulumi:"state"`
	// The state of the private link.
	StateSummary *string `pulumi:"stateSummary"`
}

type PrivateLinkState struct {
	// The cloud provider name.
	CloudProvider pulumi.StringPtrInput
	// Configuration.
	ConfigMap pulumi.StringMapInput
	// The date and time the membership was created.
	CreatedAt pulumi.StringPtrInput
	// The unique identifier for the User within the Fivetran system.
	CreatedBy pulumi.StringPtrInput
	// The private link name within the account. The name must start with a letter or underscore and can only contain letters,
	// numbers, or underscores. Maximum size of name is 23 characters.
	Name pulumi.StringPtrInput
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region pulumi.StringPtrInput
	// Service type.
	Service pulumi.StringPtrInput
	// The state of the private link.
	State pulumi.StringPtrInput
	// The state of the private link.
	StateSummary pulumi.StringPtrInput
}

func (PrivateLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkState)(nil)).Elem()
}

type privateLinkArgs struct {
	// Configuration.
	ConfigMap map[string]string `pulumi:"configMap"`
	// The private link name within the account. The name must start with a letter or underscore and can only contain letters,
	// numbers, or underscores. Maximum size of name is 23 characters.
	Name *string `pulumi:"name"`
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region string `pulumi:"region"`
	// Service type.
	Service string `pulumi:"service"`
}

// The set of arguments for constructing a PrivateLink resource.
type PrivateLinkArgs struct {
	// Configuration.
	ConfigMap pulumi.StringMapInput
	// The private link name within the account. The name must start with a letter or underscore and can only contain letters,
	// numbers, or underscores. Maximum size of name is 23 characters.
	Name pulumi.StringPtrInput
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region pulumi.StringInput
	// Service type.
	Service pulumi.StringInput
}

func (PrivateLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkArgs)(nil)).Elem()
}

type PrivateLinkInput interface {
	pulumi.Input

	ToPrivateLinkOutput() PrivateLinkOutput
	ToPrivateLinkOutputWithContext(ctx context.Context) PrivateLinkOutput
}

func (*PrivateLink) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLink)(nil)).Elem()
}

func (i *PrivateLink) ToPrivateLinkOutput() PrivateLinkOutput {
	return i.ToPrivateLinkOutputWithContext(context.Background())
}

func (i *PrivateLink) ToPrivateLinkOutputWithContext(ctx context.Context) PrivateLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkOutput)
}

// PrivateLinkArrayInput is an input type that accepts PrivateLinkArray and PrivateLinkArrayOutput values.
// You can construct a concrete instance of `PrivateLinkArrayInput` via:
//
//	PrivateLinkArray{ PrivateLinkArgs{...} }
type PrivateLinkArrayInput interface {
	pulumi.Input

	ToPrivateLinkArrayOutput() PrivateLinkArrayOutput
	ToPrivateLinkArrayOutputWithContext(context.Context) PrivateLinkArrayOutput
}

type PrivateLinkArray []PrivateLinkInput

func (PrivateLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLink)(nil)).Elem()
}

func (i PrivateLinkArray) ToPrivateLinkArrayOutput() PrivateLinkArrayOutput {
	return i.ToPrivateLinkArrayOutputWithContext(context.Background())
}

func (i PrivateLinkArray) ToPrivateLinkArrayOutputWithContext(ctx context.Context) PrivateLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkArrayOutput)
}

// PrivateLinkMapInput is an input type that accepts PrivateLinkMap and PrivateLinkMapOutput values.
// You can construct a concrete instance of `PrivateLinkMapInput` via:
//
//	PrivateLinkMap{ "key": PrivateLinkArgs{...} }
type PrivateLinkMapInput interface {
	pulumi.Input

	ToPrivateLinkMapOutput() PrivateLinkMapOutput
	ToPrivateLinkMapOutputWithContext(context.Context) PrivateLinkMapOutput
}

type PrivateLinkMap map[string]PrivateLinkInput

func (PrivateLinkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLink)(nil)).Elem()
}

func (i PrivateLinkMap) ToPrivateLinkMapOutput() PrivateLinkMapOutput {
	return i.ToPrivateLinkMapOutputWithContext(context.Background())
}

func (i PrivateLinkMap) ToPrivateLinkMapOutputWithContext(ctx context.Context) PrivateLinkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkMapOutput)
}

type PrivateLinkOutput struct{ *pulumi.OutputState }

func (PrivateLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLink)(nil)).Elem()
}

func (o PrivateLinkOutput) ToPrivateLinkOutput() PrivateLinkOutput {
	return o
}

func (o PrivateLinkOutput) ToPrivateLinkOutputWithContext(ctx context.Context) PrivateLinkOutput {
	return o
}

// The cloud provider name.
func (o PrivateLinkOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLink) pulumi.StringOutput { return v.CloudProvider }).(pulumi.StringOutput)
}

// Configuration.
func (o PrivateLinkOutput) ConfigMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivateLink) pulumi.StringMapOutput { return v.ConfigMap }).(pulumi.StringMapOutput)
}

// The date and time the membership was created.
func (o PrivateLinkOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLink) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The unique identifier for the User within the Fivetran system.
func (o PrivateLinkOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLink) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The private link name within the account. The name must start with a letter or underscore and can only contain letters,
// numbers, or underscores. Maximum size of name is 23 characters.
func (o PrivateLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Data processing location. This is where Fivetran will operate and run computation on data.
func (o PrivateLinkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLink) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Service type.
func (o PrivateLinkOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLink) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

// The state of the private link.
func (o PrivateLinkOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLink) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The state of the private link.
func (o PrivateLinkOutput) StateSummary() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLink) pulumi.StringOutput { return v.StateSummary }).(pulumi.StringOutput)
}

type PrivateLinkArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLink)(nil)).Elem()
}

func (o PrivateLinkArrayOutput) ToPrivateLinkArrayOutput() PrivateLinkArrayOutput {
	return o
}

func (o PrivateLinkArrayOutput) ToPrivateLinkArrayOutputWithContext(ctx context.Context) PrivateLinkArrayOutput {
	return o
}

func (o PrivateLinkArrayOutput) Index(i pulumi.IntInput) PrivateLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateLink {
		return vs[0].([]*PrivateLink)[vs[1].(int)]
	}).(PrivateLinkOutput)
}

type PrivateLinkMapOutput struct{ *pulumi.OutputState }

func (PrivateLinkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLink)(nil)).Elem()
}

func (o PrivateLinkMapOutput) ToPrivateLinkMapOutput() PrivateLinkMapOutput {
	return o
}

func (o PrivateLinkMapOutput) ToPrivateLinkMapOutputWithContext(ctx context.Context) PrivateLinkMapOutput {
	return o
}

func (o PrivateLinkMapOutput) MapIndex(k pulumi.StringInput) PrivateLinkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateLink {
		return vs[0].(map[string]*PrivateLink)[vs[1].(string)]
	}).(PrivateLinkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkInput)(nil)).Elem(), &PrivateLink{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkArrayInput)(nil)).Elem(), PrivateLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkMapInput)(nil)).Elem(), PrivateLinkMap{})
	pulumi.RegisterOutputType(PrivateLinkOutput{})
	pulumi.RegisterOutputType(PrivateLinkArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkMapOutput{})
}
