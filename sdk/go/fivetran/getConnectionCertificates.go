// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns a list of SSH fingerprints approved for specified connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetConnectionCertificates(ctx, &fivetran.GetConnectionCertificatesArgs{
//				Id: "connection_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConnectionCertificates(ctx *pulumi.Context, args *GetConnectionCertificatesArgs, opts ...pulumi.InvokeOption) (*GetConnectionCertificatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectionCertificatesResult
	err := ctx.Invoke("fivetran:index/getConnectionCertificates:getConnectionCertificates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectionCertificates.
type GetConnectionCertificatesArgs struct {
	Certificates []GetConnectionCertificatesCertificate `pulumi:"certificates"`
	// The unique identifier for the target connection within the Fivetran system.
	Id string `pulumi:"id"`
}

// A collection of values returned by getConnectionCertificates.
type GetConnectionCertificatesResult struct {
	Certificates []GetConnectionCertificatesCertificate `pulumi:"certificates"`
	// The unique identifier for the target connection within the Fivetran system.
	Id string `pulumi:"id"`
}

func GetConnectionCertificatesOutput(ctx *pulumi.Context, args GetConnectionCertificatesOutputArgs, opts ...pulumi.InvokeOption) GetConnectionCertificatesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetConnectionCertificatesResultOutput, error) {
			args := v.(GetConnectionCertificatesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fivetran:index/getConnectionCertificates:getConnectionCertificates", args, GetConnectionCertificatesResultOutput{}, options).(GetConnectionCertificatesResultOutput), nil
		}).(GetConnectionCertificatesResultOutput)
}

// A collection of arguments for invoking getConnectionCertificates.
type GetConnectionCertificatesOutputArgs struct {
	Certificates GetConnectionCertificatesCertificateArrayInput `pulumi:"certificates"`
	// The unique identifier for the target connection within the Fivetran system.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetConnectionCertificatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionCertificatesArgs)(nil)).Elem()
}

// A collection of values returned by getConnectionCertificates.
type GetConnectionCertificatesResultOutput struct{ *pulumi.OutputState }

func (GetConnectionCertificatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionCertificatesResult)(nil)).Elem()
}

func (o GetConnectionCertificatesResultOutput) ToGetConnectionCertificatesResultOutput() GetConnectionCertificatesResultOutput {
	return o
}

func (o GetConnectionCertificatesResultOutput) ToGetConnectionCertificatesResultOutputWithContext(ctx context.Context) GetConnectionCertificatesResultOutput {
	return o
}

func (o GetConnectionCertificatesResultOutput) Certificates() GetConnectionCertificatesCertificateArrayOutput {
	return o.ApplyT(func(v GetConnectionCertificatesResult) []GetConnectionCertificatesCertificate { return v.Certificates }).(GetConnectionCertificatesCertificateArrayOutput)
}

// The unique identifier for the target connection within the Fivetran system.
func (o GetConnectionCertificatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionCertificatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionCertificatesResultOutput{})
}
