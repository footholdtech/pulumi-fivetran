// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source returns a list of SSH fingerprints approved for specified connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/footholdtech/pulumi-fivetran/sdk/go/fivetran"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetConnectionFingerprints(ctx, &fivetran.GetConnectionFingerprintsArgs{
//				Id: "connection_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConnectionFingerprints(ctx *pulumi.Context, args *GetConnectionFingerprintsArgs, opts ...pulumi.InvokeOption) (*GetConnectionFingerprintsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectionFingerprintsResult
	err := ctx.Invoke("fivetran:index/getConnectionFingerprints:getConnectionFingerprints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectionFingerprints.
type GetConnectionFingerprintsArgs struct {
	Fingerprints []GetConnectionFingerprintsFingerprint `pulumi:"fingerprints"`
	// The unique identifier for the target connection within the Fivetran system.
	Id string `pulumi:"id"`
}

// A collection of values returned by getConnectionFingerprints.
type GetConnectionFingerprintsResult struct {
	Fingerprints []GetConnectionFingerprintsFingerprint `pulumi:"fingerprints"`
	// The unique identifier for the target connection within the Fivetran system.
	Id string `pulumi:"id"`
}

func GetConnectionFingerprintsOutput(ctx *pulumi.Context, args GetConnectionFingerprintsOutputArgs, opts ...pulumi.InvokeOption) GetConnectionFingerprintsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetConnectionFingerprintsResultOutput, error) {
			args := v.(GetConnectionFingerprintsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fivetran:index/getConnectionFingerprints:getConnectionFingerprints", args, GetConnectionFingerprintsResultOutput{}, options).(GetConnectionFingerprintsResultOutput), nil
		}).(GetConnectionFingerprintsResultOutput)
}

// A collection of arguments for invoking getConnectionFingerprints.
type GetConnectionFingerprintsOutputArgs struct {
	Fingerprints GetConnectionFingerprintsFingerprintArrayInput `pulumi:"fingerprints"`
	// The unique identifier for the target connection within the Fivetran system.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetConnectionFingerprintsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionFingerprintsArgs)(nil)).Elem()
}

// A collection of values returned by getConnectionFingerprints.
type GetConnectionFingerprintsResultOutput struct{ *pulumi.OutputState }

func (GetConnectionFingerprintsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionFingerprintsResult)(nil)).Elem()
}

func (o GetConnectionFingerprintsResultOutput) ToGetConnectionFingerprintsResultOutput() GetConnectionFingerprintsResultOutput {
	return o
}

func (o GetConnectionFingerprintsResultOutput) ToGetConnectionFingerprintsResultOutputWithContext(ctx context.Context) GetConnectionFingerprintsResultOutput {
	return o
}

func (o GetConnectionFingerprintsResultOutput) Fingerprints() GetConnectionFingerprintsFingerprintArrayOutput {
	return o.ApplyT(func(v GetConnectionFingerprintsResult) []GetConnectionFingerprintsFingerprint { return v.Fingerprints }).(GetConnectionFingerprintsFingerprintArrayOutput)
}

// The unique identifier for the target connection within the Fivetran system.
func (o GetConnectionFingerprintsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionFingerprintsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionFingerprintsResultOutput{})
}
