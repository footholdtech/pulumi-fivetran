# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetConnectorsResult',
    'AwaitableGetConnectorsResult',
    'get_connectors',
    'get_connectors_output',
]

@pulumi.output_type
class GetConnectorsResult:
    """
    A collection of values returned by getConnectors.
    """
    def __init__(__self__, connectors=None, id=None):
        if connectors and not isinstance(connectors, list):
            raise TypeError("Expected argument 'connectors' to be a list")
        pulumi.set(__self__, "connectors", connectors)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def connectors(self) -> Optional[Sequence['outputs.GetConnectorsConnectorResult']]:
        return pulumi.get(self, "connectors")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetConnectorsResult(GetConnectorsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetConnectorsResult(
            connectors=self.connectors,
            id=self.id)


def get_connectors(connectors: Optional[Sequence[Union['GetConnectorsConnectorArgs', 'GetConnectorsConnectorArgsDict']]] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetConnectorsResult:
    """
    This data source returns list of connector objects.
    """
    __args__ = dict()
    __args__['connectors'] = connectors
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fivetran:index/getConnectors:getConnectors', __args__, opts=opts, typ=GetConnectorsResult).value

    return AwaitableGetConnectorsResult(
        connectors=pulumi.get(__ret__, 'connectors'),
        id=pulumi.get(__ret__, 'id'))
def get_connectors_output(connectors: Optional[pulumi.Input[Optional[Sequence[Union['GetConnectorsConnectorArgs', 'GetConnectorsConnectorArgsDict']]]]] = None,
                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetConnectorsResult]:
    """
    This data source returns list of connector objects.
    """
    __args__ = dict()
    __args__['connectors'] = connectors
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('fivetran:index/getConnectors:getConnectors', __args__, opts=opts, typ=GetConnectorsResult)
    return __ret__.apply(lambda __response__: GetConnectorsResult(
        connectors=pulumi.get(__response__, 'connectors'),
        id=pulumi.get(__response__, 'id')))
