# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetDestinationsResult',
    'AwaitableGetDestinationsResult',
    'get_destinations',
    'get_destinations_output',
]

@pulumi.output_type
class GetDestinationsResult:
    """
    A collection of values returned by getDestinations.
    """
    def __init__(__self__, destinations=None, id=None):
        if destinations and not isinstance(destinations, list):
            raise TypeError("Expected argument 'destinations' to be a list")
        pulumi.set(__self__, "destinations", destinations)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def destinations(self) -> Optional[Sequence['outputs.GetDestinationsDestinationResult']]:
        return pulumi.get(self, "destinations")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetDestinationsResult(GetDestinationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDestinationsResult(
            destinations=self.destinations,
            id=self.id)


def get_destinations(destinations: Optional[Sequence[Union['GetDestinationsDestinationArgs', 'GetDestinationsDestinationArgsDict']]] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDestinationsResult:
    """
    This data source returns list of destination objects.
    """
    __args__ = dict()
    __args__['destinations'] = destinations
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fivetran:index/getDestinations:getDestinations', __args__, opts=opts, typ=GetDestinationsResult).value

    return AwaitableGetDestinationsResult(
        destinations=pulumi.get(__ret__, 'destinations'),
        id=pulumi.get(__ret__, 'id'))
def get_destinations_output(destinations: Optional[pulumi.Input[Optional[Sequence[Union['GetDestinationsDestinationArgs', 'GetDestinationsDestinationArgsDict']]]]] = None,
                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDestinationsResult]:
    """
    This data source returns list of destination objects.
    """
    __args__ = dict()
    __args__['destinations'] = destinations
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('fivetran:index/getDestinations:getDestinations', __args__, opts=opts, typ=GetDestinationsResult)
    return __ret__.apply(lambda __response__: GetDestinationsResult(
        destinations=pulumi.get(__response__, 'destinations'),
        id=pulumi.get(__response__, 'id')))
