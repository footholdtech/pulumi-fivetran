# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetTeamConnectionMembershipsResult',
    'AwaitableGetTeamConnectionMembershipsResult',
    'get_team_connection_memberships',
    'get_team_connection_memberships_output',
]

@pulumi.output_type
class GetTeamConnectionMembershipsResult:
    """
    A collection of values returned by getTeamConnectionMemberships.
    """
    def __init__(__self__, connections=None, id=None):
        if connections and not isinstance(connections, list):
            raise TypeError("Expected argument 'connections' to be a list")
        pulumi.set(__self__, "connections", connections)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def connections(self) -> Optional[Sequence['outputs.GetTeamConnectionMembershipsConnectionResult']]:
        return pulumi.get(self, "connections")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The unique identifier for the team within your account.
        """
        return pulumi.get(self, "id")


class AwaitableGetTeamConnectionMembershipsResult(GetTeamConnectionMembershipsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTeamConnectionMembershipsResult(
            connections=self.connections,
            id=self.id)


def get_team_connection_memberships(connections: Optional[Sequence[Union['GetTeamConnectionMembershipsConnectionArgs', 'GetTeamConnectionMembershipsConnectionArgsDict']]] = None,
                                    id: Optional[builtins.str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTeamConnectionMembershipsResult:
    """
    This data source returns a connection membership within team object.


    :param builtins.str id: The unique identifier for the team within your account.
    """
    __args__ = dict()
    __args__['connections'] = connections
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fivetran:index/getTeamConnectionMemberships:getTeamConnectionMemberships', __args__, opts=opts, typ=GetTeamConnectionMembershipsResult).value

    return AwaitableGetTeamConnectionMembershipsResult(
        connections=pulumi.get(__ret__, 'connections'),
        id=pulumi.get(__ret__, 'id'))
def get_team_connection_memberships_output(connections: Optional[pulumi.Input[Optional[Sequence[Union['GetTeamConnectionMembershipsConnectionArgs', 'GetTeamConnectionMembershipsConnectionArgsDict']]]]] = None,
                                           id: Optional[pulumi.Input[builtins.str]] = None,
                                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTeamConnectionMembershipsResult]:
    """
    This data source returns a connection membership within team object.


    :param builtins.str id: The unique identifier for the team within your account.
    """
    __args__ = dict()
    __args__['connections'] = connections
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('fivetran:index/getTeamConnectionMemberships:getTeamConnectionMemberships', __args__, opts=opts, typ=GetTeamConnectionMembershipsResult)
    return __ret__.apply(lambda __response__: GetTeamConnectionMembershipsResult(
        connections=pulumi.get(__response__, 'connections'),
        id=pulumi.get(__response__, 'id')))
