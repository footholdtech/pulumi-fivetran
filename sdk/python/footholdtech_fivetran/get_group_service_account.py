# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetGroupServiceAccountResult',
    'AwaitableGetGroupServiceAccountResult',
    'get_group_service_account',
    'get_group_service_account_output',
]

@pulumi.output_type
class GetGroupServiceAccountResult:
    """
    A collection of values returned by getGroupServiceAccount.
    """
    def __init__(__self__, id=None, service_account=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if service_account and not isinstance(service_account, str):
            raise TypeError("Expected argument 'service_account' to be a str")
        pulumi.set(__self__, "service_account", service_account)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The unique identifier for the group within the Fivetran system.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="serviceAccount")
    def service_account(self) -> str:
        """
        Fivetran service account associated with the group.
        """
        return pulumi.get(self, "service_account")


class AwaitableGetGroupServiceAccountResult(GetGroupServiceAccountResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGroupServiceAccountResult(
            id=self.id,
            service_account=self.service_account)


def get_group_service_account(id: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGroupServiceAccountResult:
    """
    This data source returns Fivetran service account associated with the group.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_fivetran as fivetran

    my_group_service_account = fivetran.get_group_service_account(id="group_id")
    ```


    :param str id: The unique identifier for the group within the Fivetran system.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fivetran:index/getGroupServiceAccount:getGroupServiceAccount', __args__, opts=opts, typ=GetGroupServiceAccountResult).value

    return AwaitableGetGroupServiceAccountResult(
        id=pulumi.get(__ret__, 'id'),
        service_account=pulumi.get(__ret__, 'service_account'))


@_utilities.lift_output_func(get_group_service_account)
def get_group_service_account_output(id: Optional[pulumi.Input[str]] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGroupServiceAccountResult]:
    """
    This data source returns Fivetran service account associated with the group.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_fivetran as fivetran

    my_group_service_account = fivetran.get_group_service_account(id="group_id")
    ```


    :param str id: The unique identifier for the group within the Fivetran system.
    """
    ...
