# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetQuickstartPackagesResult',
    'AwaitableGetQuickstartPackagesResult',
    'get_quickstart_packages',
    'get_quickstart_packages_output',
]

@pulumi.output_type
class GetQuickstartPackagesResult:
    """
    A collection of values returned by getQuickstartPackages.
    """
    def __init__(__self__, id=None, packages=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if packages and not isinstance(packages, list):
            raise TypeError("Expected argument 'packages' to be a list")
        pulumi.set(__self__, "packages", packages)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def packages(self) -> Optional[Sequence['outputs.GetQuickstartPackagesPackageResult']]:
        return pulumi.get(self, "packages")


class AwaitableGetQuickstartPackagesResult(GetQuickstartPackagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetQuickstartPackagesResult(
            id=self.id,
            packages=self.packages)


def get_quickstart_packages(packages: Optional[Sequence[Union['GetQuickstartPackagesPackageArgs', 'GetQuickstartPackagesPackageArgsDict']]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetQuickstartPackagesResult:
    """
    Returns a list of available Quickstart transformation package metadata details

    ## Example Usage

    ```python
    import pulumi
    import pulumi_fivetran as fivetran

    all_packages_metadata = fivetran.get_quickstart_packages()
    ```
    """
    __args__ = dict()
    __args__['packages'] = packages
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fivetran:index/getQuickstartPackages:getQuickstartPackages', __args__, opts=opts, typ=GetQuickstartPackagesResult).value

    return AwaitableGetQuickstartPackagesResult(
        id=pulumi.get(__ret__, 'id'),
        packages=pulumi.get(__ret__, 'packages'))
def get_quickstart_packages_output(packages: Optional[pulumi.Input[Optional[Sequence[Union['GetQuickstartPackagesPackageArgs', 'GetQuickstartPackagesPackageArgsDict']]]]] = None,
                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetQuickstartPackagesResult]:
    """
    Returns a list of available Quickstart transformation package metadata details

    ## Example Usage

    ```python
    import pulumi
    import pulumi_fivetran as fivetran

    all_packages_metadata = fivetran.get_quickstart_packages()
    ```
    """
    __args__ = dict()
    __args__['packages'] = packages
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('fivetran:index/getQuickstartPackages:getQuickstartPackages', __args__, opts=opts, typ=GetQuickstartPackagesResult)
    return __ret__.apply(lambda __response__: GetQuickstartPackagesResult(
        id=pulumi.get(__response__, 'id'),
        packages=pulumi.get(__response__, 'packages')))
