name: release
on:
  push:
    tags:
      - v*.*.*
      - "!v*.*.*-**"

permissions:
  contents: write

env:
  PROVIDER: fivetran
  DOTNETVERSION: |
    6.0.x
    3.1.301
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GOVERSION: 1.21.x
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NODEVERSION: 20.x
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  PYPI_USERNAME: __token__
  PYTHONVERSION: "3.11"
jobs:
  build_sdk:
    name: build_sdk
    needs: prerequisites
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout Scripts Repo
        uses: actions/checkout@v4
        with:
          path: ci-scripts
          repository: pulumi/scripts
          ref: deca2c5c6015ad7aaea6f572a1c2b198ca323592
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: |
            sdk/go.sum
          go-version: 1.21.x
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          tag: v0.0.46
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/actions@v5
        with:
          pulumi-version: ^3
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODEVERSION }}
          registry-url: https://registry.npmjs.org
      - name: Download provider + tfgen binaries
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PROVIDER }}-provider.tar.gz
          path: ${{ github.workspace }}/bin
      - name: Untar provider binaries
        run: >-
          tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
          github.workspace}}/bin
          
          find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print -exec chmod +x {} \;
      - name: Install plugins
        run: make install_plugins
      - name: Update path
        run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
      - name: Set PACKAGE_VERSION to Env
        run: echo "PACKAGE_VERSION=$(pulumictl get version --language generic)" >>
          "$GITHUB_ENV"
      - name: Build SDK
        run: make build_${{ matrix.language }}
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - name: Compress SDK folder
        run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
    strategy:
      fail-fast: true
      matrix:
        language:
          - nodejs
          - go
  prerequisites:
    name: prerequisites
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout Scripts Repo
        uses: actions/checkout@v4
        with:
          path: ci-scripts
          repository: pulumi/scripts
          ref: deca2c5c6015ad7aaea6f572a1c2b198ca323592
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.x
          cache-dependency-path: |
            sdk/*.sum
            provider/*.sum
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          tag: v0.0.46
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/actions@v5
        with:
          pulumi-version: ^3
      - if: github.event_name == 'pull_request'
        name: Install Schema Tools
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          repo: pulumi/schema-tools
      - name: Build tfgen & provider binaries
        run: make provider
      - if: github.event_name == 'pull_request'
        name: Check Schema is Valid
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "SCHEMA_CHANGES<<$EOF";
            schema-tools compare -p ${{ env.PROVIDER }} -o ${{ github.event.repository.default_branch }} -n --local-path=provider/cmd/pulumi-resource-${{ env.PROVIDER }}/schema.json;
            echo "$EOF";
          } >> "$GITHUB_ENV"
      - if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
        name: Comment on PR with Details of Schema Check
        uses: thollander/actions-comment-pull-request@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          comment_tag: schemaCheck
          message: >+
            ### Does the PR have any schema changes?
            
            
            ${{ env.SCHEMA_CHANGES }}
            
            
            Maintainer note: consult the [runbook](https://github.com/pulumi/platform-providers-team/blob/main/playbooks/tf-provider-updating.md) for dealing with any breaking changes.

      - name: Tar provider binaries
        run: tar -zcf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
          github.workspace }}/bin/ pulumi-resource-${{ env.PROVIDER }}
          pulumi-tfgen-${{ env.PROVIDER }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROVIDER }}-provider.tar.gz
          path: ${{ github.workspace }}/bin/provider.tar.gz
          retention-days: 30
  publish:
    name: publish
    needs: build_sdk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: |
            sdk/go.sum
          go-version: 1.21.x
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          tag: v0.0.46
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/actions@v5
        with:
          pulumi-version: ^3
      - name: Set PreRelease Version
        run: echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> "$GITHUB_ENV"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          args: -p 3 release --rm-dist --timeout 60m0s
          version: latest
  tag_sdk:
    name: tag_sdk
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          tag: v0.0.46
          repo: pulumi/pulumictl
      - name: Add SDK version tag
        run: git tag "sdk/v$(pulumictl get version --language generic)" && git push origin
          "sdk/v$(pulumictl get version --language generic)"
